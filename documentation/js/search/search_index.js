var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AccessGuard.html",[0,2.704,1,3.049]],["body/guards/AccessGuard.html",[0,3.227,1,4.678,2,0.233,3,0.233,4,0.203,5,4.264,6,0.203,7,1.09,8,6.613,9,0.899,10,2.47,11,1.888,12,4.319,13,0.908,14,4.264,15,1.295,16,0.022,17,0.966,18,0.339,19,0.966,20,1.914,21,4.264,22,6.393,23,3.043,24,6.613,25,4.264,26,2.579,27,1.127,28,2.579,29,3.261,30,0.838,31,1.619,32,0.621,33,2.295,34,3.639,35,4.264,36,3.227,37,2.142,38,4.264,39,1.408,40,2.675,41,2.295,42,0.233,43,0.36,44,1.127,45,1.259,46,1.671,47,3.639,48,4.149,49,4.264,50,2.92,51,4.264,52,2.675,53,1.066,54,2.675,55,2.675,56,1.066,57,3.639,58,3.639,59,4.264,60,4.264,61,4.264,62,4.264,63,3.639,64,4.264,65,2.47,66,0.016,67,0.016]],["title/classes/AddressModel.html",[43,0.302,68,2.447]],["body/classes/AddressModel.html",[2,0.261,3,0.261,4,0.228,6,0.228,13,1.154,16,0.021,18,0.431,19,1.038,23,3.348,42,0.261,43,0.497,66,0.017,67,0.017,68,4.033,69,4.079,70,0.801,71,3.135,72,5.686,73,6.662,74,6.662,75,6.662,76,1.3,77,4.779,78,4.779,79,1.993,80,4.779,81,4.779,82,4.779,83,4.779]],["title/components/AdminComponent.html",[84,0.36,85,0.944]],["body/components/AdminComponent.html",[2,0.167,3,0.167,4,0.146,6,0.146,7,0.871,9,0.646,10,1.776,11,1.647,13,1.105,15,0.724,16,0.022,17,0.983,18,0.365,19,0.54,20,1.53,27,0.983,30,0.707,32,0.446,39,1.012,42,0.167,43,0.259,44,1.158,45,0.905,56,1.095,66,0.013,67,0.013,70,0.596,71,2.061,76,1.159,84,0.594,85,1.474,86,1.071,87,1.071,88,1.071,89,2.616,90,1.596,91,1.012,92,2.099,93,1.978,94,3,95,1.367,96,4.38,97,1.367,98,4.38,99,4.221,100,5.576,101,4.759,102,4.759,103,5.576,104,5.576,105,4.759,106,5.576,107,1.741,108,4.38,109,3.065,110,1.647,111,3.065,112,3.065,113,3.065,114,3.065,115,3.065,116,3.476,117,1.012,118,1.012,119,3.065,120,3.065,121,1.133,122,2.616,123,3.065,124,3.065,125,2.616,126,3.065,127,1.89,128,3.065,129,3.065,130,5.576,131,3.065,132,2.616,133,3.065,134,2.616,135,3.065,136,3.065,137,2.616,138,2.616,139,3.065,140,3.738,141,3.848,142,3.738,143,2.538,144,3.738,145,3,146,2.538,147,3.315,148,3.738,149,4.38,150,0.957,151,1.53,152,1.293,153,1.947,154,1.071,155,0.856,156,1.071,157,1.071,158,0.856,159,1.071,160,0.81,161,0.81,162,1.071,163,0.81,164,1.071,165,0.81,166,1.071,167,0.81,168,1.071,169,0.856,170,1.071,171,0.81,172,1.071,173,0.81,174,1.071,175,0.856,176,1.071,177,0.856,178,1.071,179,0.81,180,1.071,181,0.81,182,1.071,183,0.81,184,1.071,185,0.81,186,1.071,187,1.012,188,0.81,189,1.012,190,1.071]],["title/interfaces/ApiError.html",[191,0.71,192,2.447]],["body/interfaces/ApiError.html",[2,0.223,3,0.223,4,0.194,6,0.194,16,0.022,18,0.444,19,0.938,27,1.045,42,0.291,50,2.791,53,1.33,54,3.339,66,0.016,67,0.016,70,0.724,76,1.179,79,1.85,191,1.058,192,3.645,193,3.085,194,3.085,195,5.229,196,4.195,197,5.707,198,5.322,199,6.284,200,3.339,201,5.322,202,3.645,203,4.029,204,4.047,205,4.543,206,3.339,207,4.543,208,5.322,209,4.543,210,3.645,211,5.322,212,4.059,213,4.029,214,5.322,215,3.339,216,4.757,217,5.059,218,5.322,219,4.075,220,3.478,221,3.478,222,3.478,223,3.478,224,4.543]],["title/components/AppComponent.html",[84,0.36,158,0.998]],["body/components/AppComponent.html",[2,0.211,3,0.211,4,0.184,6,0.184,7,1.02,13,1.019,15,0.911,16,0.022,17,1.084,18,0.357,19,0.68,27,0.68,30,0.489,32,0.561,41,2.762,42,0.211,43,0.326,56,1.283,66,0.015,67,0.015,70,0.698,76,1.203,84,0.644,85,1.019,86,1.346,87,1.346,88,1.346,91,1.273,92,2.153,93,2.042,95,1.602,97,1.602,110,1.139,117,1.273,118,1.273,150,1.204,151,1.792,152,1.515,153,2.148,154,1.346,155,1.077,156,1.346,157,1.346,158,1.718,159,1.346,160,1.019,161,1.019,162,1.346,163,1.019,164,1.346,165,1.019,166,1.346,167,1.019,168,1.346,169,1.077,170,1.346,171,1.019,172,1.346,173,1.019,174,1.346,175,1.077,176,1.346,177,1.077,178,1.346,179,1.019,180,1.346,181,1.019,182,1.346,183,1.019,184,1.346,185,1.019,186,1.346,187,1.273,188,1.019,189,1.273,190,1.346,225,3.29,226,5.131,227,5.131,228,5.248,229,3.563,230,6.149,231,5.131,232,5.131,233,3.855,234,3.29,235,3.855,236,3.855,237,3.855,238,3.855]],["title/modules/AppModule.html",[239,1.923,240,2.447]],["body/modules/AppModule.html",[2,0.142,3,0.142,4,0.124,11,1.71,16,0.022,30,0.921,32,0.378,39,1.535,42,0.212,43,0.22,65,2.25,66,0.011,67,0.011,85,1.53,93,0.727,121,0.962,150,0.812,155,1.617,158,1.843,160,1.53,163,1.53,165,1.53,167,1.53,169,1.617,171,1.53,173,1.53,175,1.617,177,1.617,179,1.53,181,1.53,183,1.53,185,1.53,188,1.53,213,4.177,215,3.632,239,2.091,240,5.067,241,1.631,242,3.519,243,3.904,244,2.219,245,2.219,246,2.219,247,2.219,248,2.219,249,3.632,250,2.909,251,3.965,252,3.632,253,2.407,254,3.315,255,2.219,256,1.507,257,2.601,258,3.884,259,3.315,260,1.969,261,3.884,262,2.601,263,3.315,264,4.649,265,3.884,266,2.219,267,3.884,268,3.884,269,1.969,270,2.219,271,2.601,272,2.219,273,2.219,274,2.219,275,2.219,276,2.219,277,1.781,278,2.219,279,2.219,280,2.601,281,3.884,282,2.601,283,1.781,284,2.601,285,2.219,286,2.601,287,2.601,288,2.601,289,2.601,290,2.601,291,1.4,292,2.601,293,3.315,294,1.781,295,1.969,296,4.649,297,1.507,298,2.601,299,1.969,300,2.601,301,2.219,302,2.219,303,2.601,304,2.219,305,1.4,306,2.219,307,2.601,308,2.601,309,2.219,310,2.219,311,1.781,312,2.219,313,2.219,314,1.781,315,2.219,316,3.315,317,2.219,318,2.219,319,2.601,320,2.601,321,2.601,322,2.601,323,2.601,324,2.219,325,3.884,326,3.884]],["title/modules/AppRoutingModule.html",[239,1.923,249,2.241]],["body/modules/AppRoutingModule.html",[2,0.205,3,0.205,4,0.179,16,0.022,26,2.985,30,0.909,32,0.546,33,2.019,42,0.311,43,0.426,66,0.015,67,0.015,84,0.71,85,1.331,94,2.569,152,1.108,155,1.407,160,1.331,161,0.991,163,1.331,165,1.331,167,1.331,173,1.331,175,1.407,179,1.331,181,1.331,185,1.331,239,2.019,242,2.839,249,3.16,263,4.3,272,3.201,273,3.201,274,3.201,275,3.201,276,3.201,277,2.569,278,3.201,279,3.201,285,3.201,301,3.201,302,3.201,309,3.201,310,3.201,311,2.569,312,3.201,313,3.201,314,2.569,315,3.201,327,3.751,328,3.751,329,5.038,330,3.201,331,5.038,332,2.019,333,3.751,334,3.751,335,3.201,336,2.839,337,3.751,338,3.751,339,2.839,340,3.201,341,1.31,342,7.099,343,3.751,344,3.751,345,5.038,346,3.896,347,3.751,348,2.353,349,2.173,350,3.751,351,3.201,352,1.765,353,2.839,354,3.751,355,2.839,356,3.751]],["title/injectables/AuthService.html",[31,1.055,250,1.795]],["body/injectables/AuthService.html",[2,0.15,3,0.15,4,0.131,6,0.131,7,0.803,9,0.851,11,1.562,13,0.876,15,1.133,16,0.022,17,0.845,18,0.296,19,0.845,20,1.847,27,1.127,28,2.256,29,2.581,30,0.81,31,1.416,32,0.399,36,2.073,37,1.376,39,0.904,40,1.718,41,1.475,42,0.15,43,0.231,46,1.878,47,2.338,53,1.525,54,1.718,66,0.012,67,0.012,76,1.176,110,0.809,127,1.013,196,2.532,204,3.535,209,4.514,210,2.764,229,3.864,250,2.028,293,2.338,294,3.623,297,2.339,341,1.674,348,3.007,349,1.587,355,4.004,357,2.338,358,4.091,359,6.101,360,2.073,361,3.827,362,2.739,363,4.036,364,5.289,365,2.739,366,4.452,367,2.739,368,4.036,369,2.739,370,2.073,371,4.004,372,5.289,373,2.739,374,2.073,375,2.338,376,1.718,377,2.073,378,2.739,379,2.739,380,2.739,381,2.532,382,4.036,383,2.739,384,2.739,385,2.739,386,2.739,387,2.739,388,2.739,389,1.718,390,2.739,391,1.376,392,1.21,393,2.338,394,4.036,395,2.739,396,3.055,397,4.036,398,4.036,399,5.289,400,4.036,401,4.036,402,4.036,403,4.036,404,4.036,405,4.036,406,4.036,407,4.036,408,4.036,409,4.036,410,4.036,411,4.036,412,4.036,413,4.036,414,4.036,415,4.036,416,4.036,417,4.036,418,3.445,419,4.036,420,4.036,421,4.036,422,4.036,423,3.445,424,5.289,425,4.036,426,4.036,427,4.036,428,2.739,429,4.036,430,5.289,431,3.283,432,4.793,433,5.289,434,2.739,435,2.338,436,2.739,437,2.739,438,2.739,439,2.739,440,2.739,441,2.739,442,1.876,443,2.739,444,2.739,445,2.073,446,2.739,447,2.739,448,3.445,449,2.739,450,2.739,451,2.073,452,2.739,453,2.739,454,2.739,455,2.739,456,1.587,457,2.739,458,1.475,459,2.739,460,2.739]],["title/classes/Car.html",[43,0.302,161,0.944]],["body/classes/Car.html",[2,0.254,3,0.254,4,0.222,6,0.222,13,1.125,16,0.022,18,0.42,30,0.734,42,0.254,43,0.489,53,1.162,66,0.017,67,0.017,70,0.787,76,1.22,79,2.161,161,1.829,456,3.823,461,3.967,462,3.477,463,4.519,464,6.92,465,4.519,466,4.649,467,3.631,468,4.649,469,4.649,470,2.915,471,4.649,472,4.649,473,3.967,474,3.967]],["title/components/CarRegistrationComponent.html",[84,0.36,160,0.944]],["body/components/CarRegistrationComponent.html",[2,0.135,3,0.135,4,0.118,6,0.118,7,0.744,9,0.522,10,1.434,11,1.486,13,1.105,15,0.585,16,0.022,17,0.887,18,0.384,19,0.436,20,1.307,27,1.002,28,2.367,30,0.638,32,0.36,39,0.817,42,0.135,43,0.209,44,0.989,45,0.731,53,1.555,56,0.936,66,0.011,67,0.011,70,0.509,76,1.002,79,1.774,84,0.544,85,0.654,86,0.865,87,0.865,88,0.865,90,1.409,91,0.817,92,2.04,93,1.919,95,1.169,97,1.169,107,1.571,110,1.596,117,0.817,118,0.817,121,0.915,150,0.773,151,1.307,152,1.105,153,1.757,154,0.865,155,0.692,156,0.865,157,0.865,158,0.692,159,0.865,160,1.33,161,1.87,162,0.865,163,0.654,164,0.865,165,0.654,166,0.865,167,0.654,168,0.865,169,0.692,170,0.865,171,0.654,172,0.865,173,0.654,174,0.865,175,0.692,176,0.865,177,0.692,178,0.865,179,0.654,180,0.865,181,0.654,182,0.865,183,0.654,184,0.865,185,0.654,186,0.865,187,0.817,188,0.654,189,0.817,190,0.865,200,2.348,311,4.608,341,1.576,392,1.094,418,3.194,456,2.915,462,1.881,463,3.446,465,3.446,475,5.743,476,2.113,477,3.743,478,3.743,479,3.743,480,5.031,481,4.294,482,4.294,483,5.031,484,4.294,485,5.031,486,5.031,487,5.031,488,5.031,489,5.031,490,5.031,491,3.743,492,2.475,493,2.475,494,2.475,495,2.475,496,2.475,497,2.227,498,2.475,499,2.475,500,2.475,501,2.475,502,2.475,503,2.475,504,2.475,505,2.475,506,1.029,507,1.434,508,2.615,509,2.113,510,3.743,511,1.881,512,4.513,513,2.475,514,2.475,515,3.743,516,3.194,517,2.475,518,2.475,519,2.475,520,2.475,521,2.475,522,3.743,523,2.475,524,2.475,525,2.475,526,3.743,527,3.743,528,2.475,529,2.475,530,1.695,531,2.475,532,2.475,533,3.743,534,2.475,535,3.743,536,2.475,537,2.475,538,2.475,539,3.743,540,2.475,541,2.475,542,2.475,543,2.833,544,2.833,545,2.833,546,3.743,547,3.743,548,3.743,549,3.743]],["title/interfaces/ContactInfo.html",[191,0.71,550,2.447]],["body/interfaces/ContactInfo.html",[2,0.388,3,0.268,4,0.233,6,0.233,16,0.022,18,0.439,42,0.268,52,3.749,66,0.018,67,0.018,70,0.813,76,1.236,79,2.014,191,1.188,195,4.524,462,3.521,467,3.749,550,4.093,551,3.706,552,3.706,553,3.749,554,5.976,555,5.976,556,4.524,557,5.976,558,5.976]],["title/interceptors/ErrorInterceptor.html",[215,2.241,559,2.447]],["body/interceptors/ErrorInterceptor.html",[2,0.222,3,0.222,4,0.193,6,0.193,7,1.056,9,0.856,12,4.269,13,0.88,15,1.255,16,0.022,17,0.936,18,0.328,19,0.936,27,1.106,29,3.185,30,0.862,31,1.568,32,0.591,33,2.186,34,3.465,36,3.073,37,2.04,42,0.222,43,0.343,44,1.073,45,1.199,46,1.591,54,3.331,63,3.465,66,0.016,67,0.016,192,3.636,202,3.636,204,3.636,212,2.781,215,3.331,216,3.073,250,3.356,256,2.352,295,4.75,297,2.352,341,1.418,445,3.073,559,2.781,560,4.06,561,5.05,562,3.465,563,4.06,564,3.465,565,5.356,566,3.428,567,4.06,568,3.465,569,4.532,570,5.31,571,4.06,572,4.06,573,4.06,574,3.073,575,4.06,576,4.06,577,5.917,578,4.06,579,4.06,580,4.06,581,4.06,582,4.06,583,4.06,584,4.06,585,4.06,586,4.06,587,4.06,588,3.465,589,3.465,590,4.06,591,4.06,592,4.06,593,4.06]],["title/components/FavoritesComponent.html",[84,0.36,163,0.944]],["body/components/FavoritesComponent.html",[2,0.219,3,0.219,4,0.191,6,0.191,7,1.046,9,1.238,13,0.973,16,0.021,17,1.036,27,0.705,30,0.507,32,0.582,42,0.219,43,0.338,44,1.39,56,1.315,66,0.015,67,0.015,70,0.715,84,0.652,85,1.058,86,1.398,87,1.398,88,1.398,90,1.834,91,1.321,92,2.161,93,2.039,95,1.642,97,1.642,107,1.948,110,1.182,117,1.321,118,1.321,150,1.249,151,1.837,152,1.553,153,2.179,154,1.398,155,1.118,156,1.398,157,1.398,158,1.118,159,1.398,160,1.058,161,1.058,162,1.398,163,1.649,164,1.398,165,1.058,166,1.398,167,1.058,168,1.398,169,1.118,170,1.398,171,1.058,172,1.398,173,1.058,174,1.398,175,1.118,176,1.398,177,1.118,178,1.398,179,1.058,180,1.398,181,1.058,182,1.398,183,1.058,184,1.398,185,1.058,186,1.398,187,1.321,188,1.058,189,1.321,190,1.398,353,3.981,594,3.415,595,5.259,596,5.259,597,4.023,598,5.326,599,5.259,600,4.001,601,2.324,602,3.415]],["title/injectables/GeocodeService.html",[31,1.055,603,2.704]],["body/injectables/GeocodeService.html",[2,0.212,3,0.212,4,0.185,6,0.185,7,1.225,9,1.219,13,1.021,15,1.217,16,0.022,17,0.908,18,0.357,19,0.908,27,1.131,29,3.679,30,0.653,31,1.708,32,0.564,37,1.947,40,2.431,41,2.086,42,0.212,43,0.327,52,3.23,66,0.018,67,0.015,70,0.7,71,2.721,76,1.02,197,5.628,212,3.527,349,2.983,392,1.712,511,1.947,530,2.654,589,3.308,603,3.898,604,3.308,605,7.133,606,5.149,607,5.149,608,5.149,609,3.875,610,5.149,611,5.783,612,3.875,613,5.149,614,6.162,615,3.875,616,5.149,617,5.149,618,5.149,619,5.149,620,2.086,621,5.149,622,5.149,623,5.149,624,5.149,625,5.149,626,3.875,627,5.149,628,3.875,629,2.934,630,3.308,631,3.875]],["title/components/HowToComponent.html",[84,0.36,165,0.944]],["body/components/HowToComponent.html",[2,0.299,3,0.091,4,0.079,6,0.079,7,0.543,9,0.733,13,0.453,16,0.019,17,0.892,18,0.169,19,0.844,27,0.293,30,0.211,32,0.242,42,0.091,43,0.14,44,0.722,50,1.872,52,2.528,54,1.715,55,1.715,56,0.683,57,4.086,66,0.008,67,0.016,71,2.486,79,1.258,84,0.448,85,0.439,86,0.581,87,0.581,88,0.581,90,1.086,91,0.549,92,1.903,93,1.785,95,0.853,97,0.853,107,1.258,110,0.491,116,1.471,141,1.715,145,2.76,146,2.335,147,2.069,150,0.519,151,0.955,152,0.807,153,1.408,154,0.581,155,0.465,156,0.581,157,0.581,158,0.465,159,0.581,160,0.439,161,1.586,162,0.581,163,0.439,164,0.581,165,1.065,166,0.581,167,0.439,168,0.581,169,0.465,170,0.581,171,0.439,172,0.581,173,0.439,174,0.581,175,0.465,176,0.581,177,0.465,178,0.581,179,0.439,180,0.581,181,0.439,182,0.581,183,0.439,184,0.581,185,0.439,186,2.209,187,1.982,188,0.439,189,0.549,190,0.581,195,3.051,196,1.715,200,3.315,229,3.062,241,1.715,256,2.335,277,2.383,336,3.051,339,2.069,348,4.007,349,3.265,366,1.872,371,4.265,445,3.051,451,5.182,456,1.584,458,1.471,463,2.76,465,2.76,507,3.863,508,3.764,509,5.031,511,2.831,543,3.051,544,2.069,553,3.315,566,3.532,620,1.471,632,2.97,633,1.419,634,2.733,635,2.733,636,1.663,637,1.663,638,2.733,639,3.44,640,4.007,641,5.031,642,2.76,643,3.44,644,2.333,645,2.333,646,4.03,647,3.003,648,2.733,649,4.03,650,6.588,651,5.895,652,2.733,653,2.333,654,3.279,655,2.333,656,2.333,657,2.333,658,4.03,659,2.333,660,3.051,661,2.733,662,5.031,663,6.588,664,5.634,665,4.086,666,3.279,667,2.733,668,2.733,669,1.872,670,2.733,671,2.733,672,4.03,673,4.51,674,4.809,675,5.203,676,2.733,677,5.284,678,2.733,679,2.333,680,2.333,681,2.333,682,2.733,683,2.733,684,1.715,685,2.733,686,5.031,687,2.733,688,2.333,689,4.03,690,5.895,691,2.333,692,2.733,693,4.787,694,2.733,695,2.733,696,3.44,697,4.787,698,2.333,699,2.733,700,2.733,701,4.03,702,2.333,703,1.584,704,1.872,705,4.03,706,2.733,707,3.44,708,2.069,709,3.44,710,2.733,711,2.733,712,2.733,713,3.44,714,1.663,715,2.333,716,2.733,717,4.086,718,4.787,719,2.733,720,2.333,721,1.663,722,2.733,723,2.733,724,4.03,725,2.733,726,4.03,727,2.733,728,2.733,729,1.663,730,4.03,731,2.733,732,3.619,733,2.733,734,2.333,735,4.03,736,2.528,737,3.265,738,2.733,739,2.733,740,2.733,741,2.333,742,1.872,743,2.733,744,2.733,745,4.086,746,2.733,747,2.733,748,2.733,749,2.733,750,1.419,751,1.663,752,1.663,753,2.733,754,1.663,755,1.663]],["title/interceptors/JwtInterceptor.html",[251,2.447,559,2.447]],["body/interceptors/JwtInterceptor.html",[2,0.248,3,0.248,4,0.217,6,0.217,7,1.135,9,0.958,13,0.945,15,1.348,16,0.022,17,1.006,18,0.353,19,1.006,27,1.006,29,3.359,30,0.829,31,1.685,32,0.661,37,2.283,42,0.248,43,0.384,44,1.201,45,1.342,66,0.017,67,0.017,202,4.273,251,3.908,295,4.954,297,2.633,341,1.587,361,4.317,389,3.914,392,2.008,559,3.112,561,5.325,564,3.878,565,5.585,566,3.615,568,3.878,569,4.87,756,4.544,757,4.544,758,4.544,759,4.544,760,4.544,761,4.544,762,4.544,763,4.544,764,4.544,765,4.544,766,4.544]],["title/components/LandingComponent.html",[84,0.36,167,0.944]],["body/components/LandingComponent.html",[2,0.147,3,0.147,4,0.128,6,0.128,7,0.791,9,0.566,10,1.556,11,1.547,12,1.685,13,0.927,15,0.635,16,0.022,17,0.924,18,0.293,19,0.474,20,1.39,27,0.701,28,2.23,30,0.664,32,0.391,33,1.446,39,0.887,42,0.147,43,0.227,44,1.051,45,0.793,53,1.31,55,3.287,56,0.994,58,3.395,65,1.556,66,0.012,67,0.012,70,0.541,84,0.563,85,0.71,86,0.938,87,0.938,88,0.938,90,1.479,91,0.887,92,2.064,93,1.989,95,1.242,97,1.242,107,1.636,110,1.175,121,0.993,127,1.937,142,3.395,143,2.305,144,3.395,150,0.838,151,1.39,152,1.175,153,1.83,154,0.938,155,0.75,156,0.938,157,0.938,158,0.75,159,0.938,160,0.71,161,0.71,162,0.938,163,0.71,164,0.938,165,0.71,166,0.938,167,1.385,168,0.938,169,0.75,170,0.938,171,0.71,172,0.938,173,0.71,174,0.938,175,0.75,176,0.938,177,0.75,178,0.938,179,0.71,180,0.938,181,0.71,182,0.938,183,0.71,184,0.938,185,0.71,186,0.938,187,0.887,188,0.71,189,0.887,190,0.938,340,5.314,346,2.725,389,2.496,451,3.966,497,1.052,506,1.117,507,3.982,508,3.036,566,2.305,601,1.187,639,5.314,642,3.588,666,3.588,669,3.588,686,3.395,688,3.395,704,2.725,707,5.314,708,3.966,732,2.725,767,2.292,768,3.978,769,3.978,770,2.315,771,4.472,772,4.472,773,3.978,774,2.686,775,2.686,776,2.686,777,3.011,778,1.872,779,1.839,780,2.292,781,2.033,782,3.395,783,5.521,784,5,785,5,786,5.239,787,4.431,788,3.011,789,3.395,790,5.239,791,5.239,792,3.978,793,2.686,794,3.395,795,3.978,796,4.472,797,3.395,798,3.395,799,3.978,800,3.978,801,3.395,802,3.978,803,3.978,804,2.686,805,3.978,806,5.239,807,3.978,808,3.978,809,2.686,810,2.686]],["title/components/LikesComponent.html",[84,0.36,169,0.998]],["body/components/LikesComponent.html",[2,0.18,3,0.18,4,0.157,6,0.157,7,0.915,9,0.693,11,1.699,13,0.953,15,0.777,16,0.022,17,1.014,18,0.328,19,0.58,20,1.855,27,0.58,30,0.817,32,0.479,39,1.52,42,0.18,43,0.278,44,1.217,45,0.971,46,1.288,53,1.514,56,1.15,66,0.014,67,0.014,70,0.626,84,0.609,85,0.869,86,1.148,87,1.148,88,1.148,90,1.658,91,1.086,92,2.117,93,1.995,95,1.437,97,1.437,107,1.796,110,0.971,117,1.086,118,1.086,121,1.216,127,1.702,150,1.027,151,1.608,152,1.359,153,2.009,154,1.148,155,0.919,156,1.148,157,1.148,158,0.919,159,1.148,160,0.869,161,0.869,162,1.148,163,0.869,164,1.148,165,0.869,166,1.148,167,0.869,168,1.148,169,1.607,170,1.148,171,0.869,172,1.148,173,0.869,174,1.148,175,0.919,176,1.148,177,0.919,178,1.148,179,0.869,180,1.148,181,0.869,182,1.148,183,0.869,184,1.148,185,0.869,186,1.148,187,1.086,188,0.869,189,1.086,190,1.148,253,2.392,291,1.77,335,3.929,341,1.148,391,1.652,392,2.034,470,2.034,497,1.288,506,1.367,601,1.453,737,2.667,770,2.542,778,1.547,811,2.806,812,4.603,813,4.603,814,4.91,815,2.252,816,4.603,817,2.667,818,3.288,819,3.288,820,3.799,821,2.806,822,1.547,823,1.77,824,1.77,825,2.667,826,2.489,827,2.667,828,2.489,829,3.077,830,2.252,831,2.252,832,1.905,833,1.905,834,2.489,835,2.806,836,4.603,837,4.603]],["title/components/LikesmatchwebComponent.html",[84,0.36,171,0.944]],["body/components/LikesmatchwebComponent.html",[2,0.144,3,0.144,4,0.126,6,0.126,7,0.781,9,0.557,11,1.535,13,0.965,15,1.109,16,0.022,17,1.026,18,0.343,19,0.827,20,1.639,23,1.327,27,0.827,30,0.764,32,0.384,39,1.297,42,0.215,43,0.223,44,1.038,45,0.78,46,1.035,53,1.582,56,0.982,66,0.012,67,0.012,70,0.534,76,0.693,84,0.559,85,0.698,86,0.922,87,0.922,88,0.922,90,1.465,91,0.872,92,2.059,93,1.938,95,1.227,97,1.227,107,1.622,110,1.386,117,0.872,118,0.872,121,0.976,127,1.453,150,0.824,151,1.372,152,1.16,153,1.815,154,0.922,155,0.738,156,0.922,157,0.922,158,0.738,159,0.922,160,0.698,161,0.698,162,0.922,163,0.698,164,0.922,165,0.698,166,0.922,167,0.698,168,0.922,169,0.738,170,0.922,171,1.373,172,0.922,173,0.698,174,0.922,175,0.738,176,0.922,177,0.738,178,0.922,179,0.698,180,0.922,181,0.698,182,0.922,183,0.698,184,0.922,185,0.698,186,0.922,187,0.872,188,0.698,189,0.872,190,0.922,191,0.525,253,2.16,291,1.422,305,2.115,332,1.422,341,0.922,352,3.077,391,1.327,392,1.736,470,1.736,497,1.035,506,1.098,684,2.465,703,3.494,737,2.276,770,2.454,778,1.243,815,1.809,817,2.276,822,1.243,823,1.422,824,1.422,825,2.276,826,1.999,827,2.276,828,1.999,829,2.718,832,3.218,833,1.53,838,1.999,839,3.353,840,3.353,841,3.353,842,4.435,843,3.353,844,3.353,845,3.929,846,2.691,847,2.641,848,2.691,849,2.641,850,2.641,851,2.641,852,3.484,853,2.465,854,1.657,855,1.53,856,3.213,857,1.809,858,2.691,859,3.26,860,1.809,861,2.691,862,2.691,863,1.809,864,4.243,865,1.809,866,2.254,867,2.254,868,2.254,869,2.254,870,2.254,871,1.999,872,1.999,873,2.254,874,2.254,875,1.657,876,2.254,877,1.809,878,2.691,879,2.691,880,4.243,881,1.809,882,1.809,883,1.53,884,4.435,885,4.435,886,4.435,887,3.353,888,3.353,889,2.691,890,3.353]],["title/interfaces/Location.html",[191,0.71,620,1.923]],["body/interfaces/Location.html",[2,0.293,3,0.293,4,0.255,6,0.255,16,0.021,18,0.39,42,0.293,66,0.019,67,0.019,70,0.858,79,2.234,191,1.254,620,3.396,891,4.572,892,5.909,893,5.909]],["title/components/LoginComponent.html",[84,0.36,173,0.944]],["body/components/LoginComponent.html",[2,0.169,3,0.169,4,0.147,6,0.147,7,0.876,9,0.651,11,1.653,12,3.221,13,1.019,15,1.213,16,0.022,17,0.987,18,0.346,19,0.545,20,1.793,26,2.416,27,0.905,30,0.75,32,0.45,33,1.664,39,1.02,42,0.169,43,0.261,44,1.164,45,0.913,46,1.211,53,1.582,56,1.101,66,0.013,67,0.013,70,0.599,76,1.116,84,0.595,85,0.817,86,1.079,87,1.079,88,1.079,90,1.603,91,1.02,92,2.101,93,1.98,95,1.376,97,1.376,107,1.747,110,1.301,117,1.455,121,1.143,150,0.965,151,1.539,152,1.301,153,1.955,154,1.079,155,0.864,156,1.079,157,1.079,158,0.864,159,1.079,160,0.817,161,0.817,162,1.079,163,0.817,164,1.079,165,0.817,166,1.079,167,0.817,168,1.079,169,0.864,170,1.079,171,0.817,172,1.079,173,1.479,174,1.079,175,0.864,176,1.079,177,0.864,178,1.079,179,0.817,180,1.079,181,0.817,182,1.079,183,0.817,184,1.079,185,0.817,186,1.079,187,1.02,188,0.817,189,1.02,190,1.079,196,3.511,200,3.511,204,2.553,229,3.243,250,3.091,346,3.018,348,4.191,431,3.018,458,2.372,497,1.211,506,1.285,530,3.018,562,2.638,574,2.34,640,2.764,673,3.76,734,3.76,770,2.473,781,2.34,784,4.777,785,3.76,894,2.638,895,4.406,896,4.406,897,5.597,898,5.597,899,4.406,900,3.091,901,3.76,902,4.406,903,4.406,904,3.091,905,3.76,906,4.406,907,3.091,908,3.091,909,3.091,910,3.091,911,3.091,912,3.091,913,3.091,914,3.091,915,4.406]],["title/injectables/MapsControllerService.html",[31,1.055,252,2.241]],["body/injectables/MapsControllerService.html",[2,0.198,3,0.198,4,0.173,6,0.173,7,0.979,9,0.765,13,0.927,15,1.321,16,0.022,17,0.986,18,0.346,19,0.986,26,1.707,27,1.14,29,3.377,30,0.82,31,1.652,32,0.528,37,1.823,42,0.198,43,0.306,45,1.071,52,3.763,55,3.09,66,0.014,67,0.014,71,3.247,76,1.259,143,2.854,146,3.634,210,3.373,223,4.204,252,3.09,283,2.485,294,4.108,297,2.102,336,3.729,349,3.748,360,2.746,370,2.746,374,2.746,376,2.276,377,2.746,381,3.763,597,4.296,620,3.377,642,3.83,703,2.854,708,3.729,742,3.373,892,5.12,893,5.12,916,5.12,917,2.746,918,4.926,919,4.926,920,3.096,921,4.926,922,3.628,923,4.926,924,4.926,925,5.593,926,3.373,927,4.926,928,3.628,929,4.204,930,4.926,931,4.926,932,3.729,933,4.926,934,2.485,935,3.628,936,3.096,937,4.204]],["title/interfaces/Marker.html",[191,0.71,926,2.447]],["body/interfaces/Marker.html",[2,0.257,3,0.257,4,0.224,6,0.224,16,0.022,18,0.429,19,1.272,28,3.204,42,0.257,66,0.017,67,0.017,70,0.792,71,3.116,76,1.279,79,1.978,191,1.158,516,5.652,620,3.565,926,3.991,938,4.01,939,6.623,940,6.623,941,6.623,942,6.334,943,4.698,944,4.698,945,4.698,946,4.01]],["title/injectables/MatchingControllerService.html",[31,1.055,253,1.485]],["body/injectables/MatchingControllerService.html",[2,0.135,3,0.135,4,0.117,6,0.117,7,0.742,9,0.519,13,1.029,15,1.468,16,0.022,17,1.095,18,0.384,19,1.095,27,1.251,29,3.673,30,0.719,31,1.329,32,0.359,37,1.238,42,0.135,43,0.208,45,0.728,53,1.778,66,0.011,67,0.015,76,0.658,79,2.251,203,2.824,206,2.34,207,5.179,210,2.555,253,1.551,294,3.438,297,1.428,339,3.8,360,1.865,374,1.865,375,2.103,376,1.546,377,1.865,381,4.091,462,3.6,467,2.34,470,2.798,507,2.161,657,4.842,736,3.149,737,3.861,787,2.555,824,1.327,917,1.865,920,2.103,937,2.103,947,5.405,948,3.73,949,3.73,950,3.73,951,3.73,952,3.73,953,3.73,954,3.73,955,3.73,956,3.73,957,6.776,958,2.464,959,3.73,960,6.664,961,3.73,962,2.464,963,3.73,964,2.464,965,3.73,966,4.593,967,3.73,968,3.73,969,3.73,970,4.501,971,3.73,972,2.464,973,3.73,974,2.464,975,3.73,976,3.73,977,2.464,978,3.73,979,2.464,980,5.019,981,3.73,982,2.464,983,4.501,984,2.464,985,2.464,986,3.73,987,3.73,988,3.73,989,3.73,990,2.464,991,3.73]],["title/components/NavbarComponent.html",[84,0.36,177,0.998]],["body/components/NavbarComponent.html",[2,0.154,3,0.154,4,0.134,6,0.134,7,0.819,9,0.868,10,1.631,11,1.583,12,3.362,13,1.02,15,0.665,16,0.022,17,0.945,18,0.301,19,0.496,20,1.439,26,2.292,27,0.945,28,2.292,30,0.723,32,0.41,33,1.516,39,0.93,42,0.154,43,0.238,44,1.089,46,1.909,53,1.577,56,1.03,65,2.387,66,0.012,67,0.012,70,0.56,84,0.574,85,0.744,86,0.983,87,0.983,88,0.983,90,1.521,91,0.93,92,2.077,93,1.956,95,1.286,97,1.286,107,1.673,110,1.438,117,0.93,118,0.93,121,1.041,127,2.333,141,2.584,150,0.879,151,1.439,152,1.216,153,1.872,154,0.983,155,0.787,156,0.983,157,0.983,158,0.787,159,0.983,160,0.744,161,1.287,162,0.983,163,0.744,164,0.983,165,0.744,166,0.983,167,0.744,168,0.983,169,0.787,170,0.983,171,0.744,172,0.983,173,0.744,174,0.983,175,0.787,176,0.983,177,1.497,178,0.983,179,0.744,180,0.983,181,0.744,182,0.983,183,0.744,184,0.983,185,0.744,186,0.983,187,0.93,188,0.744,189,0.93,190,0.983,250,3.092,332,2.885,346,1.928,348,2.584,349,2.387,353,3.118,355,4.51,358,4.157,391,2.07,393,2.403,435,3.515,497,1.909,506,1.171,574,2.131,601,1.82,645,3.515,732,2.821,770,2.368,771,4.574,772,4.574,777,3.118,778,2.522,779,2.821,780,2.403,781,2.131,782,3.515,992,2.403,993,4.119,994,4.119,995,5.703,996,4.119,997,2.816,998,2.816,999,2.816,1000,2.816,1001,4.119,1002,2.816,1003,4.119,1004,2.816,1005,2.816,1006,4.119,1007,2.816,1008,2.403,1009,2.816,1010,2.816,1011,4.119]],["title/interfaces/Office.html",[116,1.923,191,0.71]],["body/interfaces/Office.html",[2,0.272,3,0.272,4,0.237,6,0.237,16,0.022,17,1.241,18,0.402,42,0.272,66,0.018,67,0.018,70,0.822,71,3.181,76,1.241,79,2.03,116,3.789,191,1.201,462,3.536,467,3.79,1012,4.253,1013,6.042,1014,6.042,1015,6.042]],["title/directives/PlacesAutocompleteDirective.html",[56,0.893,188,0.944]],["body/directives/PlacesAutocompleteDirective.html",[2,0.223,3,0.223,4,0.194,6,0.194,7,1.058,9,0.859,13,1.08,15,1.258,16,0.022,17,0.938,18,0.366,19,0.938,27,1.045,30,0.751,32,0.593,42,0.223,43,0.344,44,1.407,45,1.204,46,2.462,56,1.481,66,0.016,67,0.016,70,0.724,90,1.85,91,1.345,92,1.572,107,1.962,110,1.204,152,1.856,188,1.407,189,1.757,234,3.478,283,2.791,299,5.062,324,4.543,341,1.859,511,2.674,1016,5.707,1017,3.478,1018,5.322,1019,6.284,1020,5.927,1021,4.075,1022,5.363,1023,6.812,1024,5.322,1025,5.322,1026,6.284,1027,5.322,1028,4.075,1029,4.075,1030,5.927,1031,4.075,1032,3.478,1033,4.075,1034,4.075,1035,4.075,1036,4.075,1037,4.075,1038,4.075,1039,4.075,1040,4.075]],["title/interfaces/Register.html",[191,0.71,640,2.241]],["body/interfaces/Register.html",[2,0.287,3,0.287,4,0.25,6,0.25,16,0.021,18,0.411,42,0.287,66,0.018,67,0.018,70,0.847,76,1.286,191,1.238,229,3.983,389,4.313,640,3.907,654,4.708,1041,4.475]],["title/components/RideswipeComponent.html",[84,0.36,179,0.944]],["body/components/RideswipeComponent.html",[2,0.219,3,0.219,4,0.191,6,0.191,7,1.046,9,1.238,13,0.973,16,0.021,17,1.036,27,0.705,30,0.507,32,0.582,42,0.219,43,0.338,44,1.39,56,1.315,66,0.015,67,0.015,70,0.715,84,0.652,85,1.058,86,1.398,87,1.398,88,1.398,90,1.834,91,1.321,92,2.161,93,2.039,95,1.642,97,1.642,107,1.948,110,1.182,117,1.321,118,1.321,150,1.249,151,1.837,152,1.553,153,2.179,154,1.398,155,1.118,156,1.398,157,1.398,158,1.118,159,1.398,160,1.058,161,1.058,162,1.398,163,1.058,164,1.398,165,1.058,166,1.398,167,1.058,168,1.398,169,1.118,170,1.398,171,1.058,172,1.398,173,1.058,174,1.398,175,1.118,176,1.398,177,1.118,178,1.398,179,1.649,180,1.398,181,1.058,182,1.398,183,1.058,184,1.398,185,1.058,186,1.398,187,1.321,188,1.058,189,1.321,190,1.398,351,4.489,597,4.023,598,5.326,601,2.324,602,3.415,1042,3.415,1043,5.259,1044,5.259,1045,5.259,1046,4.001]],["title/interfaces/RouteInfo.html",[191,0.71,934,2.447]],["body/interfaces/RouteInfo.html",[2,0.277,3,0.277,4,0.242,6,0.242,16,0.022,18,0.378,26,3.2,42,0.277,66,0.018,67,0.018,70,0.831,79,2.207,191,1.214,552,3.841,742,4.84,932,4.624,934,4.183,1047,4.331,1048,5.804,1049,6.801,1050,6.108,1051,6.108]],["title/classes/SwipecardModel.html",[43,0.302,820,2.241]],["body/classes/SwipecardModel.html",[2,0.286,3,0.286,4,0.249,6,0.249,13,1.031,16,0.021,18,0.323,30,0.663,42,0.286,43,0.525,53,1.811,66,0.018,67,0.018,70,0.846,117,1.727,118,1.727,473,4.464,601,2.748,820,3.902,834,5.2,1052,4.464,1053,5.231,1054,5.231]],["title/injectables/TokenStorage.html",[31,1.055,361,2.241]],["body/injectables/TokenStorage.html",[2,0.257,3,0.257,4,0.224,6,0.224,7,1.158,9,1.335,13,1.097,15,1.11,16,0.022,17,0.828,18,0.29,19,0.828,27,1.168,30,0.595,31,1.871,32,0.684,40,2.947,41,2.529,42,0.257,43,0.397,66,0.017,67,0.017,76,1.2,110,1.721,341,1.641,361,3.655,389,3.655,597,4.752,1008,4.01,1055,3.556,1056,6.623,1057,5.827,1058,6.623,1059,4.698,1060,4.698,1061,5.827,1062,4.698,1063,4.698,1064,3.556,1065,4.01,1066,5.827,1067,4.698,1068,4.698]],["title/injectables/UploadService.html",[31,1.055,1069,2.704]],["body/injectables/UploadService.html",[2,0.213,3,0.213,4,0.306,6,0.186,7,1.029,9,1.223,13,1.065,15,0.922,16,0.022,17,0.912,18,0.32,19,0.688,27,1.188,30,0.656,31,1.714,32,0.568,40,2.448,41,2.101,42,0.213,43,0.33,48,4.677,65,2.261,66,0.015,67,0.015,70,0.703,76,0.912,79,1.218,117,1.288,118,1.288,127,1.913,141,2.448,204,2.261,341,1.807,381,2.448,511,1.961,530,2.673,601,1.724,629,2.954,656,3.331,871,2.954,872,3.916,1069,3.916,1070,3.331,1071,6.179,1072,6.179,1073,5.173,1074,5.173,1075,3.903,1076,5.173,1077,3.903,1078,5.803,1079,6.179,1080,3.903,1081,3.331,1082,3.903,1083,5.803,1084,3.903,1085,3.903,1086,3.903,1087,3.903,1088,3.903,1089,2.261,1090,3.903,1091,3.903,1092,3.903,1093,3.903,1094,3.903,1095,3.903,1096,3.903,1097,3.903,1098,3.903,1099,3.903,1100,3.903,1101,5.803,1102,3.903,1103,5.173,1104,3.903,1105,3.903,1106,3.903,1107,5.173,1108,6.179,1109,3.903,1110,3.903,1111,3.903,1112,3.903]],["title/interfaces/User.html",[53,0.893,191,0.71]],["body/interfaces/User.html",[2,0.187,3,0.187,4,0.163,6,0.163,16,0.022,18,0.433,19,0.836,28,2.556,30,0.779,42,0.187,48,3.589,50,3.247,53,1.465,66,0.014,67,0.014,70,0.645,71,2.993,76,1.265,79,1.696,99,4.436,116,3.51,127,1.753,145,3.247,146,2.747,161,1.625,187,1.565,191,0.943,203,3.589,222,4.046,366,4.013,431,3.247,458,2.552,462,3.196,467,2.974,470,3.016,474,2.928,508,2.747,550,4.212,553,3.408,556,5.335,641,4.046,644,4.046,654,3.721,660,3.589,741,4.046,794,4.046,822,3.212,936,2.928,1113,2.928,1114,6.36,1115,5.001,1116,5.001,1117,5.86,1118,6.36,1119,4.741,1120,4.741,1121,4.741,1122,4.741,1123,4.741,1124,4.741,1125,3.431,1126,3.431,1127,3.431]],["title/interfaces/UserCard.html",[191,0.71,352,1.681]],["body/interfaces/UserCard.html",[2,0.187,3,0.187,4,0.163,6,0.163,11,1.396,16,0.022,18,0.335,20,1.193,23,1.716,30,0.825,32,0.497,39,1.56,42,0.258,43,0.288,44,0.903,45,1.009,46,1.338,53,1.705,66,0.014,67,0.014,70,0.643,76,1.12,84,0.476,90,1.475,92,1.009,93,0.954,95,1.066,97,1.066,107,1.066,121,1.263,127,1.747,171,0.903,191,0.94,253,1.965,291,1.838,305,2.544,332,1.838,341,1.193,352,2.989,391,1.716,392,2.088,470,2.088,497,1.338,506,1.42,684,3.852,703,3.773,770,2.088,778,1.607,817,1.979,822,1.607,823,1.838,824,1.838,825,2.738,826,2.585,827,2.738,828,2.585,829,3.14,832,3.14,833,1.979,838,2.585,839,2.915,840,2.915,841,2.915,842,2.915,846,2.339,848,2.339,852,3.852,853,2.965,854,2.142,855,1.979,856,4.35,857,2.339,858,3.237,859,3.669,860,2.339,861,3.237,862,3.237,863,2.339,864,4.545,865,2.339,866,2.915,867,2.915,868,2.915,869,2.915,870,2.915,871,2.585,872,2.585,873,2.915,874,2.915,875,2.142,876,2.915,877,2.339,878,3.237,879,3.237,880,4.545,881,2.339,882,2.339,883,1.979]],["title/interfaces/UserCard-1.html",[191,0.593,352,1.404,1089,1.729]],["body/interfaces/UserCard-1.html",[2,0.165,3,0.165,4,0.144,6,0.144,11,1.278,16,0.022,18,0.313,20,1.053,23,1.515,30,0.796,32,0.439,39,1.429,42,0.165,43,0.255,44,0.797,45,0.89,46,1.181,53,1.681,66,0.013,67,0.013,70,0.589,76,1.076,79,1.351,84,0.436,90,1.351,92,0.89,93,0.842,95,0.941,97,0.941,107,0.941,121,1.115,127,2.167,143,2.508,152,0.89,183,0.797,191,0.861,206,2.715,253,1.8,291,1.623,305,2.33,332,2.33,341,1.053,352,2.87,391,1.515,392,1.913,442,2.065,458,1.623,470,1.913,497,1.984,506,1.253,545,2.282,647,1.891,684,3.676,703,3.641,736,3.177,737,1.747,770,1.332,778,1.419,817,1.747,822,1.419,823,1.623,824,1.623,825,2.508,827,2.934,829,2.934,830,2.065,831,2.065,832,3.206,833,1.747,846,2.065,848,2.065,852,3.676,853,2.715,854,1.891,855,1.747,856,4.178,857,2.065,858,2.964,859,3.472,860,2.065,861,2.964,862,2.964,863,2.065,864,4.403,865,2.065,875,2.715,877,2.065,878,2.964,879,2.964,880,4.403,881,2.065,882,2.065,883,1.747,1089,2.934,1128,2.282,1129,2.573,1130,2.573,1131,2.573,1132,2.282,1133,2.282,1134,2.282,1135,2.573,1136,2.282,1137,2.573,1138,4.436,1139,2.282,1140,2.282,1141,4.723,1142,3.276,1143,5.206,1144,2.282,1145,3.276,1146,2.282,1147,2.573]],["title/components/UsercardComponent.html",[84,0.36,181,0.944]],["body/components/UsercardComponent.html",[2,0.266,3,0.108,4,0.094,6,0.094,7,0.623,9,0.415,11,1.315,13,1.076,15,0.923,16,0.022,17,0.993,18,0.382,19,0.689,20,1.364,23,0.99,27,0.857,28,1.838,30,0.736,32,0.287,39,1.035,42,0.108,43,0.166,44,0.829,45,0.582,46,0.772,53,1.451,56,0.784,66,0.009,67,0.009,68,1.35,70,0.426,76,0.912,79,0.979,84,0.489,85,0.521,86,0.688,87,0.688,88,0.688,90,1.219,91,0.651,92,1.966,93,1.846,95,0.979,97,0.979,107,1.39,110,1.435,117,1.792,118,1.792,121,0.729,127,1.797,150,0.615,151,1.095,152,1.153,153,1.555,154,0.688,155,0.551,156,0.688,157,0.688,158,0.551,159,0.688,160,0.521,161,1.032,162,0.688,163,0.521,164,0.688,165,0.521,166,0.688,167,0.521,168,0.688,169,0.551,170,0.688,171,0.521,172,0.688,173,0.521,174,0.688,175,0.551,176,0.688,177,0.551,178,0.688,179,0.521,180,0.688,181,1.177,182,0.688,183,0.521,184,0.688,185,0.521,186,0.688,187,0.651,188,0.521,189,0.651,190,0.688,206,1.967,253,1.851,291,1.061,305,1.688,332,1.061,341,0.688,352,1.476,371,1.492,381,1.236,391,0.99,392,1.386,442,1.35,458,1.061,470,1.967,497,2.207,506,0.819,553,2.793,566,1.142,601,0.871,647,1.236,669,2.148,704,1.35,709,3.333,720,2.676,742,3.049,745,1.682,770,1.967,778,0.927,779,1.35,783,2.676,814,4.147,815,1.35,817,1.817,820,3.534,821,1.682,822,0.927,823,1.061,824,1.061,825,1.817,827,2.263,829,2.263,830,1.35,831,1.35,832,2.579,833,1.142,834,1.492,835,1.682,852,3.247,853,1.967,854,1.967,855,1.142,859,3.048,889,2.148,966,2.374,1022,4.632,1048,2.676,1089,2.579,1132,1.492,1133,1.492,1134,1.492,1136,4.597,1142,1.492,1144,1.492,1145,1.492,1146,1.492,1148,1.682,1149,3.136,1150,3.136,1151,4.452,1152,4.452,1153,4.452,1154,4.452,1155,4.452,1156,4.452,1157,4.452,1158,4.452,1159,3.136,1160,3.905,1161,3.136,1162,3.136,1163,1.971,1164,4.859,1165,2.676,1166,1.971,1167,3.136,1168,1.971,1169,4.859,1170,3.905,1171,1.971,1172,1.971,1173,4.452,1174,1.971,1175,1.971,1176,1.971,1177,1.971,1178,1.971,1179,5.175,1180,3.136,1181,5.175,1182,3.136,1183,1.971,1184,3.136,1185,3.905,1186,1.971,1187,1.971,1188,3.905,1189,1.971,1190,1.971,1191,1.971,1192,1.971,1193,1.971,1194,1.971,1195,1.971,1196,1.971,1197,1.971,1198,1.971,1199,3.136,1200,1.971,1201,1.971,1202,1.971,1203,3.136,1204,1.971,1205,1.971,1206,1.971,1207,1.971,1208,1.971,1209,1.971,1210,1.971,1211,1.971,1212,1.971,1213,1.971,1214,1.971,1215,1.971,1216,3.136,1217,1.971,1218,1.971,1219,1.971,1220,1.971,1221,1.971,1222,3.136,1223,5.175,1224,3.136,1225,1.971,1226,4.452,1227,1.971,1228,1.971,1229,1.971,1230,1.971,1231,4.452,1232,4.452,1233,3.136,1234,1.971,1235,3.136,1236,1.971]],["title/components/UsermatchwebComponent.html",[84,0.36,183,0.944]],["body/components/UsermatchwebComponent.html",[2,0.127,3,0.127,4,0.111,6,0.17,7,0.709,9,0.49,11,1.438,13,0.957,15,1.151,16,0.022,17,1.018,18,0.343,19,0.859,20,1.517,23,1.168,27,0.859,30,0.732,32,0.338,39,1.178,42,0.127,43,0.196,44,0.943,45,0.687,46,0.911,53,1.629,56,0.892,66,0.01,67,0.014,70,0.485,76,0.629,79,1.731,84,0.529,85,0.614,86,0.812,87,0.812,88,0.812,90,1.356,91,0.767,92,2.021,93,1.9,95,1.114,97,1.114,107,1.521,110,1.438,117,0.767,118,0.767,121,0.86,127,1.943,143,2.067,150,0.726,151,1.246,152,1.282,153,1.701,154,0.812,155,0.649,156,0.812,157,0.812,158,0.649,159,0.812,160,0.614,161,0.614,162,0.812,163,0.614,164,0.812,165,0.614,166,0.812,167,0.614,168,0.812,169,0.649,170,0.812,171,0.614,172,0.812,173,0.614,174,0.812,175,0.649,176,0.812,177,0.649,178,0.812,179,0.614,180,0.812,181,0.614,182,0.812,183,1.287,184,0.812,185,0.614,186,0.812,187,0.767,188,0.614,189,0.767,190,0.812,191,0.462,206,2.238,253,2.025,291,1.252,305,1.921,332,1.921,341,0.812,352,2.985,391,1.168,392,1.576,396,2.701,442,1.592,458,1.252,470,1.576,497,1.701,506,0.966,545,1.76,647,1.458,675,3.045,684,2.238,703,3.345,736,2.724,737,1.347,770,2.152,778,1.094,815,1.592,817,2.067,822,1.094,823,1.252,824,1.252,825,2.067,827,2.516,829,2.516,830,1.592,831,1.592,832,3.213,833,1.347,843,3.045,844,3.045,846,2.444,848,2.444,852,3.296,853,2.238,854,1.458,855,1.347,856,2.974,857,1.592,858,2.444,859,3.055,860,1.592,861,2.444,862,2.444,863,1.592,864,4.08,865,1.592,875,2.238,877,1.592,878,2.444,879,2.444,880,4.08,881,1.592,882,1.592,883,1.347,884,4.157,885,4.157,886,3.045,887,4.157,888,3.045,889,2.444,890,3.045,1089,2.516,1128,1.76,1129,3.045,1130,3.045,1131,3.045,1132,1.76,1133,1.76,1134,1.76,1135,1.984,1136,1.76,1137,3.045,1138,4.37,1139,1.76,1140,1.76,1141,4.157,1142,2.701,1143,4.733,1144,1.76,1145,2.701,1146,1.76,1147,1.984,1237,3.568,1238,2.325,1239,2.325,1240,2.325,1241,2.325,1242,2.325,1243,3.568]],["title/components/ViewProfileComponent.html",[84,0.36,185,0.944]],["body/components/ViewProfileComponent.html",[2,0.276,3,0.091,4,0.079,6,0.079,7,0.542,9,0.349,10,0.96,11,1.025,13,1.084,15,0.391,16,0.022,17,1.161,18,0.377,19,0.292,20,0.579,27,0.89,28,1.633,30,0.606,32,0.241,39,0.547,42,0.091,43,0.14,44,0.72,45,0.489,53,1.595,56,0.681,66,0.008,67,0.014,70,0.371,71,2.648,72,4.079,76,1.153,84,0.447,85,0.438,86,0.579,87,0.579,88,0.579,90,1.084,91,0.547,92,1.902,93,1.783,94,1.866,95,0.851,97,0.851,99,3.617,101,4.079,102,3.432,105,3.432,107,1.255,110,1.492,116,3.105,117,0.9,118,0.9,121,0.613,122,1.414,125,1.414,127,1.868,132,1.414,137,1.414,138,1.414,141,2.522,145,2.754,146,1.579,147,2.062,148,2.325,150,0.517,151,0.952,152,0.805,153,1.404,154,0.579,155,0.463,156,0.579,157,0.579,158,0.463,159,0.579,160,0.438,161,1.174,162,0.579,163,0.438,164,0.579,165,0.438,166,0.579,167,0.438,168,0.579,169,0.463,170,0.579,171,0.438,172,0.579,173,0.438,174,0.579,175,0.463,176,0.579,177,0.463,178,0.579,179,0.438,180,0.579,181,0.438,182,0.579,183,0.438,184,0.579,185,1.063,186,1.909,187,1.667,188,0.438,189,0.547,190,0.579,200,1.709,205,5.026,228,3.432,229,3.761,256,1.579,314,4.509,316,1.414,317,1.414,318,1.414,366,3.854,396,1.254,456,3.057,462,1.369,463,2.754,465,2.754,481,2.325,482,2.325,484,2.325,497,1.068,506,0.689,507,3.057,508,2.33,511,1.369,543,2.062,553,2.998,556,1.254,566,1.579,601,1.204,647,3.31,653,4.503,654,3.273,655,4.803,659,2.325,660,1.254,665,3.432,666,4.033,691,2.325,696,2.325,698,2.325,704,3.273,715,3.432,770,1.777,777,1.254,778,1.282,779,1.135,787,3.613,788,2.062,822,1.633,823,0.892,875,1.709,883,1.579,889,1.866,946,2.325,1115,4.079,1116,4.079,1165,2.325,1244,5.619,1245,1.414,1246,2.725,1247,2.725,1248,4.021,1249,4.021,1250,5.276,1251,4.021,1252,4.021,1253,4.021,1254,4.021,1255,2.725,1256,1.657,1257,1.657,1258,1.657,1259,1.657,1260,1.657,1261,1.657,1262,1.657,1263,1.657,1264,1.657,1265,1.657,1266,1.657,1267,1.657,1268,1.657,1269,1.657,1270,1.657,1271,1.657,1272,1.657,1273,1.657,1274,1.657,1275,1.657,1276,2.725,1277,1.657,1278,2.725,1279,1.657,1280,2.725,1281,1.657,1282,1.657,1283,1.657,1284,1.657,1285,2.725,1286,1.657,1287,1.657,1288,1.657,1289,1.657,1290,1.657,1291,1.657,1292,1.657,1293,1.657,1294,1.657,1295,1.657,1296,1.657,1297,1.657,1298,1.657,1299,2.725,1300,1.657,1301,1.657,1302,1.657,1303,1.657,1304,1.657,1305,1.657,1306,1.657,1307,1.657,1308,1.657,1309,1.657,1310,1.657,1311,2.725,1312,1.657,1313,1.657,1314,1.657,1315,1.657,1316,1.657,1317,1.657,1318,2.725,1319,2.725,1320,1.657,1321,1.657,1322,1.657,1323,1.657,1324,1.657,1325,1.657,1326,1.657,1327,1.657,1328,1.657,1329,5.889,1330,5.889,1331,4.021,1332,2.725,1333,2.725,1334,2.725,1335,2.725,1336,1.657,1337,2.725,1338,2.725,1339,2.725,1340,2.325,1341,1.657]],["title/coverage.html",[1342,4.16]],["body/coverage.html",[4,0.164,11,1.015,16,0.022,18,0.212,31,1.926,43,0.459,53,0.859,56,0.859,66,0.014,67,0.014,68,2.353,69,2.933,84,0.717,85,0.908,89,2.933,116,1.85,134,2.933,155,0.96,158,0.96,160,0.908,161,0.908,163,0.908,165,0.908,167,0.908,169,0.96,171,0.908,173,0.908,175,0.96,177,0.96,179,0.908,181,0.908,183,0.908,185,0.908,188,0.908,191,1.358,192,2.353,193,2.601,194,2.601,225,2.933,250,1.727,252,2.156,253,1.429,277,2.353,299,2.601,311,2.353,314,2.353,352,2.233,357,2.933,361,2.156,376,2.977,423,2.933,461,2.933,475,2.933,476,2.933,497,2.879,511,1.727,550,2.353,551,2.601,552,3.593,594,2.933,603,2.601,604,2.933,620,1.85,632,2.933,633,2.933,640,2.156,767,2.933,811,2.933,820,2.156,838,3.593,891,2.933,894,2.933,916,2.933,917,4.116,926,2.353,934,2.353,938,2.933,947,2.933,992,2.933,1012,2.933,1016,2.933,1017,2.933,1041,2.933,1042,2.933,1047,2.933,1052,2.933,1055,3.593,1064,2.601,1069,2.601,1070,2.933,1113,2.933,1128,3.593,1148,2.933,1244,2.933,1245,2.933,1342,2.933,1343,3.436,1344,3.436,1345,6.154,1346,3.436,1347,3.436,1348,3.436,1349,3.436,1350,3.436,1351,6.154,1352,5.437,1353,5.437,1354,5.437,1355,3.436,1356,3.436,1357,3.436,1358,4.746,1359,3.436,1360,3.436,1361,3.436,1362,4.746,1363,3.436,1364,3.436,1365,3.436,1366,5.437,1367,5.437,1368,3.436,1369,3.436,1370,3.436,1371,3.436,1372,3.436,1373,3.436,1374,3.436,1375,3.436,1376,4.116,1377,5.437,1378,2.933,1379,2.933,1380,3.436,1381,3.436]],["title/dependencies.html",[241,2.695,1382,2.984]],["body/dependencies.html",[16,0.022,32,0.705,33,2.607,37,2.983,66,0.017,67,0.017,241,3.037,243,3.665,259,5.066,260,4.494,266,4.132,269,3.665,270,4.132,283,3.316,304,4.132,305,2.607,306,4.132,330,4.132,855,2.805,1032,4.132,1081,4.132,1383,4.842,1384,4.842,1385,7.203,1386,4.842,1387,5.936,1388,4.842,1389,4.842,1390,4.842,1391,4.842,1392,4.842,1393,4.842,1394,4.842,1395,4.842,1396,4.842,1397,4.842,1398,4.842,1399,4.842,1400,4.842,1401,4.842,1402,4.842,1403,4.842,1404,4.842,1405,4.842,1406,4.842,1407,4.842]],["title/miscellaneous/enumerations.html",[1408,1.729,1409,3.667]],["body/miscellaneous/enumerations.html",[2,0.253,6,0.158,16,0.022,18,0.205,23,2.325,27,0.584,66,0.014,67,0.014,94,3.169,118,2.482,193,2.508,194,3.503,204,1.919,212,2.269,216,3.503,217,2.827,220,2.827,221,2.827,224,3.949,462,1.665,507,2.681,551,2.508,643,2.827,679,3.949,680,3.949,681,3.949,736,2.903,787,3.169,801,2.827,822,2.177,1138,3.503,1139,2.508,1340,3.949,1408,1.919,1409,2.827,1410,3.313,1411,4.627,1412,3.313,1413,4.627,1414,3.313,1415,3.313,1416,3.313,1417,3.313,1418,3.313,1419,3.313,1420,3.313,1421,3.313,1422,3.313,1423,3.313,1424,3.313,1425,3.313,1426,3.313,1427,3.313,1428,3.313,1429,3.313,1430,3.313,1431,3.313,1432,3.313,1433,3.313,1434,3.313,1435,3.313,1436,3.313,1437,3.313,1438,3.313,1439,3.313,1440,3.313,1441,3.313,1442,3.313,1443,3.313,1444,3.313,1445,3.313,1446,3.313,1447,3.313,1448,3.313,1449,3.313,1450,3.313,1451,3.313,1452,3.313,1453,3.313,1454,3.313,1455,3.313,1456,3.313,1457,3.313,1458,3.313,1459,3.313,1460,3.313,1461,3.313,1462,3.313,1463,3.313,1464,3.313,1465,3.313,1466,3.313,1467,3.313,1468,3.313,1469,3.313,1470,3.313,1471,3.313,1472,3.313,1473,3.313,1474,3.313,1475,3.313,1476,3.313,1477,3.313,1478,3.313,1479,3.313,1480,3.313,1481,3.313,1482,3.313,1483,3.313,1484,3.313,1485,3.313,1486,3.313,1487,3.313,1488,3.313,1489,3.313,1490,3.313,1491,3.313,1492,3.313,1493,3.313,1494,2.827,1495,3.313,1496,3.313,1497,3.313,1498,3.313,1499,3.313,1500,3.313,1501,3.313,1502,3.313,1503,3.313,1504,3.313,1505,3.313,1506,3.313,1507,3.313,1508,3.313,1509,3.313,1510,3.313,1511,3.313,1512,3.313,1513,3.313,1514,3.313,1515,3.313,1516,3.313,1517,3.313,1518,3.313]],["title/index.html",[6,0.142,642,2.044,901,2.547]],["body/index.html",[3,0.199,4,0.174,16,0.021,17,0.643,41,1.963,55,3.771,56,0.911,66,0.015,67,0.015,84,0.564,93,1.019,140,5.13,146,3.483,196,3.1,202,3.385,256,2.112,269,5.015,370,3.741,431,3.385,448,3.111,456,3.839,508,2.112,511,3.02,544,3.741,588,3.111,629,2.76,630,3.111,662,3.111,666,3.385,669,2.497,674,3.111,702,3.111,713,3.111,717,3.111,750,3.111,788,2.76,789,3.111,797,4.785,798,3.111,883,3.839,905,3.111,929,3.111,932,2.76,1494,3.111,1519,3.646,1520,4.942,1521,5.607,1522,5.607,1523,3.646,1524,3.646,1525,4.942,1526,6.625,1527,3.646,1528,6.478,1529,3.646,1530,3.646,1531,3.646,1532,3.646,1533,3.646,1534,6.283,1535,3.646,1536,3.646,1537,3.646,1538,4.942,1539,3.646,1540,3.646,1541,3.111,1542,7.024,1543,2.76,1544,4.942,1545,3.646,1546,3.646,1547,5.607,1548,4.942,1549,6.907,1550,3.646,1551,4.942,1552,3.646,1553,3.646,1554,6.283,1555,4.942,1556,5.607,1557,3.646,1558,3.646,1559,5.607,1560,3.646,1561,5.607,1562,3.646,1563,6.283,1564,3.646,1565,3.646,1566,3.646,1567,3.646,1568,3.646,1569,3.646,1570,4.942,1571,3.646,1572,3.646,1573,3.646,1574,3.646,1575,3.646,1576,3.646,1577,4.942,1578,6.283,1579,4.942,1580,4.942,1581,3.646,1582,3.646,1583,3.646,1584,3.646]],["title/modules.html",[239,2.624]],["body/modules.html",[16,0.019,66,0.019,67,0.019,239,3.046,240,3.876,249,3.55,260,4.283,732,4.46,1585,5.659,1586,5.659,1587,5.659,1588,5.659]],["title/overview.html",[1543,3.69]],["body/overview.html",[0,2.959,11,1.715,16,0.022,26,1.84,31,1.155,42,0.214,43,0.33,56,0.977,66,0.015,67,0.015,84,0.393,85,1.535,143,2.265,150,1.221,155,1.623,158,1.884,160,1.535,163,1.535,165,1.535,167,1.535,169,1.623,171,1.535,173,1.535,175,1.623,177,1.623,179,1.535,181,1.535,183,1.535,185,1.535,188,1.535,191,0.777,213,2.959,215,3.643,239,2.788,240,5.156,241,2.453,242,2.959,243,2.959,244,3.337,245,3.337,246,3.337,247,3.337,248,3.337,249,3.643,250,2.918,251,3.978,252,3.643,253,2.415,254,4.42,255,3.337,256,2.265,1089,3.001,1140,2.959,1543,2.959,1589,3.91,1590,3.91,1591,3.91,1592,3.91]],["title/routes.html",[26,2.294]],["body/routes.html",[16,0.019,26,2.725,66,0.019,67,0.019]],["title/miscellaneous/typealiases.html",[1408,1.729,1593,4.296]],["body/miscellaneous/typealiases.html",[6,0.261,16,0.019,18,0.395,66,0.019,67,0.019,70,0.745,76,0.966,470,2.99,796,4.674,1408,3.173,1594,5.477,1595,5.477,1596,6.972,1597,5.477,1598,5.477,1599,5.477,1600,5.477,1601,5.477,1602,5.477,1603,5.477]],["title/miscellaneous/variables.html",[1376,3.252,1408,1.729]],["body/miscellaneous/variables.html",[6,0.238,16,0.022,18,0.402,65,2.894,66,0.018,67,0.018,76,1.067,117,2.149,118,2.149,376,4.417,601,2.207,966,5.12,1055,3.781,1064,4.926,1065,4.263,1376,3.781,1378,4.263,1379,4.263,1408,2.894,1541,5.163,1604,4.995,1605,4.995,1606,4.995,1607,6.05,1608,6.05,1609,6.05,1610,6.05,1611,6.05,1612,6.05,1613,6.05]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":497,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/49",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1089,"title":{"interfaces/UserCard-1.html":{}},"body":{"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["1.0.11",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1524,"title":{},"body":{"index.html":{}}}],["1.amazonaws.com",{"_index":1109,"title":{},"body":{"injectables/UploadService.html":{}}}],["1.amazonaws.com/rydeforce/rydeforc",{"_index":873,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["1.amazonaws.com:2222",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/17",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1591,"title":{},"body":{"overview.html":{}}}],["100000000000",{"_index":1092,"title":{},"body":{"injectables/UploadService.html":{}}}],["11",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1592,"title":{},"body":{"overview.html":{}}}],["13/30",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1329,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["153",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1589,"title":{},"body":{"overview.html":{}}}],["174",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["2.321.0",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1196,"title":{},"body":{"components/UsercardComponent.html":{}}}],["234.comput",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["3",{"_index":1140,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["3.2.2",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/5",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["6.1.8",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1590,"title":{},"body":{"overview.html":{}}}],["7/60",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1206,"title":{},"body":{"components/UsercardComponent.html":{}}}],["8/10",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":878,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["abov",{"_index":716,"title":{},"body":{"components/HowToComponent.html":{}}}],["access",{"_index":50,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["accessguard",{"_index":1,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{}}}],["accesskeyid",{"_index":1084,"title":{},"body":{"injectables/UploadService.html":{}}}],["accompani",{"_index":211,"title":{},"body":{"interfaces/ApiError.html":{}}}],["account",{"_index":641,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["account'",{"_index":721,"title":{},"body":{"components/HowToComponent.html":{}}}],["account\\'",{"_index":752,"title":{},"body":{"components/HowToComponent.html":{}}}],["accountinfo",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accountinfo'},{'nam",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["accountinfocompon",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":1169,"title":{},"body":{"components/UsercardComponent.html":{}}}],["activ",{"_index":1114,"title":{},"body":{"interfaces/User.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AccessGuard.html":{}}}],["actual_compon",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["add",{"_index":544,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"index.html":{}}}],["addcartous",{"_index":487,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addit",{"_index":198,"title":{},"body":{"interfaces/ApiError.html":{}}}],["address",{"_index":71,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["address2",{"_index":72,"title":{},"body":{"classes/AddressModel.html":{},"components/ViewProfileComponent.html":{}}}],["addressid",{"_index":73,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressmodel",{"_index":68,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["addressselect",{"_index":1020,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["admin",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["admin.component.css",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":85,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["again",{"_index":746,"title":{},"body":{"components/HowToComponent.html":{}}}],["agm/cor",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasybxwxgwzxhyvz9jyn9srhggozi7vcu5g3g",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["ak",{"_index":1424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["akiairzg4tk6eblzv7ga",{"_index":1085,"title":{},"body":{"injectables/UploadService.html":{}}}],["al",{"_index":1422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alabama",{"_index":1421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alaska",{"_index":1423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":656,"title":{},"body":{"components/HowToComponent.html":{},"injectables/UploadService.html":{}}}],["allpost",{"_index":1325,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["alreadi",{"_index":1551,"title":{},"body":{"index.html":{}}}],["amount",{"_index":1567,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1521,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":855,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["angular/compil",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/source_map",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["angular/cor",{"_index":32,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":33,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["animate(100",{"_index":1199,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(200",{"_index":1208,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(400",{"_index":865,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["animateonscrollmodul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["animateonscrollmodule.forroot",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["animst",{"_index":1151,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animthumbst",{"_index":1152,"title":{},"body":{"components/UsercardComponent.html":{}}}],["apart",{"_index":659,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["api",{"_index":212,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"miscellaneous/enumerations.html":{}}}],["api/us",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["apierror",{"_index":192,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["apierror.statu",{"_index":586,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierror.typ",{"_index":590,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierrortyp",{"_index":216,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apierrortype.notloggedin",{"_index":591,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apikey",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["apiurl",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["app.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/user.model",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["app/services/api/us",{"_index":38,"title":{},"body":{"guards/AccessGuard.html":{}}}],["app/services/auth.servic",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":158,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":744,"title":{},"body":{"components/HowToComponent.html":{}}}],["appmodul",{"_index":240,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appplacesautocomplet",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["approutingmodul",{"_index":249,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approv",{"_index":808,"title":{},"body":{"components/LandingComponent.html":{}}}],["ar",{"_index":1426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":792,"title":{},"body":{"components/LandingComponent.html":{}}}],["arizona",{"_index":1427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arkansa",{"_index":1425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["array",{"_index":206,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["artifact",{"_index":1535,"title":{},"body":{"index.html":{}}}],["assets/icons/thumbsdown.png",{"_index":1188,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assets/icons/thumbsup.png",{"_index":1225,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assign",{"_index":1096,"title":{},"body":{"injectables/UploadService.html":{}}}],["associ",{"_index":218,"title":{},"body":{"interfaces/ApiError.html":{}}}],["assum",{"_index":1553,"title":{},"body":{"index.html":{}}}],["async",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["attempt",{"_index":49,"title":{},"body":{"guards/AccessGuard.html":{}}}],["attribut",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth",{"_index":51,"title":{},"body":{"guards/AccessGuard.html":{}}}],["authent",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate(email",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator(email",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":764,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservic",{"_index":250,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1065,"title":{},"body":{"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["autocomplet",{"_index":1037,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1039,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.direct",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete.directive.t",{"_index":1017,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["autocomplete.directive.ts:10",{"_index":1031,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:13",{"_index":1024,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:19",{"_index":1028,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:24",{"_index":1029,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete/plac",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["automat",{"_index":588,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["avail",{"_index":1588,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":1222,"title":{},"body":{"components/UsercardComponent.html":{}}}],["aw",{"_index":1081,"title":{},"body":{"injectables/UploadService.html":{},"dependencies.html":{}}}],["await",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["az",{"_index":1428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b",{"_index":1548,"title":{},"body":{"index.html":{}}}],["back",{"_index":703,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["backend",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["bar",{"_index":718,"title":{},"body":{"components/HowToComponent.html":{}}}],["base",{"_index":1575,"title":{},"body":{"index.html":{}}}],["batch",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["batchend",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["be",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{}}}],["bearer",{"_index":765,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["begin",{"_index":1097,"title":{},"body":{"injectables/UploadService.html":{}}}],["best",{"_index":1568,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":933,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["big",{"_index":722,"title":{},"body":{"components/HowToComponent.html":{}}}],["bio",{"_index":889,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["biographi",{"_index":665,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["blablablabla",{"_index":890,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["block",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["blue",{"_index":723,"title":{},"body":{"components/HowToComponent.html":{}}}],["bodi",{"_index":1094,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["bootstrap",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["both",{"_index":688,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["box",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["branch",{"_index":1549,"title":{},"body":{"index.html":{}}}],["brand",{"_index":692,"title":{},"body":{"components/HowToComponent.html":{}}}],["bring",{"_index":733,"title":{},"body":{"components/HowToComponent.html":{}}}],["brows",{"_index":732,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"modules.html":{}}}],["browser",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["btncarinfo",{"_index":480,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["btoa(this.officeobject",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{}}}],["bucket",{"_index":1083,"title":{},"body":{"injectables/UploadService.html":{}}}],["build",{"_index":1534,"title":{},"body":{"index.html":{}}}],["burden",{"_index":800,"title":{},"body":{"components/LandingComponent.html":{}}}],["button",{"_index":509,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{}}}],["c.foreach(el",{"_index":519,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.id",{"_index":546,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.make",{"_index":547,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.model",{"_index":548,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.year",{"_index":549,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["ca",{"_index":1430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":47,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{}}}],["calcul",{"_index":930,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["california",{"_index":1429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["call",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["callback",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canactivate(rout",{"_index":21,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canedit",{"_index":1248,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["car",{"_index":161,"title":{"classes/Car.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["car.model",{"_index":1126,"title":{},"body":{"interfaces/User.html":{}}}],["card",{"_index":832,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["card.fac",{"_index":880,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["card.user.firstnam",{"_index":836,"title":{},"body":{"components/LikesComponent.html":{}}}],["carmak",{"_index":481,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carmodel",{"_index":482,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carobject",{"_index":483,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carpool",{"_index":790,"title":{},"body":{"components/LandingComponent.html":{}}}],["carregistrationcompon",{"_index":160,"title":{"components/CarRegistrationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caryear",{"_index":484,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["catcherror",{"_index":34,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":576,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(_",{"_index":62,"title":{},"body":{"guards/AccessGuard.html":{}}}],["center",{"_index":1173,"title":{},"body":{"components/UsercardComponent.html":{}}}],["certain",{"_index":1600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chang",{"_index":883,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["charact",{"_index":1330,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["check",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["checkifloggedin",{"_index":1004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checkout",{"_index":1547,"title":{},"body":{"index.html":{}}}],["choos",{"_index":684,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["chose",{"_index":694,"title":{},"body":{"components/HowToComponent.html":{}}}],["circl",{"_index":791,"title":{},"body":{"components/LandingComponent.html":{}}}],["circlemanag",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["citi",{"_index":74,"title":{},"body":{"classes/AddressModel.html":{}}}],["class",{"_index":43,"title":{"classes/AddressModel.html":{},"classes/Car.html":{},"classes/SwipecardModel.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":545,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["cli",{"_index":1522,"title":{},"body":{"index.html":{}}}],["click",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["client",{"_index":580,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["closer",{"_index":743,"title":{},"body":{"components/HowToComponent.html":{}}}],["cluster_appmodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":1432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":1531,"title":{},"body":{"index.html":{}}}],["colorado",{"_index":1431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["come",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":945,"title":{},"body":{"interfaces/Marker.html":{}}}],["commit",{"_index":1554,"title":{},"body":{"index.html":{}}}],["common",{"_index":1013,"title":{},"body":{"interfaces/Office.html":{}}}],["commonmodul",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["compani",{"_index":805,"title":{},"body":{"components/LandingComponent.html":{}}}],["compat",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["compon",{"_index":84,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["components/accountinfo/accountinfo.compon",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin/admin.compon",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/car",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/favorites/favorites.compon",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/how",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing/landing.compon",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/likes/likes.compon",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["components/likesmatchweb/likesmatchweb.compon",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map.compon",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.compon",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rideswipe/rideswipe.compon",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usercard/usercard.compon",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usermatchweb/usermatchweb.compon",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["components/view",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":655,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["confirmpassword",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ViewProfileComponent.html":{}}}],["conflict",{"_index":1570,"title":{},"body":{"index.html":{}}}],["congratul",{"_index":710,"title":{},"body":{"components/HowToComponent.html":{}}}],["connecticut",{"_index":1433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.error('network",{"_index":584,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log",{"_index":628,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log(",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"data2",{"_index":1134,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log(\"her",{"_index":869,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(\"loggeddata2",{"_index":870,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(\"nop",{"_index":1320,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(\"thi",{"_index":866,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('befor",{"_index":1112,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('car",{"_index":526,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('data",{"_index":1213,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log('geocod",{"_index":626,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log('got",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('gotten",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('in",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('print",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sav",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('successfulli",{"_index":1104,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('ther",{"_index":1102,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('upload",{"_index":1107,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(data",{"_index":868,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data2",{"_index":828,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3",{"_index":1215,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(e.messag",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(environment.apiurl",{"_index":985,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["console.log(ev",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(param",{"_index":1105,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(posts.results[0].id",{"_index":1326,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(this.currentus",{"_index":779,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["console.log(this.currentuser.id",{"_index":1228,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.swipecards[this.currentindex].user.id",{"_index":1229,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.userservice.getofficebylink(this.currentuser.office).subscribe().tostr",{"_index":1282,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(userlink",{"_index":1214,"title":{},"body":{"components/UsercardComponent.html":{}}}],["const",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constant",{"_index":1210,"title":{},"body":{"components/UsercardComponent.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(authservic",{"_index":562,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(elref",{"_index":1021,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(http",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["constructor(matchservic",{"_index":815,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(priv",{"_index":45,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(tokenstorag",{"_index":757,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(userservic",{"_index":10,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contact",{"_index":553,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contactinfo",{"_index":550,"title":{"interfaces/ContactInfo.html":{}},"body":{"interfaces/ContactInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["contactinfotyp",{"_index":1411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contain",{"_index":719,"title":{},"body":{"components/HowToComponent.html":{}}}],["controller.servic",{"_index":39,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["controller.service.t",{"_index":917,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["controller.service.ts:17",{"_index":922,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:18",{"_index":964,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:27",{"_index":974,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:29",{"_index":928,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:38",{"_index":972,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:49",{"_index":977,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:61",{"_index":982,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:69",{"_index":962,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:79",{"_index":958,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:89",{"_index":979,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:9",{"_index":920,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["conveni",{"_index":214,"title":{},"body":{"interfaces/ApiError.html":{}}}],["core",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":209,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{}}}],["coverag",{"_index":1342,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{}}}],["credenti",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["ct",{"_index":1434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["currentindex",{"_index":1153,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentrol",{"_index":1249,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["currentswipecard",{"_index":1154,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.firstnam",{"_index":1232,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.lastnam",{"_index":1233,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentus",{"_index":770,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["data",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["data2",{"_index":827,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3",{"_index":833,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3.photourl",{"_index":829,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["databas",{"_index":467,"title":{},"body":{"classes/Car.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{}}}],["date",{"_index":660,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date().getfullyear",{"_index":542,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["date(sessionstorage.getitem(\"batchend\")).tolocaledatestr",{"_index":1287,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["date(this.batchend",{"_index":1310,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dateformatpip",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["datelocationencrypt",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{}}}],["dc",{"_index":1438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dd't'hh:mm:ss.sss'z",{"_index":1123,"title":{},"body":{"interfaces/User.html":{}}}],["de",{"_index":1436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decent",{"_index":1566,"title":{},"body":{"index.html":{}}}],["declar",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":1184,"title":{},"body":{"components/UsercardComponent.html":{}}}],["default",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["degre",{"_index":879,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["delawar",{"_index":1435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["depend",{"_index":241,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"components/HowToComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["deseri",{"_index":965,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["detail",{"_index":195,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{}}}],["detect",{"_index":1569,"title":{},"body":{"index.html":{}}}],["determin",{"_index":741,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["dev",{"_index":1528,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1525,"title":{},"body":{"index.html":{}}}],["devif",{"_index":1572,"title":{},"body":{"index.html":{}}}],["differ",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["direct",{"_index":56,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/plac",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1533,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1538,"title":{},"body":{"index.html":{}}}],["discord",{"_index":682,"title":{},"body":{"components/HowToComponent.html":{}}}],["dislik",{"_index":736,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dislikedriv",{"_index":948,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dislikedriver(riderid",{"_index":956,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["display",{"_index":734,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["dist",{"_index":1537,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":742,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["districtofcolumbia",{"_index":1437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["document",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["document.getelementbyid(\"address\").removeattribute(\"dis",{"_index":1294,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").removeattribute(\"dis",{"_index":1295,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").setattribute(\"typ",{"_index":1296,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"confirmpassword\").removeattribute(\"dis",{"_index":1293,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"currentoffice\").style.display",{"_index":1297,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"currentoffice\").textcont",{"_index":1283,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"edit\").style.display",{"_index":1300,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"email\").removeattribute(\"dis",{"_index":1291,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"errormessage\").removeattribute(\"hidden",{"_index":1302,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"firstname\").removeattribute(\"dis",{"_index":1289,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"lastname\").removeattribute(\"dis",{"_index":1290,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"password\").removeattribute(\"dis",{"_index":1292,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"profilepic\").setattribute(\"src\",this.currentuser.photourl",{"_index":1003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid(\"selectoffice\").style.display",{"_index":1298,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"submit\").style.display",{"_index":1301,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessagelogin",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["done",{"_index":685,"title":{},"body":{"components/HowToComponent.html":{}}}],["draggabl",{"_index":939,"title":{},"body":{"interfaces/Marker.html":{}}}],["driver",{"_index":507,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MatchingControllerService.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["driver'",{"_index":728,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver/passeng",{"_index":731,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver\\'",{"_index":753,"title":{},"body":{"components/HowToComponent.html":{}}}],["driverid",{"_index":957,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dropdown",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["due",{"_index":589,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{}}}],["dummi",{"_index":1132,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["durat",{"_index":1048,"title":{},"body":{"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["dynam",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{}}}],["e.g",{"_index":1014,"title":{},"body":{"interfaces/Office.html":{}}}],["e.messag",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["e.message=='shortcircuit",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2",{"_index":1582,"title":{},"body":{"index.html":{}}}],["earli",{"_index":1571,"title":{},"body":{"index.html":{}}}],["east",{"_index":872,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["edit",{"_index":1250,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["effort",{"_index":668,"title":{},"body":{"components/HowToComponent.html":{}}}],["element",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["element.owner.substring(7",{"_index":521,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["elementref",{"_index":1022,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["elref",{"_index":1025,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["elref.nativeel",{"_index":1034,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["email",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["employe",{"_index":672,"title":{},"body":{"components/HowToComponent.html":{}}}],["employer'",{"_index":804,"title":{},"body":{"components/LandingComponent.html":{}}}],["employer\\'",{"_index":810,"title":{},"body":{"components/LandingComponent.html":{}}}],["empti",{"_index":205,"title":{},"body":{"interfaces/ApiError.html":{},"components/ViewProfileComponent.html":{}}}],["encryptedlocationd",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationdate}}{{registrationkey",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{}}}],["end",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["endflipcard",{"_index":843,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["endflipcard(card",{"_index":846,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["endpoint",{"_index":223,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MapsControllerService.html":{}}}],["enjoy",{"_index":795,"title":{},"body":{"components/LandingComponent.html":{}}}],["enter",{"_index":663,"title":{},"body":{"components/HowToComponent.html":{}}}],["entri",{"_index":554,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["enum",{"_index":219,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enumer",{"_index":1409,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["err",{"_index":1101,"title":{},"body":{"injectables/UploadService.html":{}}}],["err.error",{"_index":577,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":587,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":204,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["error.model",{"_index":573,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.model.t",{"_index":194,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["errorev",{"_index":579,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":215,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["especi",{"_index":1564,"title":{},"body":{"index.html":{}}}],["event",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["eventemitt",{"_index":1026,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["exampl",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LikesComponent.html":{}}}],["execut",{"_index":1579,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1552,"title":{},"body":{"index.html":{}}}],["expir",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["face",{"_index":856,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["fail",{"_index":530,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["fals",{"_index":601,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":700,"title":{},"body":{"components/HowToComponent.html":{}}}],["fast",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["favorit",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'nam",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["favorites.component.css",{"_index":595,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":596,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favoritescompon",{"_index":163,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fellow",{"_index":671,"title":{},"body":{"components/HowToComponent.html":{}}}],["fetch",{"_index":969,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["field",{"_index":200,"title":{},"body":{"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["file.nam",{"_index":1093,"title":{},"body":{"injectables/UploadService.html":{}}}],["fill",{"_index":691,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["final",{"_index":695,"title":{},"body":{"components/HowToComponent.html":{}}}],["find",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{}}}],["finish",{"_index":698,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["first",{"_index":647,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["firstnam",{"_index":1115,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["fit",{"_index":676,"title":{},"body":{"components/HowToComponent.html":{}}}],["fl",{"_index":1440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["flag",{"_index":1540,"title":{},"body":{"index.html":{}}}],["flipcard",{"_index":844,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["flipcard(card",{"_index":848,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["florida",{"_index":1439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focus",{"_index":725,"title":{},"body":{"components/HowToComponent.html":{}}}],["folder",{"_index":1071,"title":{},"body":{"injectables/UploadService.html":{}}}],["follow",{"_index":630,"title":{},"body":{"injectables/GeocodeService.html":{},"index.html":{}}}],["forgot",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["format",{"_index":203,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{}}}],["format.pip",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["formsmodul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["front",{"_index":864,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["full",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1100,"title":{},"body":{"injectables/UploadService.html":{}}}],["further",{"_index":789,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["ga",{"_index":801,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gener",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["geocod",{"_index":605,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode(address",{"_index":608,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":603,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["geograph",{"_index":924,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["georgia",{"_index":1441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":901,"title":{"index.html":{}},"body":{"components/LoginComponent.html":{}}}],["getcurrentus",{"_index":995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getdislikeddriv",{"_index":949,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdislikeddrivers(riderid",{"_index":961,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdist",{"_index":918,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getdistance(address",{"_index":921,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getformattedaddress",{"_index":1018,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getformattedaddress(plac",{"_index":1027,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getfromlink",{"_index":950,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfromlink(uri",{"_index":963,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddriv",{"_index":951,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddrivers(riderid",{"_index":971,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdriv",{"_index":952,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdrivers(riderid",{"_index":973,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getoffic",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getregistrationkey",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["getrol",{"_index":1251,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getrout",{"_index":919,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getroute(start",{"_index":927,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["gets3bucket",{"_index":1072,"title":{},"body":{"injectables/UploadService.html":{}}}],["gettoken",{"_index":1056,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["getus",{"_index":1252,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getuser(email",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{}}}],["git",{"_index":1542,"title":{},"body":{"index.html":{}}}],["github",{"_index":1574,"title":{},"body":{"index.html":{}}}],["give",{"_index":708,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{}}}],["given",{"_index":657,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["go",{"_index":702,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["goe",{"_index":881,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["good",{"_index":674,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["googl",{"_index":618,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocod",{"_index":614,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderresult",{"_index":621,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatu",{"_index":622,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":623,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlng",{"_index":611,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlngliter",{"_index":942,"title":{},"body":{"interfaces/Marker.html":{}}}],["google.maps.places.autocomplete(this.el",{"_index":1038,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["googlemap",{"_index":1032,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["googlemapsapiwrapp",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["gotten",{"_index":528,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["graph",{"_index":1587,"title":{},"body":{"modules.html":{}}}],["group",{"_index":806,"title":{},"body":{"components/LandingComponent.html":{}}}],["groupm",{"_index":683,"title":{},"body":{"components/HowToComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["have",{"_index":968,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["haven't",{"_index":714,"title":{},"body":{"components/HowToComponent.html":{}}}],["haven\\'t",{"_index":751,"title":{},"body":{"components/HowToComponent.html":{}}}],["hawaii",{"_index":1442,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["help",{"_index":797,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["here",{"_index":669,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"index.html":{}}}],["hi",{"_index":1443,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hide",{"_index":1164,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimag",{"_index":1159,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimage(hid",{"_index":1162,"title":{},"body":{"components/UsercardComponent.html":{}}}],["home",{"_index":644,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["home(curr",{"_index":1011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hopefulli",{"_index":749,"title":{},"body":{"components/HowToComponent.html":{}}}],["hour",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["howto",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["howtocompon",{"_index":165,"title":{"components/HowToComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["htmlinputel",{"_index":1030,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["http",{"_index":210,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["http://ec2",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1529,"title":{},"body":{"index.html":{}}}],["http://semant",{"_index":830,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["http_interceptor",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpclientmodul",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httperrorrespons",{"_index":570,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":568,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheader",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpinterceptor",{"_index":569,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":565,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://s3.u",{"_index":871,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["https://stackoverflow.com/a/46941824",{"_index":1603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["i'm",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["ia",{"_index":1449,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["icon",{"_index":943,"title":{},"body":{"interfaces/Marker.html":{}}}],["id",{"_index":462,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["idaho",{"_index":1444,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1562,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["if(!this.userservice.isloggedin",{"_index":1007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(e.message=='gener",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(sessionstorage.getitem(\"rol",{"_index":1318,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(sessionstorage.length",{"_index":781,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["if(this.password",{"_index":1311,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(this.userservice.isloggedin",{"_index":1005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["il",{"_index":1446,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["illinoi",{"_index":1445,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["immedi",{"_index":738,"title":{},"body":{"components/HowToComponent.html":{}}}],["implement",{"_index":44,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["incorrect",{"_index":701,"title":{},"body":{"components/HowToComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1447,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["indic",{"_index":207,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info.model",{"_index":936,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["info.model.t",{"_index":552,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["inform",{"_index":508,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["infowindow",{"_index":944,"title":{},"body":{"interfaces/Marker.html":{}}}],["inject",{"_index":31,"title":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1299,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["input",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["instanceof",{"_index":578,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["instead",{"_index":1095,"title":{},"body":{"injectables/UploadService.html":{}}}],["instructor",{"_index":658,"title":{},"body":{"components/HowToComponent.html":{}}}],["intercept",{"_index":561,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":564,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":559,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interest",{"_index":1138,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":191,"title":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["invok",{"_index":617,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["iowa",{"_index":1448,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["it'",{"_index":750,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["it\\'",{"_index":755,"title":{},"body":{"components/HowToComponent.html":{}}}],["item",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["item.info",{"_index":1333,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["item.typ",{"_index":1332,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["js",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["jwtinterceptor",{"_index":251,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["kansa",{"_index":1450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1581,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kentucki",{"_index":1452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{}}}],["ks",{"_index":1451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ky",{"_index":1453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":1455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":940,"title":{},"body":{"interfaces/Marker.html":{}}}],["land",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["landing'},{'nam",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["landing.component.css",{"_index":768,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":769,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":167,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":653,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["lastnam",{"_index":1116,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["latitud",{"_index":892,"title":{},"body":{"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["latlng",{"_index":613,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["latlngliter",{"_index":925,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["left",{"_index":1179,"title":{},"body":{"components/UsercardComponent.html":{}}}],["legend",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["lessen",{"_index":799,"title":{},"body":{"components/LandingComponent.html":{}}}],["librari",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["like",{"_index":737,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["like(index",{"_index":1137,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["likecard",{"_index":842,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likedriv",{"_index":953,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likedriver(riderid",{"_index":976,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likes'},{'nam",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likes.component.css",{"_index":812,"title":{},"body":{"components/LikesComponent.html":{}}}],["likes.component.html",{"_index":813,"title":{},"body":{"components/LikesComponent.html":{}}}],["likescompon",{"_index":169,"title":{"components/LikesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["likesmatchweb",{"_index":839,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb'},{'nam",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likesmatchweb.component.css",{"_index":840,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb.component.html",{"_index":841,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchwebcompon",{"_index":171,"title":{"components/LikesmatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["link",{"_index":470,"title":{},"body":{"classes/Car.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["link.model",{"_index":474,"title":{},"body":{"classes/Car.html":{},"interfaces/User.html":{}}}],["list",{"_index":745,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["littl",{"_index":667,"title":{},"body":{"components/HowToComponent.html":{}}}],["live",{"_index":1120,"title":{},"body":{"interfaces/User.html":{}}}],["locat",{"_index":620,"title":{"interfaces/Location.html":{}},"body":{"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["location.reload(tru",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["location_obj",{"_index":1035,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["log",{"_index":54,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{}}}],["login",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'nam",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login.component.css",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":173,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["longitud",{"_index":893,"title":{},"body":{"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["look",{"_index":707,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["louisiana",{"_index":1454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":1555,"title":{},"body":{"index.html":{}}}],["ma",{"_index":1459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":643,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["map",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{}}}],["map'},{'nam",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["map(token",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["mapcompon",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapsapiload",{"_index":1023,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["mapscontrollerservic",{"_index":252,"title":{"injectables/MapsControllerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"coverage.html":{},"overview.html":{}}}],["mapto",{"_index":35,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mapto(tru",{"_index":61,"title":{},"body":{"guards/AccessGuard.html":{}}}],["marker",{"_index":926,"title":{"interfaces/Marker.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["maryland",{"_index":1456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massachusett",{"_index":1458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1576,"title":{},"body":{"index.html":{}}}],["match",{"_index":67,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches/${riderid",{"_index":984,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid",{"_index":990,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid}/${driverid",{"_index":991,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid",{"_index":986,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid}/${driverid",{"_index":988,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matchingcontrollerservic",{"_index":253,"title":{"injectables/MatchingControllerService.html":{}},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":817,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["math.floor(math.random",{"_index":1091,"title":{},"body":{"injectables/UploadService.html":{}}}],["md",{"_index":1457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mean",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["member",{"_index":807,"title":{},"body":{"components/LandingComponent.html":{}}}],["merg",{"_index":1563,"title":{},"body":{"index.html":{}}}],["messag",{"_index":196,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["messagelogin",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.innerhtml",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.style.display",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["meter",{"_index":1050,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["mi",{"_index":1461,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["michigan",{"_index":1460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleencrypt",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["middleencryption.length",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["minnesota",{"_index":1462,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":1408,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing/incorrect",{"_index":201,"title":{},"body":{"interfaces/ApiError.html":{}}}],["mississippi",{"_index":1464,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["missouri",{"_index":1466,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mm",{"_index":1122,"title":{},"body":{"interfaces/User.html":{}}}],["mn",{"_index":1463,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mo",{"_index":1467,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":598,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["mode",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["model",{"_index":463,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/address.model",{"_index":1190,"title":{},"body":{"components/UsercardComponent.html":{}}}],["models/api",{"_index":572,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["models/car.model",{"_index":505,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["models/link.model",{"_index":824,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/office.model",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/role.model",{"_index":823,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/rout",{"_index":935,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["models/swipecard.model",{"_index":821,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["models/user.model",{"_index":506,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["modul",{"_index":239,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":1468,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":666,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["move",{"_index":664,"title":{},"body":{"components/HowToComponent.html":{}}}],["ms",{"_index":1465,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":1469,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multi",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["navbar",{"_index":645,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["navbar.component.css",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcompon",{"_index":177,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":717,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["nbsp",{"_index":1336,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["nc",{"_index":1483,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nd",{"_index":1485,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ne",{"_index":1471,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearbi",{"_index":724,"title":{},"body":{"components/HowToComponent.html":{}}}],["nebraska",{"_index":1470,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":788,"title":{},"body":{"components/LandingComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["network",{"_index":582,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nevada",{"_index":1472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":511,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["newhampshir",{"_index":1474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newjersey",{"_index":1476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newmexico",{"_index":1478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newyork",{"_index":1480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":566,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["next.handle(request",{"_index":766,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pip",{"_index":575,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodul",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["nh",{"_index":1475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nj",{"_index":1477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nm",{"_index":1479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobodi",{"_index":1235,"title":{},"body":{"components/UsercardComponent.html":{}}}],["none",{"_index":875,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["northcarolina",{"_index":1482,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northdakota",{"_index":1484,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_logged_in",{"_index":221,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["notifi",{"_index":661,"title":{},"body":{"components/HowToComponent.html":{}}}],["notloggedin",{"_index":220,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":697,"title":{},"body":{"components/HowToComponent.html":{}}}],["null",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["num",{"_index":522,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number",{"_index":79,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/RouteInfo.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["number.parseint(strnum",{"_index":523,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number/etc",{"_index":558,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["nv",{"_index":1473,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ny",{"_index":1481,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["o",{"_index":1243,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["object",{"_index":966,"title":{},"body":{"injectables/MatchingControllerService.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["observable.create((observ",{"_index":616,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":625,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.error(statu",{"_index":627,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(result",{"_index":624,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["occur",{"_index":583,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["of(fals",{"_index":64,"title":{},"body":{"guards/AccessGuard.html":{}}}],["offic",{"_index":116,"title":{"interfaces/Office.html":{}},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["office.model",{"_index":1125,"title":{},"body":{"interfaces/User.html":{}}}],["office.nam",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobject",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobjectarray",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["offices/1",{"_index":1307,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["oh",{"_index":1487,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ohio",{"_index":1486,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":1489,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oklahoma",{"_index":1488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":1550,"title":{},"body":{"index.html":{}}}],["on",{"_index":709,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["onc",{"_index":662,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oninit",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ontap",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["ontap(ev",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["opac",{"_index":1203,"title":{},"body":{"components/UsercardComponent.html":{}}}],["optintodr",{"_index":485,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["option",{"_index":19,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["order",{"_index":713,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oregon",{"_index":1490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["origin",{"_index":1558,"title":{},"body":{"index.html":{}}}],["other",{"_index":796,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1019,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["overview",{"_index":1543,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrit",{"_index":1596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["owner",{"_index":464,"title":{},"body":{"classes/Car.html":{}}}],["p4ssw0rd",{"_index":1315,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["pa",{"_index":1492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":1382,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":57,"title":{},"body":{"guards/AccessGuard.html":{},"components/HowToComponent.html":{}}}],["param",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{}}}],["paramet",{"_index":15,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["params.bucket",{"_index":1110,"title":{},"body":{"injectables/UploadService.html":{}}}],["params.key",{"_index":1111,"title":{},"body":{"injectables/UploadService.html":{}}}],["part",{"_index":648,"title":{},"body":{"components/HowToComponent.html":{}}}],["passeng",{"_index":677,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger'",{"_index":729,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger\\'",{"_index":754,"title":{},"body":{"components/HowToComponent.html":{}}}],["password",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"components/ViewProfileComponent.html":{}}}],["password).subscrib",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["password).topromise().then",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["past",{"_index":882,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["path",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pennsylvania",{"_index":1491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":222,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/User.html":{}}}],["phone",{"_index":679,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["photo",{"_index":1124,"title":{},"body":{"interfaces/User.html":{}}}],["photourl",{"_index":1117,"title":{},"body":{"interfaces/User.html":{}}}],["pictur",{"_index":1165,"title":{},"body":{"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["pin",{"_index":726,"title":{},"body":{"components/HowToComponent.html":{}}}],["pipe",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes/d",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["place",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["placeid",{"_index":941,"title":{},"body":{"interfaces/Marker.html":{}}}],["placesautocompletedirect",{"_index":188,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plan",{"_index":689,"title":{},"body":{"components/HowToComponent.html":{}}}],["pleas",{"_index":715,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["possibl",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["post",{"_index":1324,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["post(environment.apiurl",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["potenti",{"_index":675,"title":{},"body":{"components/HowToComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["pr",{"_index":1494,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["previou",{"_index":704,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["price",{"_index":802,"title":{},"body":{"components/LandingComponent.html":{}}}],["primari",{"_index":208,"title":{},"body":{"interfaces/ApiError.html":{}}}],["privat",{"_index":46,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["problem",{"_index":1546,"title":{},"body":{"index.html":{}}}],["proc",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["process",{"_index":649,"title":{},"body":{"components/HowToComponent.html":{}}}],["prod",{"_index":1539,"title":{},"body":{"index.html":{}}}],["product",{"_index":1541,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["profile.compon",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1246,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.html",{"_index":1247,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.t",{"_index":1245,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:100",{"_index":1259,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:13",{"_index":1255,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:15",{"_index":1268,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:16",{"_index":1269,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:17",{"_index":1273,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":1272,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":1266,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":1263,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:21",{"_index":1264,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:22",{"_index":1265,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1271,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":1270,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":1260,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":1256,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:60",{"_index":1261,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:78",{"_index":1262,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:88",{"_index":1257,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1267,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:95",{"_index":1258,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:99",{"_index":1274,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile/view",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":1520,"title":{},"body":{"index.html":{}}}],["promis",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["properti",{"_index":70,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["protractor",{"_index":1583,"title":{},"body":{"index.html":{}}}],["provid",{"_index":213,"title":{},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["public",{"_index":597,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["puertorico",{"_index":1493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pull",{"_index":1561,"title":{},"body":{"index.html":{}}}],["push",{"_index":1556,"title":{},"body":{"index.html":{}}}],["pushed.befor",{"_index":1560,"title":{},"body":{"index.html":{}}}],["put",{"_index":867,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["rc.0",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":706,"title":{},"body":{"components/HowToComponent.html":{}}}],["reach",{"_index":747,"title":{},"body":{"components/HowToComponent.html":{}}}],["reactiveformsmodul",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1584,"title":{},"body":{"index.html":{}}}],["realli",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["reason",{"_index":631,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["redirect",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["refreshfield",{"_index":488,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reg",{"_index":527,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["region",{"_index":1088,"title":{},"body":{"injectables/UploadService.html":{}}}],["regist",{"_index":640,"title":{"interfaces/Register.html":{}},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"coverage.html":{}}}],["registr",{"_index":477,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration'},{'nam",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["registration.compon",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration.component.css",{"_index":478,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.html",{"_index":479,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.t",{"_index":476,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registration.component.ts:13",{"_index":504,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:15",{"_index":500,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:16",{"_index":498,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:17",{"_index":499,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:18",{"_index":502,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:19",{"_index":503,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:20",{"_index":501,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:23",{"_index":491,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:27",{"_index":493,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:31",{"_index":495,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:53",{"_index":496,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:64",{"_index":492,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:82",{"_index":494,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration/car",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registrationkey",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{}}}],["reload",{"_index":1530,"title":{},"body":{"index.html":{}}}],["remov",{"_index":980,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["repeat",{"_index":740,"title":{},"body":{"components/HowToComponent.html":{}}}],["repo",{"_index":1545,"title":{},"body":{"index.html":{}}}],["request",{"_index":202,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["request.clon",{"_index":762,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requir",{"_index":651,"title":{},"body":{"components/HowToComponent.html":{}}}],["reset",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetcar",{"_index":489,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resetus",{"_index":490,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resolv",{"_index":1573,"title":{},"body":{"index.html":{}}}],["respect",{"_index":705,"title":{},"body":{"components/HowToComponent.html":{}}}],["reston",{"_index":1015,"title":{},"body":{"interfaces/Office.html":{}}}],["result",{"_index":66,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["revatur",{"_index":638,"title":{},"body":{"components/HowToComponent.html":{}}}],["reversegeocod",{"_index":606,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reversegeocode(latlng",{"_index":610,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["review",{"_index":696,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rhodeisland",{"_index":1495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ri",{"_index":1496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ride",{"_index":783,"title":{},"body":{"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["rideforc",{"_index":639,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["rider",{"_index":787,"title":{},"body":{"components/LandingComponent.html":{},"injectables/MatchingControllerService.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riderid",{"_index":960,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["rideshar",{"_index":712,"title":{},"body":{"components/HowToComponent.html":{}}}],["ridesharecli",{"_index":1519,"title":{},"body":{"index.html":{}}}],["rideswip",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RideswipeComponent.html":{}}}],["rideswipe'},{'nam",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rideswipe.component.css",{"_index":1043,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipe.component.html",{"_index":1044,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipecompon",{"_index":179,"title":{"components/RideswipeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1181,"title":{},"body":{"components/UsercardComponent.html":{}}}],["role",{"_index":822,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role.model",{"_index":1127,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":41,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rotat",{"_index":877,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(0deg",{"_index":860,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(180deg",{"_index":863,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(90deg",{"_index":861,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rout",{"_index":26,"title":{"routes.html":{}},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"overview.html":{},"routes.html":{}}}],["route.data.requireslogin",{"_index":59,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routeinfo",{"_index":934,"title":{"interfaces/RouteInfo.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["router,priv",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{}}}],["routerlink",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routing.modul",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["run",{"_index":1526,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":36,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["rydeforc",{"_index":1078,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3",{"_index":1079,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3/65600312303b.png",{"_index":874,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["safe",{"_index":803,"title":{},"body":{"components/LandingComponent.html":{}}}],["save",{"_index":946,"title":{},"body":{"interfaces/Marker.html":{},"components/ViewProfileComponent.html":{}}}],["savetoken",{"_index":1057,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["savetoken(token",{"_index":1061,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sc",{"_index":1498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffold",{"_index":1532,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1202,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scale(1.2",{"_index":1205,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scroll",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sd",{"_index":1500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1082,"title":{},"body":{"injectables/UploadService.html":{}}}],["second",{"_index":1051,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["secretaccesskey",{"_index":1086,"title":{},"body":{"injectables/UploadService.html":{}}}],["section",{"_index":650,"title":{},"body":{"components/HowToComponent.html":{}}}],["see",{"_index":673,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["select",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["selector",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["send",{"_index":923,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["sent",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{}}}],["serv",{"_index":1527,"title":{},"body":{"index.html":{}}}],["server",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["servic",{"_index":52,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{}}}],["services/api/map",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/match",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/us",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/auth.servic",{"_index":574,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["session",{"_index":771,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessioncheck",{"_index":772,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.clear",{"_index":1008,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{}}}],["sessionstorage.getitem(\"address",{"_index":1286,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"email",{"_index":1281,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"firstnam",{"_index":1277,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"lastnam",{"_index":1279,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"rol",{"_index":1322,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1068,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.length",{"_index":1001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sessionstorage.removeitem(token_key",{"_index":1066,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.setitem(\"rol",{"_index":1319,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('act",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('address",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('batchend",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('firstnam",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('id",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('lastnam",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('rol",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('useremail",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('userpassword",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem(token_key",{"_index":1067,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["set",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sethead",{"_index":763,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["seven",{"_index":678,"title":{},"body":{"components/HowToComponent.html":{}}}],["shortcircuit",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["show",{"_index":727,"title":{},"body":{"components/HowToComponent.html":{}}}],["shown",{"_index":739,"title":{},"body":{"components/HowToComponent.html":{}}}],["side",{"_index":581,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sign",{"_index":784,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["signout",{"_index":1058,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["simpli",{"_index":690,"title":{},"body":{"components/HowToComponent.html":{}}}],["skype",{"_index":681,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slack",{"_index":680,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["someth",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["southcarolina",{"_index":1497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southdakota",{"_index":1499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specif",{"_index":217,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["specifi",{"_index":555,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["spent",{"_index":1565,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":1410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":1412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.model.t",{"_index":1414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../link.model.t",{"_index":1595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.model.t",{"_index":1415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.model.t",{"_index":1416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token.storage.t",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":1597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/accountinfo/accountinfo.component.t",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:13",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:15",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:16",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:18",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:22",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:26",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:35",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:42",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/car",{"_index":475,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.t",{"_index":594,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:10",{"_index":599,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/favorites/favorites.component.ts:14",{"_index":600,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/how",{"_index":632,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.t",{"_index":767,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.ts:12",{"_index":773,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:15",{"_index":774,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:30",{"_index":776,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:31",{"_index":775,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/likes/likes.component.t",{"_index":811,"title":{},"body":{"components/LikesComponent.html":{},"coverage.html":{}}}],["src/app/components/likes/likes.component.ts:17",{"_index":816,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:21",{"_index":819,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:23",{"_index":818,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.t",{"_index":838,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:33",{"_index":845,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:37",{"_index":851,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:39",{"_index":850,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:79",{"_index":849,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:88",{"_index":847,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/map/map.component.t",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:14",{"_index":996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:21",{"_index":999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":1002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:40",{"_index":1000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:48",{"_index":997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:72",{"_index":998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.t",{"_index":1042,"title":{},"body":{"components/RideswipeComponent.html":{},"coverage.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:10",{"_index":1045,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:14",{"_index":1046,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/usercard/usercard.component.t",{"_index":1148,"title":{},"body":{"components/UsercardComponent.html":{},"coverage.html":{}}}],["src/app/components/usercard/usercard.component.ts:102",{"_index":1163,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:111",{"_index":1168,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:139",{"_index":1171,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:160",{"_index":1172,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:34",{"_index":1183,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:36",{"_index":1187,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:41",{"_index":1177,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:42",{"_index":1176,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:43",{"_index":1174,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:44",{"_index":1175,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:45",{"_index":1189,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:47",{"_index":1186,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:48",{"_index":1161,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:52",{"_index":1178,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:54",{"_index":1166,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.t",{"_index":1128,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:105",{"_index":1239,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:114",{"_index":1238,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:32",{"_index":1237,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:35",{"_index":1242,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:37",{"_index":1241,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:69",{"_index":1240,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/view",{"_index":1244,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["src/app/directives/plac",{"_index":1016,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["src/app/guards/access.guard.t",{"_index":5,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:16",{"_index":14,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:21",{"_index":25,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/models/address.model.t",{"_index":69,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/app/models/address.model.ts:2",{"_index":80,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:3",{"_index":77,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:4",{"_index":78,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:5",{"_index":81,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:6",{"_index":82,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:7",{"_index":83,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/api",{"_index":193,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/car.model.t",{"_index":461,"title":{},"body":{"classes/Car.html":{},"coverage.html":{}}}],["src/app/models/car.model.ts:12",{"_index":471,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:13",{"_index":468,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:14",{"_index":469,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:15",{"_index":472,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:8",{"_index":466,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/contact",{"_index":551,"title":{},"body":{"interfaces/ContactInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/interest.model.t",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/link.model.t",{"_index":1598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/models/location.model.t",{"_index":891,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/models/marker.model.t",{"_index":938,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["src/app/models/office.model.t",{"_index":1012,"title":{},"body":{"interfaces/Office.html":{},"coverage.html":{}}}],["src/app/models/register.model.t",{"_index":1041,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/role.model.t",{"_index":1419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/rout",{"_index":1047,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/models/state.model.t",{"_index":1420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/swipecard.model.t",{"_index":1052,"title":{},"body":{"classes/SwipecardModel.html":{},"coverage.html":{}}}],["src/app/models/swipecard.model.ts:4",{"_index":1053,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/swipecard.model.ts:5",{"_index":1054,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/user.model.t",{"_index":1113,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/api/map",{"_index":916,"title":{},"body":{"injectables/MapsControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/match",{"_index":947,"title":{},"body":{"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/us",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:122",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:26",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:41",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/geocode.service.t",{"_index":604,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["src/app/services/geocode.service.ts:15",{"_index":612,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:32",{"_index":609,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:9",{"_index":607,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/upload.service.t",{"_index":1070,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:10",{"_index":1074,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:14",{"_index":1075,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:25",{"_index":1077,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:9",{"_index":1080,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/utils/error.interceptor.t",{"_index":560,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:17",{"_index":563,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:20",{"_index":567,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.t",{"_index":756,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:12",{"_index":758,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:15",{"_index":759,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/token.storage.t",{"_index":1055,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/token.storage.ts:11",{"_index":1063,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:16",{"_index":1062,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:21",{"_index":1060,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:8",{"_index":1059,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/types.t",{"_index":1599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.t",{"_index":1378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":642,"title":{"index.html":{}},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state('back",{"_index":862,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('cent",{"_index":1192,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('front",{"_index":858,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('left",{"_index":1194,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('on",{"_index":1201,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('right",{"_index":1197,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('two",{"_index":1204,"title":{},"body":{"components/UsercardComponent.html":{}}}],["statement",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":197,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{}}}],["step",{"_index":1544,"title":{},"body":{"index.html":{}}}],["store",{"_index":1536,"title":{},"body":{"index.html":{}}}],["string",{"_index":76,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strnum",{"_index":520,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["style",{"_index":852,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["styleurl",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["submit",{"_index":543,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["submitchang",{"_index":1253,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["success",{"_index":629,"title":{},"body":{"injectables/GeocodeService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["successfuli",{"_index":711,"title":{},"body":{"components/HowToComponent.html":{}}}],["such",{"_index":199,"title":{},"body":{"interfaces/ApiError.html":{}}}],["support",{"_index":1585,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["svg",{"_index":1586,"title":{},"body":{"modules.html":{}}}],["swipe",{"_index":1136,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["swipe(act",{"_index":1167,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipe_act",{"_index":1155,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecard",{"_index":814,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["swipecardbio",{"_index":1156,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmain",{"_index":1157,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmodel",{"_index":820,"title":{"classes/SwipecardModel.html":{}},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["swipeleft",{"_index":1180,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swiperight",{"_index":1182,"title":{},"body":{"components/UsercardComponent.html":{}}}],["switch",{"_index":1331,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["switchrol",{"_index":1254,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["tabl",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":929,"title":{},"body":{"injectables/MapsControllerService.html":{},"index.html":{}}}],["tap",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["templat",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["templateurl",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["tennesse",{"_index":1501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":1578,"title":{},"body":{"index.html":{}}}],["texa",{"_index":1503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text",{"_index":837,"title":{},"body":{"components/LikesComponent.html":{}}}],["thank",{"_index":1602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["there'",{"_index":1234,"title":{},"body":{"components/UsercardComponent.html":{}}}],["there\\'",{"_index":1236,"title":{},"body":{"components/UsercardComponent.html":{}}}],["think",{"_index":735,"title":{},"body":{"components/HowToComponent.html":{}}}],["this.address2",{"_index":1285,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.addressselect.emit(this.getformattedaddress(autocomplete.getplac",{"_index":1040,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.animst",{"_index":1223,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.animthumbst",{"_index":1221,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.authenticator(email",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.authenticate(this.useremail",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":592,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.batchend",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.car",{"_index":512,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmak",{"_index":533,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmodel",{"_index":535,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject",{"_index":510,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.id",{"_index":531,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.mak",{"_index":532,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.model",{"_index":534,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.own",{"_index":536,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.year",{"_index":538,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.length",{"_index":514,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.push(el",{"_index":524,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.caryear",{"_index":539,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.confirmpassword",{"_index":1312,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentindex",{"_index":1231,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentrol",{"_index":1321,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentswipecard",{"_index":1217,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentus",{"_index":778,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.currentuser.address",{"_index":1308,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentuser.batchend",{"_index":1309,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentuser.email",{"_index":1305,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentuser.firstnam",{"_index":1303,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentuser.lastnam",{"_index":1304,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentuser.offic",{"_index":1306,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.datelocationencrypt",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.el",{"_index":1033,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.encryptedlocationd",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.firstnam",{"_index":1276,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.fold",{"_index":1090,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.geocod",{"_index":615,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocoder.geocod",{"_index":619,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.getoffic",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.gets3bucket().upload(param",{"_index":1099,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.getus",{"_index":1288,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.http",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete[]>(environment.apiurl",{"_index":989,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.get(environment.apiurl",{"_index":937,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["this.http.get[]>(environment.apiurl",{"_index":983,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.put[]>(environment.apiurl",{"_index":987,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.isloggedin",{"_index":1006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.lastnam",{"_index":1278,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.likecards.push(card",{"_index":876,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.mapsapiloader.load().then",{"_index":1036,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.matchservice.dislikedriver(this.currentuser.id",{"_index":1146,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getlikeddrivers(this.currentuser.id).subscrib",{"_index":826,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.matchservice.getmatchingdrivers(this.currentuser.id).subscrib",{"_index":1133,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.likedriver(this.currentuser.id",{"_index":1144,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.undislikedriver(this.currentuser.id",{"_index":1142,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.unlikedriver(this.currentuser.id",{"_index":1145,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.officeobject",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.officeobjectarray",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.password).subscrib",{"_index":1316,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.postservice.getposts().then((allpost",{"_index":1323,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.registrationkey",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.resetus",{"_index":515,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.route.navigate([\"/land",{"_index":1010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.route.navigate(['/land",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.url",{"_index":1009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":63,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.sess",{"_index":782,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.sessioncheck",{"_index":780,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.swipe_action.left",{"_index":1227,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipe_action.right",{"_index":1170,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.add('hidden",{"_index":1219,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.remove('hidden",{"_index":1220,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.length",{"_index":1216,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.push(card",{"_index":835,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["this.swipecards.splice(this.currentindex",{"_index":1230,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[0",{"_index":1218,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[this.currentindex].user.id).subscrib",{"_index":1226,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.thumbimg",{"_index":1224,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":761,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.tokenstorage.savetoken(token",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenstorage.signout",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.url",{"_index":1108,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.us",{"_index":1328,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.usernam",{"_index":1280,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userobject",{"_index":529,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.cars.push(this.carobject",{"_index":540,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id",{"_index":517,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id.tostr",{"_index":537,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userpass",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users.push(card",{"_index":1135,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users.splice(index",{"_index":1147,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].choos",{"_index":1141,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].user.id).subscrib",{"_index":1143,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.createcar(this.carobject).subscribe(car",{"_index":541,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getallcars().subscribe(c",{"_index":518,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getalloffices().subscribe(data",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getallusers().subscribe((x",{"_index":1327,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getcurrentuser().pip",{"_index":60,"title":{},"body":{"guards/AccessGuard.html":{}}}],["this.userservice.getcurrentuser().subscrib",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(us",{"_index":525,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getcurrentuserobservable().subscrib",{"_index":777,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getofficebylink(this.currentuser.office).tostr",{"_index":1284,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getregistrationkey().subscrib",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getuserbyemail(email).subscrib",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuserbyemail(email).then((x",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.invalidatecurrentus",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(this.currentuser).subscribe(data",{"_index":1313,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.updatepassword(this.currentuser.id",{"_index":1314,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["thrash",{"_index":1418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["three",{"_index":687,"title":{},"body":{"components/HowToComponent.html":{}}}],["throwerror",{"_index":571,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(apierror",{"_index":593,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err.error",{"_index":585,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thu",{"_index":699,"title":{},"body":{"components/HowToComponent.html":{}}}],["thumbanimdon",{"_index":1160,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbimg",{"_index":1158,"title":{},"body":{"components/UsercardComponent.html":{}}}],["time",{"_index":932,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"index.html":{}}}],["titl",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["tn",{"_index":1502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to'},{'nam",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["to.compon",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["to.component.css",{"_index":634,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.html",{"_index":635,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.t",{"_index":633,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["to.component.ts:12",{"_index":637,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.ts:8",{"_index":636,"title":{},"body":{"components/HowToComponent.html":{}}}],["to/how",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"coverage.html":{}}}],["tobase64str",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{}}}],["today",{"_index":786,"title":{},"body":{"components/LandingComponent.html":{}}}],["todo",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{}}}],["token.storag",{"_index":760,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["token_key",{"_index":1064,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorag",{"_index":361,"title":{"injectables/TokenStorage.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/TokenStorage.html":{},"coverage.html":{}}}],["total",{"_index":1049,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["trainer",{"_index":1340,"title":{},"body":{"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":859,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transit",{"_index":853,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transition('on",{"_index":1207,"title":{},"body":{"components/UsercardComponent.html":{}}}],["transition('two",{"_index":1209,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex",{"_index":1195,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(0",{"_index":1193,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(200",{"_index":1198,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trash",{"_index":1139,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["travel",{"_index":931,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["tree",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["tri",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["trigger",{"_index":854,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('flip",{"_index":857,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('pop",{"_index":1200,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trigger('slid",{"_index":1191,"title":{},"body":{"components/UsercardComponent.html":{}}}],["true",{"_index":65,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":720,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["tx",{"_index":1504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.model.t",{"_index":1413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":1593,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1557,"title":{},"body":{"index.html":{}}}],["ui.com/images/avatar/large/chris.jpg",{"_index":831,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["unauthor",{"_index":224,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["unavail",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefin",{"_index":513,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["under",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["underneath",{"_index":646,"title":{},"body":{"components/HowToComponent.html":{}}}],["undislikedriv",{"_index":954,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["undislikedriver(riderid",{"_index":978,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unit",{"_index":1577,"title":{},"body":{"index.html":{}}}],["unlik",{"_index":959,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriv",{"_index":955,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriver(riderid",{"_index":981,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["up",{"_index":785,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["upload",{"_index":1103,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfil",{"_index":1073,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(fil",{"_index":1076,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservic",{"_index":1069,"title":{"injectables/UploadService.html":{}},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["upresult",{"_index":1098,"title":{},"body":{"injectables/UploadService.html":{}}}],["upresult.fail",{"_index":1106,"title":{},"body":{"injectables/UploadService.html":{}}}],["uri",{"_index":970,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["url",{"_index":48,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{}}}],["us",{"_index":55,"title":{},"body":{"guards/AccessGuard.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["useclass",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["usepromis",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":53,"title":{"interfaces/User.html":{}},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["user'",{"_index":556,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["user.email",{"_index":1338,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.firstnam",{"_index":1335,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.id",{"_index":1334,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.lastnam",{"_index":1337,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.model",{"_index":473,"title":{},"body":{"classes/Car.html":{},"classes/SwipecardModel.html":{}}}],["user.rol",{"_index":1339,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.user.address",{"_index":887,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.batchend",{"_index":888,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.email",{"_index":886,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.firstnam",{"_index":884,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.lastnam",{"_index":885,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user\\'",{"_index":1341,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["usercard",{"_index":352,"title":{"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["usercard'},{'nam",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usercard.component.css",{"_index":1149,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercard.component.html",{"_index":1150,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercardcompon",{"_index":181,"title":{"components/UsercardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercontrollerservic",{"_index":11,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":516,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{}}}],["userlink",{"_index":825,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb",{"_index":1129,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb'},{'nam",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usermatchweb.component.css",{"_index":1131,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.html",{"_index":1130,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchwebcompon",{"_index":183,"title":{"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":654,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["username/phon",{"_index":557,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["userobject",{"_index":486,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["userpass",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofil",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/{userid",{"_index":975,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["userservic",{"_index":20,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["userservice:usercontrollerservic",{"_index":1275,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["ut",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utah",{"_index":1505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utils/error.interceptor",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/jwt.interceptor",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/token.storag",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["va",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valu",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["variabl",{"_index":1376,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":652,"title":{},"body":{"components/HowToComponent.html":{}}}],["vehicl",{"_index":693,"title":{},"body":{"components/HowToComponent.html":{}}}],["venmo",{"_index":1118,"title":{},"body":{"interfaces/User.html":{}}}],["vermont",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":1523,"title":{},"body":{"index.html":{}}}],["via",{"_index":1580,"title":{},"body":{"index.html":{}}}],["view",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["viewchild",{"_index":1185,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipebio",{"_index":1212,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipemain",{"_index":1211,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewprofilecompon",{"_index":185,"title":{"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virginia",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":834,"title":{},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{}}}],["void",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["vt",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wa",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["waaaaay",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["want",{"_index":58,"title":{},"body":{"guards/AccessGuard.html":{},"components/LandingComponent.html":{}}}],["washington",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["way",{"_index":798,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["westvirginia",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whenev",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["whether",{"_index":1119,"title":{},"body":{"interfaces/User.html":{}}}],["whichev",{"_index":748,"title":{},"body":{"components/HowToComponent.html":{}}}],["wi",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window.location.reload",{"_index":1317,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["window.screen.width",{"_index":602,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["wisconsin",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wish",{"_index":730,"title":{},"body":{"components/HowToComponent.html":{}}}],["within",{"_index":686,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["without",{"_index":967,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["work",{"_index":794,"title":{},"body":{"components/LandingComponent.html":{},"interfaces/User.html":{}}}],["wv",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wy",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wyom",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["x.active.tostr",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.address",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.batchend",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.firstnam",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.id.tostr",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.lastnam",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.role",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["xcvf",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["ye",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["year",{"_index":465,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["you'r",{"_index":793,"title":{},"body":{"components/LandingComponent.html":{}}}],["you'v",{"_index":1559,"title":{},"body":{"index.html":{}}}],["you\\'r",{"_index":809,"title":{},"body":{"components/LandingComponent.html":{}}}],["yourself",{"_index":670,"title":{},"body":{"components/HowToComponent.html":{}}}],["yyyi",{"_index":1121,"title":{},"body":{"interfaces/User.html":{}}}],["zip",{"_index":75,"title":{},"body":{"classes/AddressModel.html":{}}}],["zone.j",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zxcjhd5+grqjenpwbs31mtoy1gsetewyuhsm5h6p",{"_index":1087,"title":{},"body":{"injectables/UploadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessGuard.html":{"url":"guards/AccessGuard.html","title":"guard - AccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/access.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/access.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/access.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { UserControllerService } from '../../app/services/api/user-controller.service';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class AccessGuard implements CanActivate {\n    constructor(private userService: UserControllerService, private router: Router) {}\n  \n    // RouterStateSnapshot to cache the url attempted to be accessed on the auth service\n    // after user logs in, use this url to direct them to the page they want\n    canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): boolean | Observable {\n      if (route.data.requiresLogin) {\n        return this.userService.getCurrentUser().pipe(\n          mapTo(true),\n          catchError(_ => {\n            this.router.navigate(['login']);\n            return of(false);\n          })\n        );\n      }\n      return true;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/address.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Optional\n                                address2\n                            \n                            \n                                addressID\n                            \n                            \n                                city\n                            \n                            \n                                state\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addressID:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressModel {\n    addressID: number;\n    address: string;\n    address2?: string;\n    city: string;\n    state: string;\n    zip: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEnd\n                            \n                            \n                                encryptedLocationDate\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                registrationKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateLocationEncryption\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRegistrationKey\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateLocationEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \ndateLocationEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRegistrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRegistrationKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encryptedLocationDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encryptedLocationDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registrationKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Office } from '../../models/office.model';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  registrationKey: string;\n  officeObjectArray: Office[] = [];\n  batchEnd: string;\n  officeObject;\n\n  encryptedLocationDate: string;\n\n  constructor(private userService: UserControllerService) { }\n\n  ngOnInit() {\n    this.getOffices();\n  }\n\n  getRegistrationKey() {\n    this.userService.getRegistrationKey().subscribe(\n      data => {\n        this.registrationKey = data;\n        this.dateLocationEncryption();\n      }\n    )\n  }\n\n  dateLocationEncryption(){\n    let middleEncryption = btoa(this.officeObject + \"~\" + this.batchEnd);\n    if (middleEncryption.length != 28)\n      middleEncryption = 'XcvF' + middleEncryption;\n    this.encryptedLocationDate = middleEncryption;\n  }\n\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n      this.officeObject = '';\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Generate Key\n      This key expires after 2 hours\n      \n        \n          Batch End\n        \n        \n      \n      \n        \n          Office Address\n        \n        \n          \n            Select Office\n            {{office.name}}\n          \n        \n      \n      Get Key\n      \n      \n      \n      \n        {{encryptedLocationDate}}{{registrationKey}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Generate Key      This key expires after 2 hours                        Batch End                                              Office Address                                      Select Office            {{office.name}}                              Get Key                                {{encryptedLocationDate}}{{registrationKey}}            '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api-error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Any additional details, such which fields were missing/incorrect in a\nrequest format error. An empty array indicates that there are no such\ndetails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary message corresponding to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP status that accompanied the error. This is not returned by the\nAPI, but is provided as a convenience by the ErrorInterceptor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ApiErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiErrorType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the error, if a specific type can be associated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n    /**\n     * The primary message corresponding to the error.\n     */\n    message: String;\n    /**\n     * Any additional details, such which fields were missing/incorrect in a\n     * request format error. An empty array indicates that there are no such\n     * details.\n     */\n    details: String[];\n    /**\n   * The HTTP status that accompanied the error. This is not returned by the\n   * API, but is provided as a convenience by the ErrorInterceptor.\n   */\n    status: number;\n    /**\n    * The type of the error, if a specific type can be associated.\n    */\n    type?: ApiErrorType;\n}\n\n/**\n * A specific type of error which can be returned by the API.\n */\nexport enum ApiErrorType {\n    /**\n     * The user is not logged in.\n     */\n    NotLoggedIn = 'NOT_LOGGED_IN',\n    /**\n     * The user is logged in, but does not have permission to access an endpoint.\n     */\n    Unauthorized = 'UNAUTHORIZED',\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonTap(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  password: string;\n  confirmPassword: string;\n\n  onTap(event) {\n    console.log(event);\n  }\n\n \n}\n\n\n\n    \n\n    \n        \n\n\n \n \n -->\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountinfoComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CarRegistrationComponent\n                            \n                            \n                                FavoritesComponent\n                            \n                            \n                                HowToComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                LikesComponent\n                            \n                            \n                                LikesmatchwebComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                PlacesAutocompleteDirective\n                            \n                            \n                                RideswipeComponent\n                            \n                            \n                                UsercardComponent\n                            \n                            \n                                UsermatchwebComponent\n                            \n                            \n                                ViewProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                            \n                                     MapsControllerService\n                            \n                            \n                                     MatchingControllerService\n                            \n                            \n                                     UserControllerService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RideswipeComponent } from './components/rideswipe/rideswipe.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UsercardComponent } from './components/usercard/usercard.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { MapComponent } from './components/map/map.component';\nimport { AgmCoreModule, GoogleMapsAPIWrapper, CircleManager } from '@agm/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { UsermatchwebComponent } from './components/usermatchweb/usermatchweb.component';\nimport { LikesmatchwebComponent } from './components/likesmatchweb/likesmatchweb.component';\nimport { UserControllerService } from './services/api/user-controller.service';\nimport { MapsControllerService } from './services/api/maps-controller.service';\nimport { MatchingControllerService } from './services/api/matching-controller.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { HttpClientModule, HttpClient, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PlacesAutocompleteDirective } from './directives/places-autocomplete/places-autocomplete.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AccountinfoComponent } from './components/accountinfo/accountinfo.component';\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\nimport { JwtInterceptor } from './utils/jwt.interceptor';\nimport { ErrorInterceptor } from './utils/error.interceptor';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CarRegistrationComponent } from './components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from './components/view-profile/view-profile.component';\n// import { DateFormatPipe } from './pipes/date-format.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RideswipeComponent,\n    LandingComponent,\n    UsercardComponent,\n    HowToComponent,\n    MapComponent,\n    NavbarComponent,\n    LoginComponent,\n    LikesComponent,\n    UsermatchwebComponent,\n    LikesmatchwebComponent,\n    PlacesAutocompleteDirective,\n    FavoritesComponent,\n    AccountinfoComponent,\n    AdminComponent,\n    CarRegistrationComponent,\n    ViewProfileComponent,\n    // DateFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AnimateOnScrollModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBXWXgWzxhyvz9JyN9SrHgGOzi7VcU5G3g',\n      libraries: ['places'],\n    }),\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    NgbActiveModal,\n    MapsControllerService,\n    UserControllerService,\n    AuthService,\n    MatchingControllerService,\n    GoogleMapsAPIWrapper,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from '../components/how-to/how-to.component';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { MapComponent } from '../components/map/map.component';\nimport { RideswipeComponent } from '../components/rideswipe/rideswipe.component';\nimport { UsercardComponent } from '../components/usercard/usercard.component';\nimport { FavoritesComponent } from '../components/favorites/favorites.component';\nimport { AccountinfoComponent } from '../components/accountinfo/accountinfo.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CarRegistrationComponent } from '../components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from '../components/view-profile/view-profile.component';\n\n/**\n * This is where we set our routerLink attribute.\n * For example...\n * About\n * creates an  element of class \"dropdown-item\" that will \n * refer to these routes to find which component to route to.\n */\nexport const routes: Routes = [\n  { path: '',  pathMatch: 'full', redirectTo: 'landing' },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'landing', component: LandingComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent },\n  { path: 'accountInfo', component: AccountinfoComponent},\n  { path: 'rideswipe', component: RideswipeComponent },\n  { path: 'userCard', component: UsercardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'cars', component: CarRegistrationComponent },\n  { path: 'userProfile', component: ViewProfileComponent}\n  //{ path: 'logout', redirectTo: 'landing' }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                            \n                                authenticator\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserControllerService, tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(email: string, password: string, usePromise?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        usePromise\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticator\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticator(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Corresponds to the email input box\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Corresponds to the password input box \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap, map } from 'rxjs/operators';\nimport { UserControllerService } from './api/user-controller.service';\nimport { TokenStorage } from './../utils/token.storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserControllerService,\n    private tokenStorage: TokenStorage\n  ) { }\n/**\n * \n * @param email Corresponds to the email input box\n * @param password Corresponds to the password input box \n */\n  authenticator(email: string, password: string) {\n    const credentials = { email, password };\n    console.log('in authenticate');\n    return this.http\n      .post(environment.apiUrl + '/login', credentials)\n      .pipe(\n        map(token => {\n          console.log('Saving token'); \n          this.tokenStorage.saveToken(token);\n          this.userService.getCurrentUser().subscribe();\n          return null;\n        })\n      );\n  }\n\n  async authenticate(email: string, password: string, usePromise?: boolean) {\n    if (usePromise) {\n      await this.authenticator(email, password).toPromise().then(\n        (x) => {\n          console.log('Got user from Authenticate (Promise mode)');\n          this.userService.getUserByEmail(email).then((x) => {\n            console.log('Gotten email of user');\n            sessionStorage.setItem('id', x.id.toString());\n            sessionStorage.setItem('firstName', x.firstName);\n            sessionStorage.setItem('lastName', x.lastName);\n            sessionStorage.setItem('active', x.active.toString());\n            sessionStorage.setItem('role', x.role);\n            sessionStorage.setItem('address', x.address);\n            sessionStorage.setItem('batchEnd', x.batchEnd);\n          });\n          sessionStorage.setItem('userEmail', email);\n          sessionStorage.setItem('userPassword', password);\n        },\n        (e) => {\n            // error coming from the backend\n            console.log('Printing Login error (Promise Mode)!');\n            console.log(e);\n            if (document) {\n              const messageLogin = document.getElementById('errorMessageLogin');\n              if (messageLogin) {\n                messageLogin.style.display = 'block';\n                console.log(e.message);\n                if(e.message=='GENERAL'){\n                  messageLogin.innerHTML = \"Server unavailable\";\n                }else{\n                  messageLogin.innerHTML = e.message;\n                }\n              }\n            }\n            return e.message;\n        }\n      );\n    } else {\n    this.authenticator(email, password).subscribe(\n      (x) => {\n        console.log('Got user from Authenticate (Observe mode)');\n        this.userService.getUserByEmail(email).then((x) => {\n          console.log('Gotten email of user');\n          sessionStorage.setItem('id', x.id.toString());\n          sessionStorage.setItem('firstName', x.firstName);\n          sessionStorage.setItem('lastName', x.lastName);\n          sessionStorage.setItem('active', x.active.toString());\n          sessionStorage.setItem('role', x.role);\n          sessionStorage.setItem('address', x.address);\n          sessionStorage.setItem('batchEnd', x.batchEnd);\n        });\n        sessionStorage.setItem('userEmail', email);\n        sessionStorage.setItem('userPassword', password);\n        location.reload(true);\n    },\n      // TODO if an error is returned, return the error message to user\n      // callback called if there is an error\n      e => {\n        // error coming from the backend\n        console.log('Printing Login error (Observe Mode)!');\n        console.log(e);\n        if (document) {\n          const messageLogin = document.getElementById('errorMessageLogin');\n          if (messageLogin) {\n            messageLogin.style.display = 'block';\n            //It is possible that the shortcircuit message means something completely different\n            //from the server being unavailable. I'm not really sure, but it could be\n            //proccing whenever you just click waaaaay too fast trying to log in.\n            if(e.message=='GENERAL' || e.message=='SHORTCIRCUIT'){\n              messageLogin.innerHTML = \"Server unavailable\";\n            }else{\n              messageLogin.innerHTML = e.message;\n            }\n          }\n        }\n        return e.message;\n      }\n    );\n    }\n  }\n\n  logout() {\n    // Make sure we invalidate the currently cached user data in the\n    // UserService.\n    this.userService.invalidateCurrentUser();\n    this.tokenStorage.signOut();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Car.html":{"url":"classes/Car.html","title":"class - Car","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/car.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                model\n                            \n                            \n                                owner\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:8\n                            \n                        \n\n                \n                    \n                        The ID of the car in the database.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        make:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     Link\n\n                    \n                \n                    \n                        \n                            Type :     Link\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:12\n                            \n                        \n\n                \n                    \n                        The owner of this car.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        year:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"./user.model\";\nimport { Link } from \"./link.model\";\n\nexport class Car {\n    /**\n   * The ID of the car in the database.\n   */\n  id: number;\n  /**\n   * The owner of this car.\n   */\n  owner: Link;\n  make: string;\n  model: string;\n  year: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarRegistrationComponent.html":{"url":"components/CarRegistrationComponent.html","title":"component - CarRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/car-registration/car-registration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car-registration\n            \n\n            \n                styleUrls\n                car-registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car-registration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnCarInfo\n                            \n                            \n                                carMake\n                            \n                            \n                                carModel\n                            \n                            \n                                carObject\n                            \n                            \n                                cars\n                            \n                            \n                                carYear\n                            \n                            \n                                optInToDrive\n                            \n                            \n                                userObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshFields\n                            \n                            \n                                resetCars\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/car-registration/car-registration.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCarToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCarToUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCars\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCars()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnCarInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        btnCarInfo:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carMake\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carMake:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carModel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carObject:     Car\n\n                    \n                \n                    \n                        \n                            Type :     Car\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cars:     Car[]\n\n                    \n                \n                    \n                        \n                            Type :     Car[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optInToDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optInToDrive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userObject:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Car } from '../../models/car.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-car-registration',\n  templateUrl: './car-registration.component.html',\n  styleUrls: ['./car-registration.component.css']\n})\nexport class CarRegistrationComponent implements OnInit {\n\n  userObject: User;\n  // for drivers\n  carObject: Car;\n  carMake: string;\n  carModel: string;\n  carYear: number;\n  optInToDrive: boolean;\n  cars: Car[];\n\n  // booleans for car information buttons\n  btnCarInfo: Number = 0;\n\n  constructor(private userService: UserControllerService) { }\n\n  ngOnInit() {\n    this.carObject = new Car();\n  }\n\n  resetCars() {\n\n    if (this.cars !== undefined && this.cars != null && this.cars.length !== 0) {\n      return;\n    }\n    this.resetUser();\n    const userId = this.userObject.id;\n    this.cars = [];\n    this.userService.getAllCars().subscribe(c => {\n      \n      c.forEach(element => {\n        const strNum = element.owner.substring(7);\n        const num = Number.parseInt(strNum);\n        if (num === userId) {\n          this.cars.push(element);\n        }\n      });\n    });\n  }\n\n\n\n  resetUser() {\n    this.userService.getCurrentUser().subscribe(user => {\n      console.log('Car reg: Gotten User: ' + user);\n      this.userObject = user;\n    },\n    e => {\n      console.log('Car reg: Failed to get user: ' + e);\n    });\n\n  }\n\n  addCarToUser() {\n\n    this.resetUser();\n\n    this.carObject.id = 0;\n    this.carObject.make = this.carMake;\n    this.carObject.model = this.carModel;\n\n    this.carObject.owner = '/users/' + this.userObject.id.toString();\n    this.carObject.year = this.carYear;\n    // this.userObject.cars.push(this.carObject);\n\n    this.userService.createCar(this.carObject).subscribe(car => {\n      this.carObject = car;\n    });\n\n  }\n\n  refreshFields() {\n    this.carMake = '';\n    this.carModel = '';\n    this.carYear = new Date().getFullYear();\n  }\n\n}\n\n    \n\n    \n        \n  \n  Car Information:\n  \n  \n  \n  \n    \n      \n        Make\n      \n      \n    \n\n    \n      \n        Model\n      \n      \n    \n\n    \n      \n        Year\n      \n      \n    \n    \n      \n        Submit\n      \n      Add Car\n      Clear Fields\n    \n    \n       0\">\n        \n          ID\n          Make\n          Model\n          Year\n        \n        \n          {{c.id}}\n          {{c.make}}\n          {{c.model}}\n          {{c.year}}\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Car Information:                          Make                                  Model                                  Year                                  Submit            Add Car      Clear Fields               0\">                  ID          Make          Model          Year                          {{c.id}}          {{c.make}}          {{c.model}}          {{c.year}}                                '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactInfo.html":{"url":"interfaces/ContactInfo.html","title":"interface - ContactInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contact-info.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this contact info entry in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The details specifying the user's username/phone number/etc. on the\nservice.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ContactInfo {\n    /**\n     * The ID of this contact info entry in the database.\n     */\n    id: Number;\n    type: String;\n    /**\n     * The details specifying the user's username/phone number/etc. on the\n     * service.\n     */\n    info: String;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/error.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/error.interceptor.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError, ApiErrorType } from '../models/api-error.model';\nimport { AuthService } from './../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred.\n          console.error('Network error:', err.error);\n          return throwError(err.error);\n        } else {\n          // API error.\n          const apiError = err.error;\n          apiError.status = err.status;\n          // Automatically log out if the error was due to being not logged in.\n          if (apiError.type === ApiErrorType.NotLoggedIn) {\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          return throwError(apiError);\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n\n  public mobile = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n    \n  \n  \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geocode.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geocode\n                            \n                            \n                                reverseGeocode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geocode.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocode(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverseGeocode\n                            \n                            \n                        \n                    \n                \n                \n                    \nreverseGeocode(latLng: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodeService {\n\n  geocoder: google.maps.Geocoder;\n\n  constructor() {\n    this.geocoder = new google.maps.Geocoder();\n  }\n\n  reverseGeocode(latLng: google.maps.LatLng): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ location: latLng }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log('Geocoding service: geocoder failed due to: ' + status);\n            observer.error(status);\n          }\n        })\n      );\n    });\n  }\n\n  geocode(address: string): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ address: address }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log(\n              'Geocoding service: geocode was not successful for the following reason: '\n              + status\n            );\n            observer.error(status);\n          }\n        })\n      );\n    });\n    return null;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowToComponent.html":{"url":"components/HowToComponent.html","title":"component - HowToComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowToComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/how-to/how-to.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to\n            \n\n            \n                styleUrls\n                how-to.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/how-to/how-to.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/how-to/how-to.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      How to Use Revature RideForce\n    \n      \n      Registering an Account:\n      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.\n      \n      \n      Create Profile:\n      Creating your profile is the first part of the process for registering a new account.\n      \n      This section requires you to input a variety of information:\n      \n        Your first name\n        Last name\n        Username\n        Password\n        Confirm Password\n        Key: Allows access to RideForce given to you by your instructor\n        Office Address\n        Apartment Address\n        Batch End Date: Instructor should also notify you on your batch end date\n      \n      Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.\n        Biography:\n        The \"Biography\" section requires some more information from you with a little more effort on detail:\n        \n          About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential\n            fit as a passenger or driver.\n          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,\n            Discord, GroupMe, and other potential services of your choosing.\n        \n        When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking\n          on the \"Next\" button.\n        Car Info:\n        Within this section there are three options: Car, Passenger, or Both.\n        \n        If you do not have a car and plan on only being passenger, simply click next and move on to the next section.\n        \n        If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:\n        \n          Make: Enter the brand of your vehicle.\n          Model: Enter model of your vehicle.\n          Year: Enter year of your vehicle.\n        \n        Once all required information is entered depending on the option chose, move on to the final section by clicking the\n          \"Next\" button.\n        Review and Submit:\n        You are now finished entering all required information and may review what you have entered thus far within this section.\n        \n        If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.\n        \n        Once the information looks good, give it one more look and then click \"Submit\".\n        \n        Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!\n        \n        \n        Login:\n        In order to login, you must have a registered account. If you haven't registered one yet, please refer to the \"Registering Account\" section above.\n        \n        To login, simply click \"Login\" on the navigation bar.\n        \n        You should now see the login view, which contains two input fields: \"Username\" and \"Password\".\n        \n        Simply enter in your registered account's username and password into the respective input fields and click the big blue \"Login\" button underneath them.\n        \n        \n        Map:\n        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.\n        \n        After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver's and passenger's addresses.\n        \n        If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.\n        \n        \n        Browse:\n        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.\n        \n        This will bring you to a view displaying a potential driver.\n        \n        After viewing the potential driver's profile, if you think they are a good match, then \"like\" them as a potential driver.\n        \n        If you think they are not a good match, simply \"dislike\" them and move on to the next.\n        \n        \n        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.\n        \n        The order of drivers is determined by distance, so closer drivers will appear first on your browse page.\n        \n        You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"\n        \n        Within this \"liked list\" you can once again view your \"liked\" drivers profiles.\n        \n        Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it's a good match!\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              How to Use Revature RideForce                Registering an Account:      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.                  Create Profile:      Creating your profile is the first part of the process for registering a new account.            This section requires you to input a variety of information:              Your first name        Last name        Username        Password        Confirm Password        Key: Allows access to RideForce given to you by your instructor        Office Address        Apartment Address        Batch End Date: Instructor should also notify you on your batch end date            Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.        Biography:        The \"Biography\" section requires some more information from you with a little more effort on detail:                  About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential            fit as a passenger or driver.          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,            Discord, GroupMe, and other potential services of your choosing.                When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking          on the \"Next\" button.        Car Info:        Within this section there are three options: Car, Passenger, or Both.                If you do not have a car and plan on only being passenger, simply click next and move on to the next section.                If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:                  Make: Enter the brand of your vehicle.          Model: Enter model of your vehicle.          Year: Enter year of your vehicle.                Once all required information is entered depending on the option chose, move on to the final section by clicking the          \"Next\" button.        Review and Submit:        You are now finished entering all required information and may review what you have entered thus far within this section.                If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.                Once the information looks good, give it one more look and then click \"Submit\".                Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!                        Login:        In order to login, you must have a registered account. If you haven\\'t registered one yet, please refer to the \"Registering Account\" section above.                To login, simply click \"Login\" on the navigation bar.                You should now see the login view, which contains two input fields: \"Username\" and \"Password\".                Simply enter in your registered account\\'s username and password into the respective input fields and click the big blue \"Login\" button underneath them.                        Map:        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.                After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver\\'s and passenger\\'s addresses.                If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.                        Browse:        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.                This will bring you to a view displaying a potential driver.                After viewing the potential driver\\'s profile, if you think they are a good match, then \"like\" them as a potential driver.                If you think they are not a good match, simply \"dislike\" them and move on to the next.                        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.                The order of drivers is determined by distance, so closer drivers will appear first on your browse page.                You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"                Within this \"liked list\" you can once again view your \"liked\" drivers profiles.                Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it\\'s a good match!      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'HowToComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/jwt.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/jwt.interceptor.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorage } from './token.storage';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private tokenStorage: TokenStorage) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.tokenStorage.getToken();\n    if (token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing/landing.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing/landing.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n//import { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n  currentUser: User;\n  constructor(private userService: UserControllerService) { }\n\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  //   this.userService.getCurrentUserObservable().subscribe(\n  //   data => {\n  //     this.currentUser = data;\n  //     console.log(this.currentUser)\n  //   }\n  // );\n    this.sessionCheck()\n  }\n\n  session : boolean\n  sessionCheck() {\n    if(sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n        \n      \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n\n\n    \n   -->\n\n    \n        RideForce\n        Looking for a ride? Sign up today to be a driver or a rider\n        Get\n            Started\n        Browse\n        \n          For more information,\n          click here\n        \n      \n\n      \n      RideForce\n      Looking for a ride? Sign up today to be a driver or a rider\n      Get\n          Started\n\n      \n        For more information,\n        click here\n      \n     -->\n\n\n      \n\n          Need a ride? Look no further than RideForce!\n          Use the App to find drivers to carpool in your\n          circle or area!\n\n\n       -->\n    \n      \n      \n        \n\n          Rider\n          If you're looking to carpool to and from work, then RideForce is the app for you. Use\n            the app to find and like drivers who you enjoy riding with.\n        \n        \n\n          Driver\n          Want to give others a ride? Sign up to be a driver to help others find a way and lessen\n            the burden of gas prices.\n        \n        \n\n          Safe\n          Find drivers and riders within your employer's company, circle, or group. Members are\n            give a token that will expire in 2 hours so both riders and drivers are approved by the group\n        \n      \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Previous            Next         -->            RideForce        Looking for a ride? Sign up today to be a driver or a rider        Get            Started        Browse                  For more information,          click here                          RideForce      Looking for a ride? Sign up today to be a driver or a rider      Get          Started              For more information,        click here           -->                Need a ride? Look no further than RideForce!          Use the App to find drivers to carpool in your          circle or area!       -->                                  Rider          If you\\'re looking to carpool to and from work, then RideForce is the app for you. Use            the app to find and like drivers who you enjoy riding with.                          Driver          Want to give others a ride? Sign up to be a driver to help others find a way and lessen            the burden of gas prices.                          Safe          Find drivers and riders within your employer\\'s company, circle, or group. Members are            give a token that will expire in 2 hours so both riders and drivers are approved by the group              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesComponent.html":{"url":"components/LikesComponent.html","title":"component - LikesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likes/likes.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likes\n            \n\n            \n                styleUrls\n                likes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                swipecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likes/likes.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { User } from '../../models/user.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n\n@Component({\n    selector: 'app-likes',\n    templateUrl: './likes.component.html',\n    styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n    swipecards: SwipecardModel[] = [];\n\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    currentUser: User;\n\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(data2);\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n   \n      \n        \n        \n          {{card.user.firstName}}\n          Some example text.\n          Like\n        \n      \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{card.user.firstName}}          Some example text.          Like                  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesmatchwebComponent.html":{"url":"components/LikesmatchwebComponent.html","title":"component - LikesmatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesmatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likesmatchweb/likesmatchweb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likesmatchweb\n            \n\n            \n                styleUrls\n                likesmatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likesmatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                likecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        likecards:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\nexport interface UserCard {\n    user: User;\n    choose: string;\n    face: String;\n}\n\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    likecards: UserCard[] = [];\n\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    currentUser: User;\n\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log(\"this is put into currentUser\");\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(\"here?\");\n                        console.log(data2);\n                        console.log(\"loggeddata2\");\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    // Sets the card to rotate 90 degrees\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    // Card goes past 90 degrees and changes face\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n    \n        \n  Your Likes\n  \n    \n      \n        \n          \n            \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n               {{user.user.email}} \n              Like\n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your Likes                                                                                {{user.user.firstName}} {{user.user.lastName}}               {{user.user.email}}               Like                                                          {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesmatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/location.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n    latitude: number;\n    longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                userEmail\n                            \n                            \n                                userPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Gets the parameters from the login fields. \nIf the login fails, displays the error message sent by the server under the password field.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Checking to see if there is a current user, and if there is, redirects to landing.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userEmail: string;\n  userPass: string;\n  currentUser: User;\n\n  constructor(private authService: AuthService, private route: Router,private userService: UserControllerService) { }\n\n  /**\n   * Checking to see if there is a current user, and if there is, redirects to landing.\n   */\n  ngOnInit() {\n      if(sessionStorage.length > 0){\n        this.route.navigate(['/landing']);\n      }\n    }\n\n  /**\n   * Gets the parameters from the login fields. \n   * If the login fails, displays the error message sent by the server under the password field.\n   */\n  // getUser(email: string) {\n  //   let user;\n  //   return this.userService.getUserByEmail(email).subscribe();\n  // }\n\n  login() {\n    this.authService.authenticate(this.userEmail, this.userPass);\n  }\n}\n\n    \n\n    \n         -->\n\n\n  \n    \n    \n     Sign In \n    Sign Up \n   -->\n    \n    \n\n       \n       -->\n    \n\n    \n    \n    \n      \n      \n      Default Message\n      \n    \n  \n\n    \n    \n      Register\n      |\n      Forgot Password? \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->               Sign In     Sign Up    -->                      -->                                  Default Message                          Register      |      Forgot Password?       '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsControllerService.html":{"url":"injectables/MapsControllerService.html","title":"injectable - MapsControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/maps-controller.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistance\n                            \n                            \n                                    Public\n                                getRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/maps-controller.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistance(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Sends address as string to location endpoint in Map Service. Map Service returns geographic location\nin latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoute(start: string, end: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Takes in 2 addresses and calculates the distance and travel time between them\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { LatLngLiteral } from '@agm/core';\nimport { RouteInfo } from '../../models/route-info.model';\n\n@Injectable()\nexport class MapsControllerService {\n\n public constructor(private http: HttpClient) { }\n\n  /** \n  * Sends address as string to location endpoint in Map Service. Map Service returns geographic location\n  * in latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n  */                                        \n  getDistance(address: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/location', {\n      params: { address },\n    });\n  }\n\n  /**\n   * Takes in 2 addresses and calculates the distance and travel time between them\n   * \n   * @param start string address\n   * @param end string address\n   */\n  public getRoute(start: string, end: string): Observable { // gives back latitude and longitude\n    \n    return this.http.get(environment.apiUrl + '/route', {\n      params: { start, end },\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/marker.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        placeId\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeId\n                                    \n                                \n                                \n                                    \n                                        placeId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Marker {\n    location: google.maps.LatLngLiteral;\n    address?: string;\n    label?: string;\n    userId?: number;\n    draggable?: boolean;\n    placeId?: string;\n    // icon?: string;\n    // infoWindow?: boolean;\n    // comments?: string[];\n    // saved?: boolean;\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchingControllerService.html":{"url":"injectables/MatchingControllerService.html","title":"injectable - MatchingControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchingControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/matching-controller.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dislikeDriver\n                            \n                            \n                                getDislikedDrivers\n                            \n                            \n                                getFromLink\n                            \n                            \n                                getLikedDrivers\n                            \n                            \n                                getMatchingDrivers\n                            \n                            \n                                likeDriver\n                            \n                            \n                                unDislikeDriver\n                            \n                            \n                                unlikeDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/matching-controller.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \ndislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id unliked the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDislikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDislikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns all users disliked by the user with the given ID\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromLink(uri: Link)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            will deserialize the link object. returns the object reference from the link\na link is a reference to the object without having to fetch the object from the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    Link\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns all users liked by the user with the given ID.\nReturns this as an array of strings in the format\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Returns all drivers who match the rider with the given user ID.\n\"/users/{userid}\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id likes the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unDislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunDislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id disliked the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id likes the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from \"../../../app/models/user.model\";\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Link } from '../../models/link.model';\n\n@Injectable()\nexport class MatchingControllerService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * will deserialize the link object. returns the object reference from the link\n   * a link is a reference to the object without having to fetch the object from the database\n   * @param uri \n   */\n  getFromLink(uri: Link): Observable {\n    return this.http.get(environment.apiUrl + uri);\n  }\n  /**\n   * Returns all drivers who match the rider with the given user ID.\n   * \"/users/{userid}\"\n   * \n   * @param riderId\n   */\n  getMatchingDrivers(riderId: number): Observable[]> {\n   \n    return this.http.get[]>(environment.apiUrl + `/matches/${riderId}`);\n  }\n\n  /**\n   * Returns all users liked by the user with the given ID.\n   * Returns this as an array of strings in the format\n   * \n   * @param riderId \n   */\n  getLikedDrivers(riderId: number): Observable[]> {\n    console.log(environment.apiUrl + `/matches/likes/${riderId}`);\n    return this.http.get[]>(environment.apiUrl + `/matches/likes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id likes the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  likeDriver(riderId: number, driverId: number): Observable {\n    \n    return this.http.put[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`, '');\n\n  }\n\n  /**\n   * Removes any indication that the user with ID :id likes the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unlikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`);\n  }\n\n  /**\n   * Returns all users disliked by the user with the given ID\n   * @param riderId \n   */\n  getDislikedDrivers(riderId: number): Observable[]> {\n    return this.http.get[]>(environment.apiUrl + `/matches/dislikes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id unliked the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  dislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.put[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`, '');\n  }\n\n  /**\n   *  Removes any indication that the user with ID :id disliked the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unDislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : sessionStorage.length > 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  currentUser: User;\n\n  constructor(\n    private userService: UserControllerService,\n    private authService: AuthService,\n    private route: Router) { }\n\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n        // console.log(this.currentUser);\n        document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n      }\n    );\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    // this.sessionCheck();\n  }\n\n  session : boolean = sessionStorage.length > 0;\n  sessionCheck() {\n    if(sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n  \n  getCurrentUser(){\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    )\n  }\n  // checkIfLoggedIn(){\n  //   if(this.userService.isLoggedIn){\n  //     this.isLoggedIn = true;\n  //   } \n  //   else if(!this.userService.isLoggedIn) {\n  //     this.isLoggedIn = false;\n  //   }\n  // }\n\n  // getCurrentUser(){\n  //   this.userService.getCurrentUser().subscribe(\n  //     data => {\n  //       this.currentUser = data;\n  //     }\n  //   )\n  // }\n\n  async logout() {\n    sessionStorage.clear();\n    if (this.route.url === \"/landing\") {\n      location.reload(true);\n    } else {\n      await this.route.navigate([\"/landing\"]);\n      location.reload(true);\n    }\n  }\n}\n\n    \n\n    \n        \n   -->\n    \n     -->\n    \n      \n    \n    \n        \n          \n        \n        \n          About\n          User Settings\n        \n      \n    \n      \n        Home(current)\n        Login\n        Get Key\n        Map\n        Browse\n        Favorites\n        Car\n        Logout\n      \n  \n  \n      \n        \n      \n      \n      \n        About\n        User Settings\n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->         -->                                                              About          User Settings                                Home(current)        Login        Get Key        Map        Browse        Favorites        Car        Logout                                                  About        User Settings          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Office.html":{"url":"interfaces/Office.html","title":"interface - Office","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Office\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/office.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the office in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The common name of the office (e.g. \"Reston\").\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Office {\n    \n  /**\n   * The ID of the office in the database.\n   */\n  id: number;\n  /**\n   * The common name of the office (e.g. \"Reston\").\n   */\n  name: string;\n  address: string;\n  \n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlacesAutocompleteDirective.html":{"url":"directives/PlacesAutocompleteDirective.html","title":"directive - PlacesAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlacesAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlacesAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedAddress\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressSelect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, mapsAPILoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressSelect\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormattedAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormattedAddress(place: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        place\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     HTMLInputElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\n@Directive({\n  selector: '[appPlacesAutocomplete]'\n})\nexport class PlacesAutocompleteDirective implements OnInit {\n\n  private element: HTMLInputElement;\n\n  @Output()\n  addressSelect: EventEmitter = new EventEmitter();\n\n  constructor(private elRef: ElementRef, private mapsAPILoader: MapsAPILoader) {\n    this.element = elRef.nativeElement;\n  }\n\n  getFormattedAddress(place) {\n    const location_obj = {};\n    return place;\n  }\n\n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.element);\n      autocomplete.addListener('place_changed', () => {\n        this.addressSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n\n  username: string;\n  password: string;\n  token: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RideswipeComponent.html":{"url":"components/RideswipeComponent.html","title":"component - RideswipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RideswipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rideswipe/rideswipe.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rideswipe\n            \n\n            \n                styleUrls\n                rideswipe.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rideswipe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rideswipe',\n  templateUrl: './rideswipe.component.html',\n  styleUrls: ['./rideswipe.component.css']\n})\nexport class RideswipeComponent implements OnInit {\n\n  public mobile = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'RideswipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"interfaces/RouteInfo.html","title":"interface - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route-info.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route distance, in meters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route time, in seconds.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteInfo {\n    /**\n * The total route distance, in meters.\n */\n    distance: number;\n    /**\n     * The total route time, in seconds.\n     */\n    duration: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwipecardModel.html":{"url":"classes/SwipecardModel.html","title":"class - SwipecardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwipecardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/swipecard.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\n\nexport class SwipecardModel {\n    user: User;\n    visible = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorage.html":{"url":"injectables/TokenStorage.html","title":"injectable - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/token.storage.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/token.storage.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'authToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorage {\n  constructor() { }\n\n  signOut() {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FOLDER\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getS3Bucket\n                            \n                            \n                                uploadfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3Bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetS3Bucket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadfile(file: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOLDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FOLDER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rydeforce-s3/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as S3 from 'aws-sdk/clients/s3';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  FOLDER = 'rydeforce-s3/';\n  url: any;\n  \n  constructor() { }\n\n  getS3Bucket(): any {\n    const bucket = new S3 (\n    {\n    accessKeyId: 'AKIAIRZG4TK6EBLZV7GA',\n    secretAccessKey: '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',\n    region: 'us-east-1'\n    }\n    );\n    return bucket;\n  } \n\n  uploadfile(file) {\n   const params = {\n      Bucket: 'rydeforce',\n      Key: this.FOLDER + Math.floor(Math.random() * 100000000000) + file.name ,\n      Body: file\n       // allow that and instead assign numbers on the beginning of the name.\n    };\n\n    let upResult = this.getS3Bucket().upload(params, function (err, data) {\n      if (err) {\n        console.log('There was an error uploading your file: ', err);\n        return false;\n      }\n      console.log('Successfully uploaded file.', data);\n      console.log(params);\n\n      return true;\n    });\n    if (!upResult.failed) {\n      console.log('upload successful');\n      this.url = 'https://s3.us-east-1.amazonaws.com/' + params.Bucket + '/' + params.Key;\n    } else {\n      console.log('upload failed');\n    }\n\n    console.log('BEFORE RETURNING, this.url is: ' + this.url);\n    return this.url;\n  }\n} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        address\n                                \n                                \n                                        batchEnd\n                                \n                                \n                                        cars\n                                \n                                \n                                        contactInfo\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        office\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        role\n                                \n                                \n                                            Optional\n                                        venmo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user's account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's home address (where they currently live).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchEnd\n                                    \n                                \n                                \n                                    \n                                        batchEnd:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cars\n                                    \n                                \n                                \n                                    \n                                        cars:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactInfo\n                                    \n                                \n                                \n                                    \n                                        contactInfo:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's contact information.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        office\n                                    \n                                \n                                \n                                    \n                                        office:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's office (where they work).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL to the user's profile photo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's role, determining what permissions they have to access data on\nthe server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venmo\n                                    \n                                \n                                \n                                    \n                                        venmo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user's Venmo username.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from './link.model';\nimport { Office } from './office.model';\nimport { Car } from './car.model';\nimport { ContactInfo } from './contact-info.model';\nimport { Role } from './role.model';\n\nexport interface User {\n  /**\n   * The ID of the user in the database.\n   */\n  id: number;\n  firstName: string;\n  lastName: string;\n  // username\n  email: string;\n  /**\n   * The URL to the user's profile photo.\n   */\n  photoUrl: string;\n  /**\n   * The user's home address (where they currently live).\n   */\n  address: string;\n  /**\n   * The user's office (where they work).\n   */\n  office: Link;\n  /**\n   * The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n   */\n  batchEnd: any;\n  cars: Link[];\n  /**\n   * The user's Venmo username.\n   */\n  venmo?: string;\n  /**\n   * The user's contact information.\n   */\n  contactInfo: Link[];\n  /**\n   * Whether the user's account is active.\n   */\n  active: boolean;\n  /**\n   * The user's role, determining what permissions they have to access data on\n   * the server.\n   */\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard.html":{"url":"interfaces/UserCard.html","title":"interface - UserCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/likesmatchweb/likesmatchweb.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\nexport interface UserCard {\n    user: User;\n    choose: string;\n    face: String;\n}\n\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    likecards: UserCard[] = [];\n\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    currentUser: User;\n\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log(\"this is put into currentUser\");\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(\"here?\");\n                        console.log(data2);\n                        console.log(\"loggeddata2\");\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    // Sets the card to rotate 90 degrees\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    // Card goes past 90 degrees and changes face\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard-1.html":{"url":"interfaces/UserCard-1.html","title":"interface - UserCard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/usermatchweb/usermatchweb.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\ninterface UserCard {\n  user: User;\n  choose: string;\n  face: String;\n}\n\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  currentUser: User;\n\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  // Sets the card to rotate 90 degrees\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  // Card goes past 90 degrees and changes face\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsercardComponent.html":{"url":"components/UsercardComponent.html","title":"component - UsercardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsercardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usercard/usercard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usercard\n            \n\n            \n                styleUrls\n                usercard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usercard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animState\n                            \n                            \n                                animThumbState\n                            \n                            \n                                currentIndex\n                            \n                            \n                                currentSwipeCard\n                            \n                            \n                                currentUser\n                            \n                            \n                                SWIPE_ACTION\n                            \n                            \n                                swipeCardBio\n                            \n                            \n                                swipeCardMain\n                            \n                            \n                                swipecards\n                            \n                            \n                                thumbImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                swipe\n                            \n                            \n                                swiped\n                            \n                            \n                                thumbAnimDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usercard/usercard.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideImage(hide: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Hides the card picture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hide\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipe\n                            \n                            \n                        \n                    \n                \n                \n                    \nswipe(action: , user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.SWIPE_ACTION.RIGHT\n                                                        \n\n                                                \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swiped\n                            \n                            \n                        \n                    \n                \n                \n                    \nswiped()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbAnimDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nthumbAnimDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animThumbState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animThumbState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'one'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSwipeCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSwipeCard:     SwipecardModel\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWIPE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SWIPE_ACTION:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { LEFT: 'swipeleft', RIGHT: 'swiperight' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardBio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardBio:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardMain:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icons/thumbsDown.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { AddressModel } from '../../models/address.model';\nimport { Link } from '../../models/link.model';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n@Component({\n    selector: 'app-usercard',\n    templateUrl: './usercard.component.html',\n    styleUrls: ['./usercard.component.css'],\n    animations: [\n        trigger('slide', [\n            state('center', style({ transform: 'translateX(0)' })),\n            state('left', style({ transform: 'translateX(-200%)' })),\n            state('right', style({ transform: 'translateX(200%)' })),\n            transition('* => *', animate(100))\n        ]),\n        trigger('pop', [\n            state('one', style({ transform: 'scale(1)', opacity: 0 })),\n            state('two', style({ transform: 'scale(1.2)', opacity: .8 })),\n            transition('one => two', animate(200)),\n            transition('two => one', animate(100))\n        ])\n    ]\n})\nexport class UsercardComponent implements OnInit {\n\n    // constant for swipe action: left or right\n    SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n    // our list of swipecards: DUMMY DATA\n    swipecards: SwipecardModel[] = [\n\n    ];\n\n\n    currentSwipeCard: SwipecardModel;\n    currentIndex = 0;\n    animState = 'center';\n    animThumbState = 'one';\n    thumbImg = 'assets/icons/thumbsDown.png';\n\n    @ViewChild('swipeMain') swipeCardMain: ElementRef;\n    @ViewChild('swipeBio') swipeCardBio: ElementRef;\n\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    currentUser: User;\n\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('data');\n                this.currentUser = data;\n                console.log(this.currentUser);\n                let userLinks: Link[] = null;\n                this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        // console.log(\"data2 is \" + data2);\n                        userLinks = data2;\n                        console.log(userLinks);\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                    // Sets the current swipe card to the first element of the array if the array has something in it.\n                                    if (this.swipecards.length > 0) {\n                                        this.currentSwipeCard = this.swipecards[0];\n                                    }\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        );\n\n\n\n    }\n\n    /**\n     * Hides the card picture\n     *\n     * @param hide\n     */\n    hideImage(hide: boolean) {\n        if (hide) {\n            this.swipeCardMain.nativeElement.classList.add('hidden');\n        } else {\n            this.swipeCardMain.nativeElement.classList.remove('hidden');\n        }\n    }\n\n    // action triggered when user swipes\n    swipe(action = this.SWIPE_ACTION.RIGHT, user) {\n        this.animThumbState = 'two';\n        // swipe right, next avatar\n        if (action === this.SWIPE_ACTION.RIGHT) {\n            this.animState = 'right';\n            this.thumbImg = 'assets/icons/thumbsUp.png';\n            this.matchService.unDislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.likeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n\n        // swipe left, previous avatar\n        if (action === this.SWIPE_ACTION.LEFT) {\n            this.animState = 'left';\n            this.thumbImg = 'assets/icons/thumbsDown.png';\n            console.log(this.currentUser.id);\n            console.log(this.swipecards[this.currentIndex].user.id);\n            this.matchService.unlikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.dislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n        this.swipecards.splice(this.currentIndex, 1);\n    }\n\n    swiped() {\n        if (this.animState === 'left') {\n            this.animState = 'center';\n            if (this.currentIndex + 1 > this.swipecards.length - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n        } else if (this.animState === 'right') {\n            this.animState = 'center';\n            if (this.currentIndex - 1 \n    \n\n    \n        \n    \n     0\">\n        \n            \n                \n                \n                     -->\n                    \n                \n\n                \n                    \n                        {{currentSwipeCard.user.firstName}} \n                    \n                     duration / distance\n                     contacts\n                    link to bio\n                \n                \n                \n                \n                \n                \n            \n            \n                \n                    \n                        Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}\n                    \n                    Distance: \n                    Contact: \n                    car info: \n                    ride info: \n                \n            \n        \n    \n    \n        There's nobody here.\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\">                                                                         -->                                                                                                {{currentSwipeCard.user.firstName}}                                          duration / distance                     contacts                    link to bio                                                                                                                                                                                    Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}                                        Distance:                     Contact:                     car info:                     ride info:                                                     There\\'s nobody here.    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsercardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsermatchwebComponent.html":{"url":"components/UsermatchwebComponent.html","title":"component - UsermatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsermatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usermatchweb/usermatchweb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usermatchweb\n            \n\n            \n                styleUrls\n                usermatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usermatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usermatchweb/usermatchweb.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            like\n                            \n                            \n                        \n                    \n                \n                \n                    \nlike(index: number, interest: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        interest\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\ninterface UserCard {\n  user: User;\n  choose: string;\n  face: String;\n}\n\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  currentUser: User;\n\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  // Sets the card to rotate 90 degrees\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  // Card goes past 90 degrees and changes face\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Potential Matches \n  \n    \n      \n        \n          \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              \n                X -->\n                \n                \n                \n                O -->\n                 \n\n              \n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Potential Matches                                                                     {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}                              X -->                                                                O -->                                                                                         {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsermatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewProfileComponent.html":{"url":"components/ViewProfileComponent.html","title":"component - ViewProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/view-profile/view-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-profile\n            \n\n            \n                styleUrls\n                view-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address2\n                            \n                            \n                                batchEnd\n                            \n                            \n                                canEdit\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                currentRole\n                            \n                            \n                                currentUser\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRole\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitChanges\n                            \n                            \n                                switchRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/view-profile/view-profile.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canEdit:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     Office\n\n                    \n                \n                    \n                        \n                            Type :     Office\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:99\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n//import { DateFormatPipe } from '../../pipes/date-format.pipe';\nimport { Role } from '../../models/role.model';\nimport { Office } from '../../models/office.model';\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  currentUser: User;\n  constructor(private userService:UserControllerService) { }\n  firstName : string;\n  lastName : string;\n  username : string;\n  password : string;\n  confirmPassword : string;\n  address2 : string;\n  batchEnd : any;\n  canEdit : boolean = false;\n  officeObjectArray: Office[] = [];\n  officeObject: Office;\n  \n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n        console.log(this.currentUser);\n        this.firstName = sessionStorage.getItem(\"firstName\");\n        this.lastName = sessionStorage.getItem(\"lastName\");\n        this.username = sessionStorage.getItem(\"email\");\n        // console.log(this.userService.getOfficeByLink(this.currentUser.office).subscribe().toString());\n        // document.getElementById(\"currentOffice\").textContent = this.userService.getOfficeByLink(this.currentUser.office).toString();\n        this.address2 = sessionStorage.getItem(\"address\");\n        this.batchEnd = new Date(sessionStorage.getItem(\"batchEnd\")).toLocaleDateString();\n      }\n    );\n    this.getOffices();\n    this.getUsers();\n  }\n\n  edit() {\n    document.getElementById(\"firstName\").removeAttribute(\"disabled\");\n    document.getElementById(\"lastName\").removeAttribute(\"disabled\");\n    document.getElementById(\"email\").removeAttribute(\"disabled\");\n    document.getElementById(\"password\").removeAttribute(\"disabled\");\n    document.getElementById(\"confirmPassword\").removeAttribute(\"disabled\");\n    document.getElementById(\"address\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").setAttribute(\"type\", \"date\");\n    document.getElementById(\"currentOffice\").style.display = \"none\";\n    document.getElementById(\"selectOffice\").style.display = \"inline\";\n    document.getElementById(\"edit\").style.display = \"none\";\n    document.getElementById(\"submit\").style.display = \"inline\";\n    document.getElementById(\"errorMessage\").removeAttribute(\"hidden\");\n  }\n\n  submitChanges() {\n    this.currentUser.firstName = this.firstName;\n    this.currentUser.lastName = this.lastName;\n    this.currentUser.email = this.username;\n    this.currentUser.office = \"/offices/1\";\n    this.currentUser.address = this.address2;\n    this.currentUser.batchEnd = new Date(this.batchEnd);\n\n    // if(this.password !== \"\") {\n    //   if(this.password === this.confirmPassword) {\n        \n    //   }\n    // }\n    this.userService.update(this.currentUser).subscribe(data => {this.currentUser = data});\n    this.userService.updatePassword(this.currentUser.id, \"p4ssw0rd\", this.password).subscribe();\n    window.location.reload;\n  }\n\n  switchRole() {\n    if(sessionStorage.getItem(\"role\") === \"DRIVER\") {\n      sessionStorage.setItem(\"role\", \"RIDER\");\n    } else if(sessionStorage.getItem(\"role\") === \"RIDER\") {\n      sessionStorage.setItem(\"role\", \"DRIVER\");\n    } else {\n      console.log(\"nope\");\n    }\n  }\n\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n    });\n  }\n\n  currentRole : string;\n  getRole() {\n    this.currentRole = sessionStorage.getItem(\"role\");\n  }\n\n  users: any[];\n  getUsers(){\n    let data;\n    // this.postService.getPosts().then((allPosts) => {posts = allPosts; console.log(posts.results[0].id)});\n    this.userService.getAllUsers().subscribe((x) => {data = x; this.users = data});\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n              \n              Your Profile:\n              \n              \n                \n                  First Name\n                \n                \n                  \n                    \n                   -->\n              \n              \n                \n                  First name cannot be empty\n                \n                \n                  ;\n                  First name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Last Name\n                \n                \n              \n              \n                \n                  Last name cannot be empty\n                \n                \n                  ;\n                  Last name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Email\n                \n                \n              \n              \n                \n                  Email cannot be empty\n                \n                \n                  Email cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Password\n                \n                \n              \n              \n                \n                  Password cannot be empty\n                \n                \n                  Password cannot be more than 15 characters\n                \n              \n              \n                \n                  Confirm\n                \n                \n              \n              \n                \n                  Password Confirm cannot be empty\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                 -->\n                \n                  Passwords do not match.\n                \n              \n\n              \n                \n                  Key\n                \n                \n              \n              \n                \n                  You need a Key\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                \n               -->\n\n              \n                \n                  Office Address\n                \n                \n                   -->\n                \n                \n                  \n                    {{office.name}}\n                  \n                \n                 -->\n                 -->\n              \n\n\n              \n                \n                  Address\n                \n                \n                 -->\n              \n              \n                \n                  Address cannot be empty\n                \n              \n\n              \n                \n                  Batch End\n                \n                \n              \n              \n                Switch to Rider \n              \n              \n                Switch to Driver \n              \n              \n              \n                Edit \n              \n              Save Changes \n              \n                \n                  Please fill out ALL fields and confirm your passwords match\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Biography:\n              \n              \n                \n                  About You\n                \n              \n              \n              \n\n              \n                Profile Picture\n                \n              \n              \n                \n                  Contact Info\n                \n                \n                 -->\n                \n                  \n                    \n                  \n                \n              \n\n              \n                \n                  \n                    \n                      {{contact}}\n                    \n                  \n                  \n                  -\n                \n              \n              \n                Previous\n                 Next\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Car Information:\n              \n              \n                \n                  Driver\n                  Rider\n                \n              \n              \n              \n                \n                  \n                    Make\n                  \n                  \n                \n\n                \n                  \n                    Model\n                  \n                  \n                \n\n                \n                  \n                    Year\n                  \n                  \n                \n              \n              \n                Previous\n                 Edit\n              \n              \n                \n                  Please select Driver or Rider\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Review and submit:\n              \n              User Information\n              First name: {{firstName}} \n              Last Name: {{lastName}} \n              Email: {{username}} \n               Office Address: {{officeObject}}\n               Apartment Address: {{address2}}\n              Batch: {{batchEnd}} \n              \n               0\">\n                Biography\n                About You: {{bio}}\n                Contact Info:\n                \n                   {{item.type}}: {{item.info}}  \n                \n              \n              \n              \n                Car Info\n                Make: {{carMake}} \n                Model: {{carModel}} \n                Year: {{carYear}} \n              \n              \n              \n\n                 Previous\n\n                 Finish\n              \n            \n          \n        \n       -->\n      \n        \n          \n            \n            \n            View Users\n            \n              \n                \n                  User ID\n                  User's Name\n                  User Email\n                  User Role\n                   \n                \n              \n              \n                \n                  {{ user.id }}\n                  {{ user.firstName }}&nbsp;{{ user.lastName }}\n                  {{ user.email }}\n                  {{ user.role }}\n                  Make Admin\n                    Make Trainer\n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Your Profile:                                                              First Name                                                                                         -->                                                              First name cannot be empty                                                  ;                  First name cannot be more than 15 characters                                                                              Last Name                                                                                              Last name cannot be empty                                                  ;                  Last name cannot be more than 15 characters                                                                              Email                                                                                              Email cannot be empty                                                  Email cannot be more than 15 characters                                                                              Password                                                                                              Password cannot be empty                                                  Password cannot be more than 15 characters                                                                              Confirm                                                                                              Password Confirm cannot be empty                                                  Password Confirm cannot be more than 15 characters                 -->                                  Passwords do not match.                                                                              Key                                                                                              You need a Key                                                  Password Confirm cannot be more than 15 characters                               -->                                                Office Address                                                   -->                                                                      {{office.name}}                                                   -->                 -->                                                              Address                                                 -->                                                              Address cannot be empty                                                                              Batch End                                                                            Switch to Rider                                             Switch to Driver                                                           Edit                             Save Changes                                                 Please fill out ALL fields and confirm your passwords match                                                                                                                                  Biography:                                                              About You                                                                                        Profile Picture                                                                              Contact Info                                                 -->                                                                                                                                                                                                {{contact}}                                                                          -                                                            Previous                 Next                                                                                                                  Car Information:                                                              Driver                  Rider                                                                                                                Make                                                                                                          Model                                                                                                          Year                                                                                                Previous                 Edit                                                              Please select Driver or Rider                                                                                                                                  Review and submit:                            User Information              First name: {{firstName}}               Last Name: {{lastName}}               Email: {{username}}                Office Address: {{officeObject}}               Apartment Address: {{address2}}              Batch: {{batchEnd}}                              0\">                Biography                About You: {{bio}}                Contact Info:                                   {{item.type}}: {{item.info}}                                                                            Car Info                Make: {{carMake}}                 Model: {{carModel}}                 Year: {{carYear}}                                                            Previous                 Finish                                                   -->                                                            View Users                                                            User ID                  User\\'s Name                  User Email                  User Role                                                                                                 {{ user.id }}                  {{ user.firstName }} {{ user.lastName }}                  {{ user.email }}                  {{ user.role }}                  Make Admin                    Make Trainer                                                                                                      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/accountinfo/accountinfo.component.ts\n            \n            \n                component\n            \n            \n                AccountinfoComponent\n            \n            \n                11 %\n                (7/60)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/car-registration/car-registration.component.ts\n            \n            \n                component\n            \n            \n                CarRegistrationComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            \n                component\n            \n            \n                FavoritesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/how-to/how-to.component.ts\n            \n            \n                component\n            \n            \n                HowToComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/likes/likes.component.ts\n            \n            \n                component\n            \n            \n                LikesComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                component\n            \n            \n                LikesmatchwebComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/rideswipe/rideswipe.component.ts\n            \n            \n                component\n            \n            \n                RideswipeComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/usercard/usercard.component.ts\n            \n            \n                component\n            \n            \n                UsercardComponent\n            \n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                component\n            \n            \n                UsermatchwebComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/view-profile/view-profile.component.ts\n            \n            \n                component\n            \n            \n                ViewProfileComponent\n            \n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n            \n            \n                directive\n            \n            \n                PlacesAutocompleteDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/address.model.ts\n            \n            \n                class\n            \n            \n                AddressModel\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/api-error.model.ts\n            \n            \n                interface\n            \n            \n                ApiError\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/models/car.model.ts\n            \n            \n                class\n            \n            \n                Car\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/models/contact-info.model.ts\n            \n            \n                interface\n            \n            \n                ContactInfo\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/models/location.model.ts\n            \n            \n                interface\n            \n            \n                Location\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/marker.model.ts\n            \n            \n                interface\n            \n            \n                Marker\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/office.model.ts\n            \n            \n                interface\n            \n            \n                Office\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/models/register.model.ts\n            \n            \n                interface\n            \n            \n                Register\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/route-info.model.ts\n            \n            \n                interface\n            \n            \n                RouteInfo\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/models/swipecard.model.ts\n            \n            \n                class\n            \n            \n                SwipecardModel\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/services/api/maps-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MapsControllerService\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/api/matching-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MatchingControllerService\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/api/user-controller.service.ts\n            \n            \n                injectable\n            \n            \n                UserControllerService\n            \n            \n                43 %\n                (13/30)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                injectable\n            \n            \n                TokenStorage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                variable\n            \n            \n                TOKEN_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.4\n        \n            @angular/animations : ^6.1.8\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.8\n        \n            @angular/compiler : ^6.1.8\n        \n            @angular/core : ^6.1.8\n        \n            @angular/forms : ^6.1.8\n        \n            @angular/http : ^6.1.8\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.8\n        \n            @angular/platform-browser-dynamic : ^6.1.8\n        \n            @angular/router : ^6.1.8\n        \n            @ng-bootstrap/ng-bootstrap : ^3.2.2\n        \n            aws-sdk : ^2.321.0\n        \n            core-js : ^2.4.1\n        \n            googlemaps : ^1.12.0\n        \n            hammerjs : ^2.0.8\n        \n            ng2-animate-on-scroll : ^1.0.11\n        \n            rxjs : ^6.3.2\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorType   (src/.../api-error.model.ts)\n                        \n                        \n                            ContactInfoType   (src/.../contact-info-type.model.ts)\n                        \n                        \n                            Interest   (src/.../interest.model.ts)\n                        \n                        \n                            Role   (src/.../role.model.ts)\n                        \n                        \n                            State   (src/.../state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/api-error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorType\n                    \n                \n                    \n                        \n                            A specific type of error which can be returned by the API.\n\n                        \n                    \n                        \n                            \n                                 NotLoggedIn\n                            \n                        \n                        \n                            \n                                Value : NOT_LOGGED_IN\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : UNAUTHORIZED\n                            \n                        \n            \n        \n\n    src/app/models/contact-info-type.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactInfoType\n                    \n                \n                        \n                            \n                                 Phone\n                            \n                        \n                        \n                            \n                                Value : PHONE\n                            \n                        \n                        \n                            \n                                 Slack\n                            \n                        \n                        \n                            \n                                Value : SLACK\n                            \n                        \n                        \n                            \n                                 Skype\n                            \n                        \n                        \n                            \n                                Value : SKYPE\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/models/interest.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                        \n                            \n                                 like\n                            \n                        \n                        \n                            \n                                Value : LIKE\n                            \n                        \n                        \n                            \n                                 dislike\n                            \n                        \n                        \n                            \n                                Value : DISLIKE\n                            \n                        \n                        \n                            \n                                 thrash\n                            \n                        \n                        \n                            \n                                Value : TRASH\n                            \n                        \n            \n        \n\n    src/app/models/role.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Driver\n                            \n                        \n                        \n                            \n                                Value : DRIVER\n                            \n                        \n                        \n                            \n                                 Rider\n                            \n                        \n                        \n                            \n                                Value : RIDER\n                            \n                        \n                        \n                            \n                                 Trainer\n                            \n                        \n                        \n                            \n                                Value : TRAINER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/models/state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                        \n                            \n                                 Alabama\n                            \n                        \n                        \n                            \n                                Value : AL\n                            \n                        \n                        \n                            \n                                 Alaska\n                            \n                        \n                        \n                            \n                                Value : AK\n                            \n                        \n                        \n                            \n                                 Arkansas\n                            \n                        \n                        \n                            \n                                Value : AR\n                            \n                        \n                        \n                            \n                                 Arizona\n                            \n                        \n                        \n                            \n                                Value : AZ\n                            \n                        \n                        \n                            \n                                 California\n                            \n                        \n                        \n                            \n                                Value : CA\n                            \n                        \n                        \n                            \n                                 Colorado\n                            \n                        \n                        \n                            \n                                Value : CO\n                            \n                        \n                        \n                            \n                                 Connecticut\n                            \n                        \n                        \n                            \n                                Value : CT\n                            \n                        \n                        \n                            \n                                 Delaware\n                            \n                        \n                        \n                            \n                                Value : DE\n                            \n                        \n                        \n                            \n                                 DistrictOfColumbia\n                            \n                        \n                        \n                            \n                                Value : DC\n                            \n                        \n                        \n                            \n                                 Florida\n                            \n                        \n                        \n                            \n                                Value : FL\n                            \n                        \n                        \n                            \n                                 Georgia\n                            \n                        \n                        \n                            \n                                Value : GA\n                            \n                        \n                        \n                            \n                                 Hawaii\n                            \n                        \n                        \n                            \n                                Value : HI\n                            \n                        \n                        \n                            \n                                 Idaho\n                            \n                        \n                        \n                            \n                                Value : ID\n                            \n                        \n                        \n                            \n                                 Illinois\n                            \n                        \n                        \n                            \n                                Value : IL\n                            \n                        \n                        \n                            \n                                 Indiana\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 Iowa\n                            \n                        \n                        \n                            \n                                Value : IA\n                            \n                        \n                        \n                            \n                                 Kansas\n                            \n                        \n                        \n                            \n                                Value : KS\n                            \n                        \n                        \n                            \n                                 Kentucky\n                            \n                        \n                        \n                            \n                                Value : KY\n                            \n                        \n                        \n                            \n                                 Louisiana\n                            \n                        \n                        \n                            \n                                Value : LA\n                            \n                        \n                        \n                            \n                                 Maine\n                            \n                        \n                        \n                            \n                                Value : ME\n                            \n                        \n                        \n                            \n                                 Maryland\n                            \n                        \n                        \n                            \n                                Value : MD\n                            \n                        \n                        \n                            \n                                 Massachusetts\n                            \n                        \n                        \n                            \n                                Value : MA\n                            \n                        \n                        \n                            \n                                 Michigan\n                            \n                        \n                        \n                            \n                                Value : MI\n                            \n                        \n                        \n                            \n                                 Minnesota\n                            \n                        \n                        \n                            \n                                Value : MN\n                            \n                        \n                        \n                            \n                                 Mississippi\n                            \n                        \n                        \n                            \n                                Value : MS\n                            \n                        \n                        \n                            \n                                 Missouri\n                            \n                        \n                        \n                            \n                                Value : MO\n                            \n                        \n                        \n                            \n                                 Montana\n                            \n                        \n                        \n                            \n                                Value : MT\n                            \n                        \n                        \n                            \n                                 Nebraska\n                            \n                        \n                        \n                            \n                                Value : NE\n                            \n                        \n                        \n                            \n                                 Nevada\n                            \n                        \n                        \n                            \n                                Value : NV\n                            \n                        \n                        \n                            \n                                 NewHampshire\n                            \n                        \n                        \n                            \n                                Value : NH\n                            \n                        \n                        \n                            \n                                 NewJersey\n                            \n                        \n                        \n                            \n                                Value : NJ\n                            \n                        \n                        \n                            \n                                 NewMexico\n                            \n                        \n                        \n                            \n                                Value : NM\n                            \n                        \n                        \n                            \n                                 NewYork\n                            \n                        \n                        \n                            \n                                Value : NY\n                            \n                        \n                        \n                            \n                                 NorthCarolina\n                            \n                        \n                        \n                            \n                                Value : NC\n                            \n                        \n                        \n                            \n                                 NorthDakota\n                            \n                        \n                        \n                            \n                                Value : ND\n                            \n                        \n                        \n                            \n                                 Ohio\n                            \n                        \n                        \n                            \n                                Value : OH\n                            \n                        \n                        \n                            \n                                 Oklahoma\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 Oregon\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n                        \n                            \n                                 Pennsylvania\n                            \n                        \n                        \n                            \n                                Value : PA\n                            \n                        \n                        \n                            \n                                 PuertoRico\n                            \n                        \n                        \n                            \n                                Value : PR\n                            \n                        \n                        \n                            \n                                 RhodeIsland\n                            \n                        \n                        \n                            \n                                Value : RI\n                            \n                        \n                        \n                            \n                                 SouthCarolina\n                            \n                        \n                        \n                            \n                                Value : SC\n                            \n                        \n                        \n                            \n                                 SouthDakota\n                            \n                        \n                        \n                            \n                                Value : SD\n                            \n                        \n                        \n                            \n                                 Tennessee\n                            \n                        \n                        \n                            \n                                Value : TN\n                            \n                        \n                        \n                            \n                                 Texas\n                            \n                        \n                        \n                            \n                                Value : TX\n                            \n                        \n                        \n                            \n                                 Utah\n                            \n                        \n                        \n                            \n                                Value : UT\n                            \n                        \n                        \n                            \n                                 Vermont\n                            \n                        \n                        \n                            \n                                Value : VT\n                            \n                        \n                        \n                            \n                                 Virginia\n                            \n                        \n                        \n                            \n                                Value : VA\n                            \n                        \n                        \n                            \n                                 Washington\n                            \n                        \n                        \n                            \n                                Value : WA\n                            \n                        \n                        \n                            \n                                 WestVirginia\n                            \n                        \n                        \n                            \n                                Value : WV\n                            \n                        \n                        \n                            \n                                 Wisconsin\n                            \n                        \n                        \n                            \n                                Value : WI\n                            \n                        \n                        \n                            \n                                 Wyoming\n                            \n                        \n                        \n                            \n                                Value : WY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRideshareClient\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nInformation for developers\nGit directions\nHere is an overview of the steps you need to take in order to make a\nsuccessful change to the repo. If you do not follow all these steps, there\nmay be problems!\ngit checkout -b your-branch # Omit the '-b' if the branch already exists.\n# Make changes to branch...\ngit add .  # Assuming you are in the root directory.\ngit commit -m 'Descriptive commit message'\ngit push -u origin your-branch # You can use just 'git push' if you've already pushed.Before you make a pull request, it's a good idea to merge any new changes\nfrom the dev branch, especially if you've spent a decent amount of time on\nyour changes (making it more likely that the dev branch has changed). This is\nthe best way to detect merge conflicts early.\n# To merge any new changes from the dev branch:\ngit checkout dev\ngit pull\ngit checkout your-branch\ngit merge devIf you get any merge conflicts, resolve them and then make a new commit (git add . && git commit -m 'Descriptive commit message).\nOnce you've pushed your branch, make a pull request on GitHub and make sure\nthat your PR is based off the dev branch and not master!\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Link   (src/.../link.model.ts)\n                        \n                        \n                            Overwrite   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/link.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Link\n                    \n                \n                \n                    \n                        Link:     string\n\n                    \n                \n            \n        \n\n    src/app/utils/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Overwrite\n                    \n                \n                    \n                        \n                            Overwrite certain properties of a type, while keeping others. Thanks to\nhttps://stackoverflow.com/a/46941824!\n\n                        \n                    \n                \n                    \n                        Overwrite:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token.storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/token.storage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
