var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AccessGuard.html",[0,2.724,1,3.068]],["body/guards/AccessGuard.html",[0,3.382,1,4.828,2,0.237,3,0.237,4,0.207,5,4.459,6,0.237,7,1.15,8,6.732,9,0.96,10,2.595,11,1.953,12,4.065,13,0.964,14,4.459,15,1.36,16,0.022,17,0.85,18,0.38,19,1.023,20,1.995,21,4.459,22,6.524,23,3.135,24,6.732,25,4.459,26,2.515,27,1.181,28,3.058,29,3.357,30,0.827,31,1.287,32,0.671,33,2.253,34,3.81,35,4.459,36,3.382,37,2.253,38,4.459,39,1.489,40,2.807,41,2.253,42,0.237,43,0.332,44,1.197,45,1.335,46,1.763,47,4.459,48,3.558,49,4.459,50,1.985,51,4.459,52,1.41,53,0.715,54,2.112,55,1.41,56,1.134,57,2.807,58,3.81,59,4.459,60,4.459,61,4.459,62,4.459,63,3.81,64,4.459,65,2.595,66,0.016,67,0.016]],["title/classes/AddressModel.html",[43,0.268,68,2.466]],["body/classes/AddressModel.html",[2,0.235,3,0.235,4,0.205,6,0.235,13,1.171,16,0.021,17,0.847,18,0.462,19,1.019,23,3.469,42,0.235,43,0.419,53,0.71,66,0.016,67,0.016,68,3.864,69,3.784,70,0.755,71,2.309,72,6.185,73,4.429,74,2.238,75,0.793,76,3.261,77,5.56,78,6.508,79,6.866,80,6.866,81,1.331,82,4.429,83,3.044,84,6.508,85,5.627,86,2.124,87,5.627,88,4.429,89,4.807,90,4.429,91,2.665,92,3.274,93,4.429,94,4.429,95,4.429,96,4.807]],["title/components/AdminComponent.html",[97,0.351,98,0.964]],["body/components/AdminComponent.html",[2,0.147,3,0.147,4,0.128,6,0.147,7,0.827,9,0.594,10,1.605,11,1.699,13,1.115,15,0.664,16,0.022,17,0.801,18,0.382,19,0.5,20,1.704,27,0.964,30,0.654,32,0.415,39,0.922,42,0.147,43,0.206,44,1.091,45,0.826,52,1.683,53,1.01,55,1.683,56,1.034,66,0.012,67,0.012,70,0.693,75,0.573,76,1.809,81,1.164,92,3.904,97,0.648,98,1.43,99,0.974,100,0.974,101,0.974,102,2.357,103,2.231,104,3.473,105,4.065,106,4.065,107,3.473,108,1.526,109,0.922,110,2.11,111,1.989,112,2.791,113,1.285,114,4.065,115,1.285,116,4.065,117,4.038,118,5.324,119,4.549,120,4.549,121,5.324,122,5.324,123,4.549,124,5.324,125,1.683,126,4.065,127,1.988,128,1.988,129,3.083,130,2.759,131,2.791,132,1.809,133,4.065,134,1.683,135,2.759,136,3.473,137,3.795,138,3.473,139,2.559,140,2.759,141,4.065,142,2.643,143,4.503,144,2.759,145,4.065,146,2.759,147,1.988,148,4.077,149,3.455,150,2.224,151,2.759,152,4.065,153,2.199,154,1.526,155,0.922,156,0.872,157,2.759,158,1.607,159,2.759,160,4.065,161,4.065,162,1.03,163,2.357,164,2.759,165,2.759,166,0.872,167,2.357,168,2.759,169,1.908,170,2.759,171,2.759,172,5.324,173,2.759,174,2.357,175,2.759,176,2.759,177,2.759,178,2.759,179,2.357,180,2.357,181,2.759,182,3.083,183,3.473,184,2.365,185,3.473,186,2.559,187,3.473,188,4.065,189,0.872,190,1.285,191,1.153,192,1.88,193,0.974,194,0.782,195,0.974,196,0.974,197,0.782,198,0.974,199,0.741,200,0.741,201,0.974,202,0.741,203,0.974,204,0.741,205,0.974,206,0.741,207,0.974,208,0.782,209,0.974,210,0.741,211,0.974,212,0.741,213,0.974,214,0.782,215,0.974,216,0.782,217,0.974,218,0.741,219,0.974,220,0.741,221,0.974,222,0.741,223,0.974,224,0.741,225,0.872,226,0.741,227,0.922,228,0.974]],["title/interfaces/ApiError.html",[229,0.731,230,2.466]],["body/interfaces/ApiError.html",[2,0.225,3,0.225,4,0.196,6,0.225,16,0.022,18,0.488,19,0.99,27,1.096,42,0.29,50,1.884,53,0.876,54,2.589,66,0.016,67,0.016,70,0.722,71,1.581,75,0.771,81,1.228,86,1.914,229,1.112,230,3.754,231,3.21,232,3.21,233,4.147,234,6.055,235,3.616,236,4.158,237,3.811,238,5.305,239,4.659,240,3.671,241,5.466,242,6.399,243,3.441,244,5.466,245,4.146,246,4.67,247,2.762,248,4.67,249,5.466,250,5.466,251,3.811,252,3.181,253,5.466,254,3.441,255,4.853,256,4.158,257,4.67,258,4.233,259,3.616,260,3.616,261,3.616,262,3.616,263,4.67]],["title/components/AppComponent.html",[97,0.351,197,1.018]],["body/components/AppComponent.html",[2,0.216,3,0.216,4,0.189,6,0.216,7,1.085,13,1.075,15,0.98,16,0.021,17,0.949,18,0.4,19,0.737,27,0.737,30,0.5,32,0.613,41,2.694,42,0.216,43,0.304,56,1.356,66,0.015,67,0.015,75,0.751,81,1.256,97,0.639,98,1.094,99,1.438,100,1.438,101,1.438,109,1.36,110,2.206,111,2.094,113,1.686,115,1.686,134,1.288,154,1.288,155,1.36,156,1.288,189,1.288,190,1.686,191,1.512,192,2.226,193,1.438,194,1.155,195,1.438,196,1.438,197,1.788,198,1.438,199,1.094,200,1.094,201,1.438,202,1.094,203,1.438,204,1.094,205,1.438,206,1.094,207,1.438,208,1.155,209,1.438,210,1.094,211,1.438,212,1.094,213,1.438,214,1.155,215,1.438,216,1.155,217,1.438,218,1.094,219,1.438,220,1.094,221,1.438,222,1.094,223,1.438,224,1.094,225,1.288,226,1.094,227,1.36,228,1.438,264,3.479,265,5.331,266,5.331,267,5.387,268,3.668,269,6.305,270,5.331,271,5.331,272,4.073,273,3.479,274,4.073,275,4.073,276,4.073,277,4.073]],["title/modules/AppModule.html",[278,1.943,279,2.466]],["body/modules/AppModule.html",[2,0.151,3,0.151,4,0.131,11,1.795,16,0.022,30,0.903,32,0.427,39,1.637,42,0.22,43,0.211,65,2.412,66,0.012,67,0.012,98,1.61,111,0.804,162,1.059,189,0.896,194,1.7,197,1.913,199,1.61,202,1.61,204,1.61,206,1.61,208,1.7,210,1.61,212,1.61,214,1.7,216,1.7,218,1.61,220,1.61,222,1.61,224,1.61,226,1.61,252,3.339,254,3.774,278,2.243,279,5.131,280,1.343,281,3.718,282,4.09,283,2.422,284,2.422,285,2.422,286,2.422,287,2.422,288,3.774,289,3.029,290,4.117,291,3.774,292,2.513,293,3.542,294,2.422,295,1.534,296,2.835,297,4.146,298,3.542,299,1.947,300,4.146,301,2.835,302,3.542,303,4.902,304,4.146,305,2.422,306,4.146,307,4.146,308,2.15,309,2.422,310,2.835,311,2.422,312,2.422,313,2.422,314,2.422,315,2.422,316,1.947,317,2.422,318,2.422,319,2.835,320,4.146,321,2.835,322,1.947,323,2.835,324,2.422,325,2.835,326,2.835,327,2.835,328,2.835,329,2.835,330,1.534,331,2.835,332,3.542,333,1.947,334,2.15,335,4.902,336,1.649,337,2.835,338,2.15,339,2.835,340,2.422,341,2.422,342,2.835,343,2.422,344,1.534,345,2.422,346,2.835,347,2.835,348,2.422,349,2.422,350,1.947,351,2.422,352,2.422,353,1.947,354,2.422,355,3.542,356,2.422,357,2.422,358,2.835,359,2.835,360,2.835,361,2.835,362,2.835,363,2.422,364,4.146,365,4.146]],["title/classes/AppPage.html",[43,0.268,366,2.724]],["body/classes/AppPage.html",[2,0.282,3,0.282,4,0.246,6,0.282,7,1.278,13,1.071,16,0.021,27,1.254,30,0.651,41,2.679,42,0.282,43,0.468,66,0.018,67,0.018,191,1.503,299,3.64,366,4.766,367,4.529,368,6.926,369,6.926,370,5.301,371,5.301,372,4.529,373,5.301,374,5.301,375,5.301]],["title/modules/AppRoutingModule.html",[278,1.943,288,2.261]],["body/modules/AppRoutingModule.html",[2,0.211,3,0.211,4,0.184,16,0.022,26,2.889,30,0.892,32,0.598,33,2.007,42,0.312,43,0.391,66,0.015,67,0.015,97,0.699,98,1.408,112,2.728,127,1.483,191,1.126,194,1.487,199,1.408,200,1.067,202,1.408,204,1.408,206,1.408,212,1.408,214,1.487,218,1.408,220,1.408,224,1.408,278,2.149,281,3.013,288,3.301,302,4.481,311,3.394,312,3.394,313,3.394,314,3.394,315,3.394,316,2.728,317,3.394,318,3.394,324,3.394,340,3.394,341,3.394,348,3.394,349,3.394,350,2.728,351,3.394,352,3.394,353,2.728,354,3.394,376,3.973,377,3.973,378,5.245,379,3.394,380,5.245,381,3.973,382,3.973,383,3.394,384,2.311,385,3.973,386,2.728,387,3.013,388,3.394,389,1.402,390,7.193,391,3.973,392,3.973,393,5.245,394,4.032,395,3.973,396,2.501,397,1.768,398,3.973,399,3.394,400,1.881,401,3.013,402,3.973,403,3.013,404,3.973]],["title/injectables/AuthService.html",[31,0.818,289,1.815]],["body/injectables/AuthService.html",[2,0.17,3,0.17,4,0.149,6,0.17,7,0.921,9,0.975,11,1.708,12,3.32,13,0.973,15,1.264,16,0.022,17,0.79,18,0.353,19,0.951,20,2.014,26,2.337,27,1.131,28,2.841,29,1.734,30,0.831,31,1.196,32,0.482,33,1.619,36,2.43,37,1.619,39,1.07,40,2.017,41,1.619,42,0.17,43,0.239,46,2.256,52,1.432,53,0.965,55,1.804,66,0.013,67,0.013,70,0.772,76,2.015,81,1.25,134,1.432,154,1.804,166,1.903,182,3.982,233,2.634,236,4.411,237,2.85,251,3.933,268,3.979,280,2.144,289,2.288,332,2.737,333,3.919,336,2.634,389,1.598,396,2.85,397,1.426,403,4.327,405,2.737,406,4.739,407,2.43,408,4.129,409,3.204,410,3.868,411,2.634,412,4.528,413,2.144,414,3.434,415,3.305,416,4.528,417,4.528,418,5.251,419,3.204,420,4.505,421,3.204,422,4.528,423,3.204,424,4.875,425,3.204,426,2.43,427,2.737,428,2.017,429,2.43,430,3.204,431,3.204,432,3.204,433,4.528,434,3.204,435,3.204,436,3.204,437,3.204,438,3.204,439,3.204,440,3.204,441,1.619,442,1.426,443,3.204,444,3.204,445,2.43,446,3.204,447,4.528,448,4.528,449,3.204,450,3.204,451,3.204,452,3.204,453,2.737,454,3.204,455,2.737,456,3.204,457,3.204,458,3.204,459,2.737,460,3.204,461,2.737,462,3.204,463,2.737,464,3.204,465,2.737,466,2.737,467,2.737,468,2.737,469,3.204,470,2.737,471,3.204,472,3.204,473,2.737,474,4.528,475,3.204,476,3.204,477,3.204,478,3.204,479,5.251,480,4.528,481,2.017,482,3.204,483,2.43]],["title/classes/Car.html",[43,0.268,200,0.964]],["body/classes/Car.html",[2,0.236,3,0.236,4,0.206,6,0.236,13,1.147,16,0.022,18,0.452,30,0.693,42,0.236,43,0.42,48,3.55,53,1.078,66,0.016,67,0.016,70,0.758,71,2.433,75,0.795,81,1.244,86,2.173,91,3.254,200,1.93,397,2.51,411,3.791,484,3.797,485,5.639,486,2.51,487,4.818,488,4.719,489,6.872,490,4.719,491,4.444,492,3.281,493,4.444,494,5.567,495,5.567,496,4.444,497,2.9,498,4.444,499,4.277,500,4.444,501,3.797,502,3.797]],["title/components/CarRegistrationComponent.html",[97,0.351,199,0.964]],["body/components/CarRegistrationComponent.html",[2,0.121,3,0.121,4,0.105,6,0.121,7,0.714,9,0.489,10,1.321,11,1.561,13,1.123,15,0.546,16,0.022,17,0.726,18,0.409,19,0.411,20,1.513,27,0.998,28,2.609,30,0.592,32,0.342,39,0.758,42,0.121,43,0.169,44,0.942,45,0.68,52,1.525,53,1.084,54,1.661,55,1.109,56,0.892,66,0.01,67,0.01,70,0.598,74,1.772,75,0.494,81,0.998,86,1.742,91,1.661,97,0.595,98,0.609,99,0.801,100,0.801,101,0.801,103,1.47,108,1.355,109,0.758,110,2.051,111,1.93,113,1.109,115,1.109,125,1.525,127,1.801,128,1.31,134,1.648,142,1.561,143,4.179,154,0.718,155,0.758,156,1.355,158,1.387,162,0.847,166,0.718,189,0.718,190,1.109,191,0.995,192,1.702,193,0.801,194,1.215,195,0.801,196,0.801,197,0.644,198,0.801,199,1.295,200,1.975,201,0.801,202,0.609,203,0.801,204,0.609,205,0.801,206,0.609,207,0.801,208,0.644,209,0.801,210,0.609,211,0.801,212,0.609,213,0.801,214,0.644,215,0.801,216,0.644,217,0.801,218,0.609,219,0.801,220,0.609,221,0.801,222,0.609,223,0.801,224,0.609,225,0.718,226,0.609,227,0.758,228,0.801,243,3.469,280,1.661,350,4.567,384,2.041,389,1.513,411,3.206,413,2.03,442,1.01,468,2.997,481,2.208,486,1.01,487,4.12,488,3.784,490,3.312,494,2.997,503,5.682,504,1.939,505,2.66,506,2.409,507,3.784,508,3.507,509,3.507,510,4.822,511,4.12,512,4.12,513,4.822,514,4.12,515,4.822,516,4.822,517,4.822,518,4.822,519,4.822,520,4.822,521,3.507,522,3.312,523,2.27,524,3.507,525,2.997,526,2.27,527,2.997,528,1.898,529,2.66,530,2.27,531,3.507,532,4.12,533,2.27,534,3.657,535,2.27,536,3.507,537,2.409,538,2.179,539,2.27,540,2.997,541,3.507,542,2.27,543,2.27,544,2.041,545,2.27,546,3.507,547,3.507,548,2.997,549,2.27,550,2.27,551,3.507,552,3.507,553,2.27,554,2.27,555,0.951,556,1.721,557,3.507,558,4.287,559,2.27,560,2.27,561,3.507,562,2.997,563,2.27,564,2.27,565,2.27,566,2.27,567,2.27,568,3.507,569,2.27,570,2.27,571,2.27,572,3.507,573,3.507,574,2.27,575,2.27,576,1.559,577,2.27,578,2.27,579,3.507,580,2.27,581,3.507,582,2.27,583,2.27,584,2.27,585,3.507,586,2.27,587,2.27,588,2.27,589,2.66,590,2.66,591,3.507,592,3.507,593,3.507,594,3.507]],["title/interfaces/ContactInfo.html",[229,0.731,595,2.466]],["body/interfaces/ContactInfo.html",[2,0.385,3,0.259,4,0.226,6,0.259,16,0.021,18,0.487,42,0.259,52,1.89,53,0.782,66,0.017,67,0.017,70,0.832,75,0.843,81,1.273,86,2.044,91,3.331,150,1.723,229,1.216,238,4.534,492,3.479,522,4.106,595,4.106,596,3.701,597,3.701,598,4.881,599,4.021,600,5.979,601,5.979,602,3.479,603,5.979,604,5.979,605,5.979]],["title/interceptors/ErrorInterceptor.html",[254,2.261,606,2.466]],["body/interceptors/ErrorInterceptor.html",[2,0.227,3,0.227,4,0.198,6,0.227,7,1.118,9,0.919,12,4.024,13,0.937,15,1.323,16,0.022,17,0.827,18,0.369,19,0.995,27,1.162,29,3.288,30,0.85,31,1.251,32,0.642,33,2.157,34,3.646,36,3.237,37,2.157,42,0.227,43,0.318,44,1.146,45,1.278,46,1.687,54,2.603,63,3.646,66,0.016,67,0.016,153,2.309,230,3.774,233,3.735,237,3.459,251,2.687,254,3.459,255,3.237,289,3.436,295,2.309,334,4.868,336,2.483,389,1.507,410,3.646,606,2.931,607,4.268,608,5.193,609,3.646,610,4.268,611,3.646,612,5.484,613,3.537,614,4.268,615,3.646,616,4.695,617,5.495,618,4.268,619,4.268,620,4.268,621,3.237,622,4.268,623,4.268,624,6.078,625,4.268,626,4.268,627,4.268,628,4.268,629,4.268,630,4.268,631,4.268,632,4.268,633,4.268,634,3.646,635,3.646,636,4.268,637,4.268,638,4.268,639,4.268]],["title/components/FavoritesComponent.html",[97,0.351,202,0.964]],["body/components/FavoritesComponent.html",[2,0.198,3,0.198,4,0.173,6,0.198,7,1.022,9,1.224,13,0.969,16,0.021,17,0.856,27,0.675,30,0.458,32,0.561,42,0.198,43,0.278,44,1.349,53,0.806,55,1.924,56,1.278,66,0.014,67,0.014,70,0.635,75,0.708,97,0.673,98,1.001,99,1.315,100,1.315,101,1.315,108,1.798,109,1.245,110,2.186,111,2.065,113,1.589,115,1.589,125,1.924,127,2.272,128,1.876,134,1.178,154,2.18,155,1.245,156,1.178,189,1.178,190,1.589,191,1.425,192,2.148,193,1.315,194,1.057,195,1.315,196,1.315,197,1.057,198,1.315,199,1.001,200,1.001,201,1.315,202,1.634,203,1.315,204,1.001,205,1.315,206,1.001,207,1.315,208,1.057,209,1.315,210,1.001,211,1.315,212,1.001,213,1.315,214,1.057,215,1.315,216,1.057,217,1.315,218,1.001,219,1.315,220,1.001,221,1.315,222,1.001,223,1.315,224,1.001,225,1.178,226,1.001,227,1.245,228,1.315,252,2.924,280,2.38,401,4.615,640,3.183,641,5.025,642,3.075,643,5.025,644,3.811,645,4.672,646,3.163,647,5.025,648,5.025,649,3.905,650,5.025,651,4.293,652,3.163,653,3.811,654,3.726,655,3.451,656,3.163,657,4.672,658,5.025,659,5.025,660,2.237,661,3.163,662,3.183]],["title/injectables/GeocodeService.html",[31,0.818,663,2.724]],["body/injectables/GeocodeService.html",[2,0.217,3,0.217,4,0.19,6,0.217,7,1.285,9,1.283,13,1.077,15,1.287,16,0.022,17,0.805,18,0.4,19,0.968,27,1.187,29,3.758,30,0.657,31,1.356,32,0.616,37,2.068,40,2.576,41,2.068,42,0.217,43,0.305,52,1.691,66,0.018,67,0.015,75,0.754,76,2.651,81,1.079,132,1.821,142,1.821,240,3.637,251,3.366,397,2.38,442,1.821,576,2.81,635,3.496,663,4.055,664,3.496,665,7.223,666,5.348,667,5.348,668,5.348,669,4.092,670,5.348,671,5.957,672,4.092,673,5.348,674,6.317,675,4.092,676,5.348,677,5.348,678,5.348,679,5.348,680,5.348,681,5.348,682,5.348,683,5.348,684,5.348,685,4.092,686,5.348,687,4.092,688,3.103,689,3.496,690,4.092]],["title/components/HowToComponent.html",[97,0.351,204,0.964]],["body/components/HowToComponent.html",[2,0.304,3,0.099,4,0.086,9,0.4,16,0.02,17,0.801,18,0.201,19,0.916,30,0.228,32,0.28,42,0.099,43,0.139,44,0.805,50,1.334,52,1.365,54,1.419,55,0.948,56,0.762,57,3.485,66,0.009,67,0.016,70,0.317,76,2.464,83,2.737,86,1.365,92,1.744,97,0.462,98,0.499,99,0.657,100,0.657,101,0.657,103,1.256,108,1.19,109,0.621,110,1.981,111,1.862,113,0.948,115,0.948,125,0.588,131,2.964,132,1.334,137,1.621,142,2.611,147,1.119,148,2.964,149,2.512,153,2.335,154,2.058,158,2,186,1.886,189,0.588,190,0.948,191,0.85,192,1.524,193,0.657,194,0.527,195,0.657,196,0.657,197,0.527,198,0.657,199,0.499,200,1.668,201,0.657,202,0.499,203,0.657,204,1.159,205,0.657,206,0.499,207,0.657,208,0.527,209,0.657,210,0.499,211,0.657,212,0.499,213,0.657,214,0.527,215,0.657,216,0.527,217,0.657,218,0.499,219,0.657,220,0.499,221,0.657,222,0.499,223,0.657,224,0.499,225,1.964,226,0.499,227,0.621,228,0.657,238,3.274,239,2.058,243,3.485,268,3.221,280,1.419,295,2.335,316,1.277,384,2.512,387,2.273,396,4.133,397,2.611,411,1.744,413,3.157,420,2.058,486,3.035,488,2.964,490,2.964,495,4.323,544,3.82,556,4.634,589,3.274,590,2.273,599,3.221,613,3.664,642,2.965,651,5.221,652,1.886,656,3.485,691,1.589,692,1.589,693,2.56,694,3.688,695,2.997,696,2.997,697,2.997,698,2.997,699,3.688,700,4.197,701,5.965,702,2.964,703,3.688,704,2.56,705,2.56,706,4.317,707,5.013,708,2.997,709,4.317,710,6.749,711,4.634,712,2.997,713,2.273,714,3.185,715,2.56,716,1.744,717,4.317,718,2.56,719,2.997,720,4.634,721,6.749,722,5.013,723,4.323,724,2.944,725,2.997,726,2.997,727,2.997,728,2.997,729,4.317,730,5.013,731,4.776,732,2.997,733,5.536,734,2.997,735,2.56,736,2.56,737,2.56,738,2.997,739,2.997,740,1.886,741,2.56,742,5.221,743,2.997,744,2.56,745,4.317,746,2.56,747,2.997,748,2.997,749,2.997,750,3.688,751,5.06,752,2.56,753,2.997,754,2.997,755,4.317,756,2.56,757,1.744,758,2.058,759,4.317,760,2.997,761,3.274,762,1.886,763,3.688,764,2.997,765,2.997,766,2.997,767,3.688,768,1.86,769,2.56,770,2.997,771,3.474,772,5.06,773,2.997,774,2.56,775,1.86,776,2.997,777,2.997,778,4.317,779,2.997,780,4.317,781,2.058,782,2.997,783,1.86,784,4.317,785,2.997,786,3.801,787,2.997,788,4.317,789,2.717,790,2.997,791,2.997,792,2.997,793,2.56,794,2.058,795,2.997,796,2.058,797,2.997,798,2.997,799,2.997,800,2.997,801,1.589,802,1.86,803,1.86,804,2.997,805,1.86,806,1.86]],["title/interceptors/JwtInterceptor.html",[290,2.466,606,2.466]],["body/interceptors/JwtInterceptor.html",[2,0.251,3,0.251,4,0.219,6,0.251,7,1.191,9,1.016,13,0.999,15,1.41,16,0.022,17,0.881,18,0.394,19,1.06,27,1.06,29,3.445,30,0.818,31,1.334,32,0.71,37,2.385,42,0.251,43,0.352,44,1.267,45,1.413,66,0.017,67,0.017,237,4.008,290,4.022,334,5.05,336,2.746,389,1.666,408,4.392,415,4.008,442,2.101,606,3.241,608,5.44,611,4.032,612,5.688,613,3.705,615,4.032,616,5.004,807,4.72,808,4.72,809,4.72,810,4.72,811,4.72,812,4.72,813,4.72,814,4.72,815,4.72,816,4.72,817,4.72]],["title/components/LandingComponent.html",[97,0.351,206,0.964]],["body/components/LandingComponent.html",[2,0.143,3,0.143,4,0.124,6,0.143,7,0.81,9,0.578,10,1.562,11,1.68,12,1.562,13,0.957,15,0.646,16,0.022,17,0.791,18,0.319,19,0.486,20,1.676,27,0.721,28,2.569,30,0.645,32,0.404,33,1.357,39,0.897,42,0.143,43,0.2,44,1.07,45,0.804,53,1.07,54,1.887,55,1.661,56,1.013,58,3.403,65,1.562,66,0.011,67,0.011,70,0.679,75,0.561,97,0.644,98,0.721,99,0.948,100,0.948,101,0.948,103,1.669,108,1.501,109,0.897,110,2.102,111,2.029,113,1.259,115,1.259,125,1.661,128,2.195,129,3.021,134,1.259,136,3.403,139,2.507,147,1.487,150,1.406,154,0.849,162,1.002,166,0.849,169,2.077,183,3.403,184,2.318,185,3.403,189,0.849,190,1.259,191,1.129,192,1.855,193,0.948,194,0.761,195,0.948,196,0.948,197,0.761,198,0.948,199,0.721,200,0.721,201,0.948,202,0.721,203,0.948,204,0.721,205,0.948,206,1.411,207,0.948,208,0.761,209,0.948,210,0.721,211,0.948,212,0.721,213,0.948,214,0.761,215,0.948,216,0.761,217,0.948,218,0.721,219,0.948,220,0.721,221,0.948,222,0.721,223,0.948,224,0.721,225,0.849,226,0.721,227,0.897,228,0.948,384,2.318,388,5.34,394,3.608,413,2.488,415,2.507,486,3.074,505,3.021,506,2.735,537,2.735,538,1.061,540,3.403,555,1.125,613,2.318,652,3.307,655,2.735,656,2.507,660,1.195,661,2.507,699,5.34,701,4.488,702,3.608,724,3.057,742,3.403,744,3.403,758,2.735,761,4.74,762,3.307,786,2.735,796,2.735,818,2.294,819,3.983,820,3.983,821,3.983,822,3.983,823,3.983,824,2.338,825,5.022,826,4.488,827,3.983,828,2.685,829,2.685,830,2.685,831,3.983,832,3.983,833,3.021,834,1.887,835,1.844,836,2.294,837,2.036,838,3.403,839,5.551,840,5.022,841,5.254,842,3.515,843,3.021,844,3.403,845,5.254,846,5.254,847,3.983,848,2.685,849,3.983,850,4.488,851,3.403,852,3.403,853,3.983,854,3.983,855,3.403,856,3.983,857,3.983,858,2.685,859,5.254,860,3.983,861,3.983,862,2.685,863,2.685]],["title/components/LikesComponent.html",[97,0.351,208,1.018]],["body/components/LikesComponent.html",[2,0.165,3,0.165,4,0.144,6,0.165,7,0.902,9,0.67,11,1.686,13,0.96,15,0.749,16,0.022,17,0.847,18,0.347,19,0.563,20,1.988,27,0.563,30,0.782,32,0.468,39,1.481,42,0.165,43,0.232,44,1.191,45,0.932,46,1.23,50,2.506,52,1.781,53,1.09,56,1.128,66,0.013,67,0.016,70,0.756,75,0.625,97,0.664,98,0.836,99,1.098,100,1.098,101,1.098,108,1.634,109,1.039,110,2.143,111,2.021,113,1.402,115,1.402,125,1.781,127,1.656,128,1.656,134,0.984,139,2.791,147,1.656,150,1.988,154,0.984,155,1.039,156,0.984,158,1.753,162,1.162,166,1.402,169,2.447,189,0.984,190,1.402,191,1.257,192,1.988,193,1.098,194,0.882,195,1.098,196,1.098,197,0.882,198,1.098,199,0.836,200,0.836,201,1.098,202,0.836,203,1.098,204,0.836,205,1.098,206,0.836,207,1.098,208,1.597,209,1.098,210,0.836,211,1.098,212,0.836,213,1.098,214,0.882,215,1.098,216,0.882,217,1.098,218,0.836,219,1.098,220,0.836,221,1.098,222,0.836,223,1.098,224,0.836,225,0.984,226,0.836,227,1.039,228,1.098,247,2.846,292,2.36,330,1.683,383,3.788,389,1.098,441,1.572,442,1.974,486,2.754,497,1.974,538,1.23,555,1.304,602,2.58,642,3.29,645,3.045,657,3.045,660,1.385,781,3.045,824,2.506,834,1.474,842,2.399,864,2.658,865,4.434,866,4.434,867,4.811,868,2.137,869,4.434,870,3.363,871,3.006,872,3.112,873,2.58,874,3.363,875,3.112,876,3.747,877,3.363,878,2.658,879,1.474,880,1.683,881,1.683,882,2.58,883,2.36,884,2.58,885,2.36,886,3.006,887,2.137,888,2.137,889,1.81,890,1.81,891,2.36,892,2.658,893,4.434,894,4.434]],["title/components/LikesmatchwebComponent.html",[97,0.351,210,0.964]],["body/components/LikesmatchwebComponent.html",[2,0.201,3,0.133,4,0.116,6,0.133,7,0.768,9,0.538,11,1.518,13,0.976,15,1.095,16,0.022,17,0.861,18,0.366,19,0.824,20,1.79,23,1.263,27,0.824,30,0.73,32,0.376,39,1.261,42,0.201,43,0.186,44,1.014,45,0.749,46,0.988,50,2.257,52,1.603,53,1.102,55,0.791,56,0.96,66,0.011,67,0.015,70,0.644,75,0.532,81,0.684,97,0.633,98,0.671,99,0.883,100,0.883,101,0.883,108,1.439,109,0.835,110,2.081,111,1.96,113,1.194,115,1.194,125,1.603,127,1.893,128,1.41,134,1.439,139,2.377,147,1.41,150,1.922,154,0.791,155,0.835,156,0.791,158,1.493,162,0.934,166,1.194,169,2.35,189,0.791,190,1.194,191,1.071,192,1.79,193,0.883,194,0.709,195,0.883,196,0.883,197,0.709,198,0.883,199,0.671,200,0.671,201,0.883,202,0.671,203,0.883,204,0.671,205,0.883,206,0.671,207,0.883,208,0.709,209,0.883,210,1.362,211,0.883,212,0.671,213,0.883,214,0.709,215,0.883,216,0.709,217,0.883,218,0.671,219,0.883,220,0.671,221,0.883,222,0.671,223,0.883,224,0.671,225,0.791,226,0.671,227,0.835,228,0.883,229,0.509,240,1.353,247,2.562,292,2.125,330,1.353,344,2.043,389,0.883,400,3.071,441,1.263,442,1.681,486,2.645,497,1.681,538,0.988,555,1.048,602,2.197,642,3.165,646,2.377,653,2.864,657,2.593,724,1.455,740,2.377,757,3.458,781,2.593,824,2.423,834,1.184,842,2.043,868,1.717,870,2.864,871,2.648,873,2.197,874,2.864,877,3.451,879,1.184,880,1.353,881,1.353,882,2.197,883,1.896,884,2.197,885,1.896,886,2.648,889,3.458,890,1.455,895,1.896,896,3.226,897,3.226,898,4.332,899,3.226,900,3.226,901,3.777,902,2.593,903,2.5,904,2.593,905,2.593,906,3.482,907,3.482,908,2.197,909,3.482,910,2.593,911,2.5,912,2.593,913,2.5,914,2.5,915,3.427,916,2.377,917,1.574,918,1.455,919,2.136,920,2.136,921,1.717,922,2.593,923,3.192,924,1.717,925,2.593,926,2.593,927,1.717,928,4.202,929,1.717,930,2.136,931,2.136,932,2.136,933,2.136,934,2.136,935,1.896,936,1.896,937,2.136,938,2.136,939,1.574,940,2.136,941,4.202,942,4.332,943,4.332,944,4.332,945,3.226,946,3.226,947,2.593,948,3.226]],["title/interfaces/Location.html",[132,1.598,229,0.731]],["body/interfaces/Location.html",[2,0.278,3,0.278,4,0.242,6,0.278,16,0.021,18,0.419,42,0.278,66,0.018,67,0.018,70,0.891,71,1.951,75,0.878,86,2.26,132,3.215,156,2.18,229,1.268,256,3.589,949,4.465,950,5.226,951,5.89,952,5.89,953,6.231,954,6.231]],["title/components/LoginComponent.html",[97,0.351,212,0.964]],["body/components/LoginComponent.html",[2,0.157,3,0.157,4,0.137,6,0.157,7,0.869,9,0.636,11,1.746,12,3.393,13,1.036,15,1.207,16,0.022,17,0.827,18,0.37,19,0.534,20,1.94,26,2.446,27,0.908,30,0.716,31,0.972,32,0.444,33,1.492,39,0.986,42,0.157,43,0.22,44,1.147,45,0.884,46,1.688,53,1.129,54,2.879,56,1.086,66,0.012,67,0.012,70,0.728,75,0.602,81,1.135,97,0.57,98,0.793,99,1.042,100,1.042,101,1.042,108,1.586,109,0.986,110,2.129,111,2.007,113,1.35,115,1.35,125,1.738,127,1.594,128,2.053,134,1.35,147,1.594,154,0.933,155,1.426,162,1.102,166,1.586,189,0.933,190,1.35,191,1.211,192,1.94,193,1.042,194,0.837,195,1.042,196,1.042,197,0.837,198,1.042,199,0.793,200,0.793,201,1.042,202,0.793,203,1.042,204,0.793,205,1.042,206,0.793,207,1.042,208,0.837,209,1.042,210,0.793,211,1.042,212,1.476,213,1.042,214,0.837,215,1.042,216,0.837,217,1.042,218,0.793,219,1.042,220,0.793,221,1.042,222,0.793,223,1.042,224,0.793,225,0.933,226,0.793,227,0.986,228,1.042,233,2.484,235,3.648,239,3.775,243,3.46,252,3.735,257,3.648,268,3.537,280,2.022,289,3.244,394,3.775,396,4.28,406,3.238,424,3.648,481,2.688,506,2.932,538,1.167,544,2.484,555,1.237,576,2.932,609,2.522,621,2.238,655,2.932,656,2.688,694,3.648,700,2.932,714,2.688,771,2.932,824,2.446,837,2.238,840,4.696,955,2.522,956,5.194,957,4.27,958,4.27,959,5.497,960,5.497,961,4.27,962,4.27,963,3.648,964,3.648,965,4.27,966,2.952,967,3.238,968,4.27,969,2.952,970,4.27,971,2.952,972,2.952,973,4.27,974,2.952,975,2.952,976,2.952,977,2.952,978,2.952,979,4.27]],["title/injectables/MapsControllerService.html",[31,0.818,291,2.261]],["body/injectables/MapsControllerService.html",[2,0.205,3,0.205,4,0.179,6,0.205,7,1.046,9,0.83,13,0.986,15,1.392,16,0.022,17,0.87,18,0.389,19,1.047,26,1.715,27,1.197,29,3.477,30,0.812,31,1.317,32,0.58,37,1.948,42,0.205,43,0.287,45,1.154,52,1.951,55,1.625,66,0.015,67,0.015,70,0.657,76,3.121,81,1.309,132,2.86,149,3.739,166,1.951,184,2.991,236,3.53,262,4.391,291,3.236,322,2.647,333,4.237,336,2.242,384,2.991,397,2.942,407,2.923,426,2.923,428,2.426,429,2.923,525,4.391,644,3.898,649,4.413,702,3.972,757,2.991,762,3.236,794,3.53,951,5.271,952,5.271,980,5.271,981,2.923,982,5.14,983,5.14,984,3.293,985,5.14,986,3.854,987,5.14,988,5.783,989,3.53,990,5.14,991,3.854,992,4.391,993,5.14,994,5.14,995,3.898,996,2.647,997,3.854,998,3.293,999,4.391]],["title/interfaces/Marker.html",[229,0.731,989,2.466]],["body/interfaces/Marker.html",[2,0.236,3,0.236,4,0.206,6,0.236,16,0.021,18,0.462,19,1.301,28,3.636,42,0.236,53,1.044,55,1.781,66,0.016,67,0.016,70,0.756,71,2.51,75,0.794,76,3.057,81,1.309,86,1.957,104,4.813,132,3.057,229,1.146,256,3.868,397,2.755,414,3.364,499,4.272,528,2.4,562,5.563,722,4.813,796,3.046,989,4.717,1000,3.79,1001,6.512,1002,6.512,1003,6.512,1004,5.633,1005,4.813,1006,6.19,1007,5.633,1008,4.436,1009,4.436,1010,4.436]],["title/injectables/MatchingControllerService.html",[31,0.818,292,1.505]],["body/injectables/MatchingControllerService.html",[2,0.143,3,0.143,4,0.125,6,0.143,7,0.813,9,0.58,13,1.09,15,1.539,16,0.022,17,0.962,18,0.43,19,1.157,27,1.303,29,3.762,30,0.723,31,1.084,32,0.406,37,1.362,42,0.143,43,0.201,45,0.807,53,1.157,66,0.011,67,0.015,81,0.723,86,2.309,91,3.44,166,2.112,236,2.744,245,3.03,247,2.019,248,5.347,292,1.675,333,3.615,336,1.569,387,3.992,407,2.045,426,2.045,427,2.303,428,1.697,429,2.045,486,1.778,492,2.325,497,2.895,528,3.386,642,3.441,716,3.426,789,3.314,842,2.162,881,1.459,981,2.045,984,2.303,999,2.303,1011,5.556,1012,3.996,1013,3.996,1014,3.996,1015,3.996,1016,3.996,1017,3.996,1018,3.996,1019,3.996,1020,3.996,1021,6.91,1022,2.696,1023,3.996,1024,6.809,1025,3.996,1026,2.696,1027,3.996,1028,2.696,1029,3.996,1030,3.996,1031,3.996,1032,3.996,1033,4.761,1034,3.996,1035,2.696,1036,3.996,1037,2.696,1038,3.996,1039,3.996,1040,2.696,1041,3.996,1042,2.696,1043,5.265,1044,3.996,1045,2.696,1046,4.761,1047,2.696,1048,2.696,1049,3.996,1050,3.996,1051,3.996,1052,3.996,1053,2.696,1054,3.996]],["title/components/NavbarComponent.html",[97,0.351,216,1.018]],["body/components/NavbarComponent.html",[2,0.134,3,0.134,4,0.117,6,0.134,7,0.772,9,0.817,10,1.463,11,1.634,12,3.175,13,1.015,15,0.605,16,0.022,17,0.765,18,0.255,19,0.455,20,1.612,26,2.263,27,0.921,30,0.67,32,0.378,33,1.271,39,0.84,42,0.134,43,0.187,44,1.019,46,1.806,52,1.608,53,1.146,54,3.117,55,1.608,56,0.964,65,2.207,66,0.011,67,0.011,70,0.647,75,0.535,92,2.207,97,0.672,98,0.675,99,0.888,100,0.888,101,0.888,103,2.569,108,1.444,109,0.84,110,2.083,111,1.982,113,1.199,115,1.199,125,1.608,127,2.387,128,2.142,129,2.877,134,1.444,147,2.142,150,1.339,154,0.795,155,0.84,156,0.795,162,0.939,166,1.444,169,2.424,189,0.795,190,1.199,191,1.076,192,1.795,193,0.888,194,0.713,195,0.888,196,0.888,197,0.713,198,0.888,199,0.675,200,1.226,201,0.888,202,0.675,203,0.888,204,0.675,205,0.888,206,0.675,207,0.888,208,0.713,209,0.888,210,0.675,211,0.888,212,0.675,213,0.888,214,0.713,215,0.888,216,1.442,217,0.888,218,0.675,219,0.888,220,0.675,221,0.888,222,0.675,223,0.888,224,0.675,225,0.795,226,0.675,227,0.84,228,0.888,240,2.052,289,3.17,295,2.752,394,1.727,396,3.201,397,1.688,401,2.877,403,4.351,406,2.877,441,1.917,467,3.241,483,1.907,538,1.806,555,1.054,556,2.877,621,1.907,644,3.857,656,2.388,660,1.688,661,2.388,705,3.241,771,2.605,786,2.605,796,2.605,824,2.263,825,5.461,826,4.345,833,2.877,834,2.409,835,2.605,836,2.149,837,3.463,838,3.241,964,3.241,1055,2.149,1056,3.793,1057,3.793,1058,3.793,1059,5.458,1060,4.567,1061,3.793,1062,3.793,1063,2.207,1064,3.793,1065,3.793,1066,3.241,1067,3.793,1068,2.515,1069,2.515,1070,3.793,1071,3.793,1072,3.793,1073,3.241,1074,3.793,1075,2.515,1076,2.515,1077,3.241,1078,2.515,1079,3.793,1080,2.515,1081,2.515,1082,3.793,1083,2.515,1084,2.515,1085,2.515,1086,2.515,1087,3.793]],["title/interfaces/Office.html",[137,1.943,229,0.731]],["body/interfaces/Office.html",[2,0.266,3,0.266,4,0.232,6,0.266,16,0.021,17,1.065,18,0.44,42,0.266,53,0.804,66,0.017,67,0.017,70,0.855,71,1.872,75,0.857,76,3.026,81,1.282,86,2.068,91,3.353,132,2.705,137,3.938,150,1.77,229,1.236,492,3.536,1088,4.283,1089,6.077,1090,6.077,1091,6.077]],["title/directives/PlacesAutocompleteDirective.html",[56,0.913,226,0.964]],["body/directives/PlacesAutocompleteDirective.html",[2,0.228,3,0.228,4,0.198,6,0.228,7,1.12,9,0.922,13,1.134,15,1.325,16,0.022,17,0.829,18,0.409,19,0.997,27,1.102,30,0.748,32,0.644,42,0.228,43,0.319,44,1.479,45,1.282,46,2.541,56,1.548,66,0.016,67,0.016,75,0.776,108,1.925,109,1.43,110,1.649,125,2.032,134,1.354,142,2.451,191,1.822,226,1.479,227,1.839,273,3.658,322,2.94,338,5.161,363,4.705,389,1.944,1092,5.814,1093,3.658,1094,5.507,1095,6.427,1096,6.088,1097,4.282,1098,5.49,1099,6.922,1100,5.507,1101,5.507,1102,6.427,1103,5.507,1104,4.282,1105,4.282,1106,6.088,1107,4.282,1108,3.658,1109,4.282,1110,4.282,1111,4.282,1112,4.282,1113,4.282,1114,4.282,1115,4.282,1116,4.282]],["title/interfaces/Register.html",[229,0.731,544,2.09]],["body/interfaces/Register.html",[2,0.317,3,0.258,4,0.225,6,0.258,16,0.021,17,0.898,18,0.434,42,0.258,53,1.161,55,1.537,66,0.017,67,0.017,70,0.829,71,1.816,74,2.457,75,0.841,81,1.311,97,0.475,103,2.5,107,5.096,142,3.168,143,4.524,229,1.213,268,4.089,384,2.829,415,4.424,528,2.631,544,3.471,700,3.339,714,4.235,1117,4.154,1118,5.965,1119,5.965,1120,4.524]],["title/components/RideswipeComponent.html",[97,0.351,218,0.964]],["body/components/RideswipeComponent.html",[2,0.224,3,0.224,4,0.195,6,0.224,7,1.109,9,1.301,13,1.03,16,0.021,17,0.909,27,0.763,30,0.517,32,0.634,42,0.224,43,0.314,44,1.463,56,1.386,66,0.016,67,0.016,75,0.768,97,0.646,98,1.131,99,1.487,100,1.487,101,1.487,108,1.91,109,1.407,110,2.213,111,2.091,113,1.723,115,1.723,125,2.019,134,1.332,154,1.332,155,1.407,156,1.332,189,1.332,190,1.723,191,1.545,192,2.255,193,1.487,194,1.194,195,1.487,196,1.487,197,1.194,198,1.487,199,1.131,200,1.131,201,1.487,202,1.131,203,1.487,204,1.131,205,1.487,206,1.131,207,1.487,208,1.194,209,1.487,210,1.131,211,1.487,212,1.131,213,1.487,214,1.194,215,1.487,216,1.194,217,1.487,218,1.715,219,1.487,220,1.131,221,1.487,222,1.131,223,1.487,224,1.131,225,1.332,226,1.131,227,1.407,228,1.487,399,4.655,645,4.386,649,4.148,660,2.425,662,3.599,1121,3.599,1122,5.449,1123,5.449,1124,5.449,1125,4.212]],["title/interfaces/RouteInfo.html",[229,0.731,996,2.466]],["body/interfaces/RouteInfo.html",[2,0.273,3,0.273,4,0.238,6,0.273,16,0.021,18,0.415,26,3.121,42,0.273,66,0.018,67,0.018,70,0.877,75,0.87,86,2.251,89,5.272,229,1.255,252,2.992,413,2.436,597,3.9,716,2.992,794,4.89,995,4.68,996,4.238,1126,4.394,1127,5.143,1128,5.858,1129,6.857,1130,6.171]],["title/classes/SwipecardModel.html",[43,0.268,876,2.261]],["body/classes/SwipecardModel.html",[2,0.269,3,0.269,4,0.235,6,0.269,13,1.042,16,0.021,18,0.34,30,0.622,42,0.269,43,0.456,53,1.185,66,0.018,67,0.018,70,0.863,71,2.283,75,0.862,155,1.691,156,1.601,158,2.417,190,1.933,501,4.325,528,3.307,660,2.721,716,3.557,876,3.848,891,5.381,1131,4.325,1132,6.821,1133,5.062,1134,5.062]],["title/injectables/TokenStorage.html",[31,0.818,408,2.261]],["body/injectables/TokenStorage.html",[2,0.258,3,0.258,4,0.225,6,0.258,7,1.213,9,1.389,13,1.147,15,1.17,16,0.021,17,0.732,18,0.327,19,0.88,27,1.218,30,0.597,31,1.469,32,0.732,40,3.061,41,2.457,42,0.258,43,0.362,66,0.017,67,0.017,81,1.25,134,1.886,389,1.716,408,3.755,415,3.755,483,3.687,649,4.826,1135,3.687,1136,6.728,1137,5.965,1138,6.728,1139,4.862,1140,4.862,1141,5.965,1142,4.862,1143,4.862,1144,3.687,1145,4.154,1146,5.965,1147,4.862,1148,4.862]],["title/injectables/UploadService.html",[31,0.818,1149,2.724]],["body/injectables/UploadService.html",[2,0.219,3,0.219,4,0.304,6,0.219,7,1.092,9,1.287,13,1.12,15,0.991,16,0.022,17,0.808,18,0.361,19,0.746,27,1.242,30,0.66,31,1.361,32,0.62,40,2.592,41,2.081,42,0.219,43,0.307,48,3.986,65,2.396,66,0.015,67,0.015,75,0.757,81,0.972,86,1.302,92,2.396,103,1.726,142,1.833,155,1.375,156,1.302,166,1.302,169,2.123,233,2.396,389,1.896,506,2.828,576,2.828,660,1.833,688,3.123,935,3.123,936,4.072,1149,4.072,1150,3.518,1151,6.332,1152,6.332,1153,5.37,1154,5.37,1155,4.118,1156,5.37,1157,4.118,1158,5.975,1159,6.332,1160,4.118,1161,3.518,1162,4.118,1163,5.975,1164,4.118,1165,4.118,1166,4.118,1167,4.118,1168,4.118,1169,2.396,1170,4.118,1171,4.118,1172,4.118,1173,4.118,1174,4.118,1175,4.118,1176,4.118,1177,4.118,1178,4.118,1179,4.118,1180,5.975,1181,4.118,1182,5.37,1183,4.118,1184,4.118,1185,4.118,1186,5.37,1187,6.332,1188,4.118,1189,4.118,1190,4.118,1191,4.118]],["title/interfaces/User.html",[53,0.576,229,0.731]],["body/interfaces/User.html",[2,0.185,3,0.185,4,0.161,6,0.185,16,0.022,17,0.89,18,0.474,19,0.868,28,2.967,30,0.762,42,0.185,48,3.721,50,2.133,53,1.123,66,0.014,67,0.014,75,0.676,76,2.853,81,1.308,83,2.593,86,1.734,91,3.036,117,4.483,131,3.291,137,3.554,147,1.789,148,3.291,149,2.788,150,1.692,158,1.895,169,1.895,200,1.824,225,1.515,229,0.975,245,3.634,261,4.094,397,2.133,413,2.27,420,4.06,481,3.017,492,2.788,497,3.06,502,2.969,537,3.291,595,4.259,599,3.191,602,4.129,661,3.017,700,3.291,704,4.094,713,3.634,714,3.721,793,4.094,879,3.256,998,2.969,1192,2.969,1193,6.411,1194,5.051,1195,5.051,1196,5.912,1197,6.411,1198,4.792,1199,4.792,1200,4.792,1201,4.792,1202,4.792,1203,4.792,1204,3.476,1205,3.476,1206,3.476]],["title/interfaces/UserCard.html",[229,0.731,400,1.701]],["body/interfaces/UserCard.html",[2,0.279,3,0.17,4,0.149,6,0.17,11,1.356,16,0.022,18,0.353,20,1.598,23,1.619,30,0.789,32,0.482,39,1.512,42,0.241,43,0.239,44,0.86,45,0.959,46,1.267,50,2.015,52,1.432,53,1.142,55,1.432,66,0.013,67,0.015,70,0.546,75,0.638,81,1.131,97,0.588,108,1.432,110,0.959,111,0.909,113,1.013,115,1.013,125,1.013,127,1.691,128,1.196,139,2.017,147,1.196,150,2.014,158,1.267,162,1.196,166,1.432,169,2.47,210,0.86,229,0.921,240,2.45,247,2.288,292,1.898,330,1.734,344,2.45,389,1.131,400,2.959,441,1.619,442,2.015,486,2.679,497,2.015,538,1.267,555,1.343,602,1.864,642,3.042,646,2.017,653,2.43,657,2.2,724,2.634,740,3.789,757,3.737,781,2.2,824,2.015,834,1.517,842,1.734,870,2.43,871,2.634,873,1.864,874,2.43,877,3.982,879,1.517,880,1.734,881,1.734,882,2.634,883,2.43,884,2.634,885,2.43,886,3.055,889,3.055,890,1.864,895,2.43,896,2.737,897,2.737,898,2.737,902,2.2,904,2.2,905,2.2,906,3.109,907,3.109,908,1.864,909,4.291,910,2.2,912,2.2,915,3.789,916,2.85,917,2.017,918,1.864,919,3.868,920,3.868,921,2.2,922,3.109,923,3.592,924,2.2,925,3.109,926,3.109,927,2.2,928,4.505,929,2.2,930,2.737,931,2.737,932,2.737,933,2.737,934,2.737,935,2.43,936,2.43,937,2.737,938,2.737,939,2.017,940,2.737,941,4.505]],["title/interfaces/UserCard-1.html",[229,0.61,400,1.42,1169,1.745]],["body/interfaces/UserCard-1.html",[2,0.148,3,0.148,4,0.129,6,0.218,11,1.455,16,0.022,18,0.327,20,1.447,23,1.411,30,0.757,31,0.636,32,0.42,39,1.369,42,0.148,43,0.208,44,0.75,45,0.836,46,1.104,50,1.243,52,1.296,53,1.161,57,2.581,66,0.012,67,0.017,70,0.476,71,1.999,74,1.411,75,0.578,81,1.08,83,1.511,86,1.693,97,0.523,103,1.17,108,1.296,110,0.836,111,0.792,113,0.883,115,0.883,125,0.883,127,1.999,128,1.531,147,1.814,150,0.986,153,2.629,154,1.536,158,1.104,162,1.043,166,1.885,169,2.255,184,2.386,186,2.581,190,1.296,191,0.792,222,0.75,225,1.296,229,0.834,240,2.218,247,2.072,292,2.037,330,1.511,344,2.218,386,2.816,389,0.986,400,2.994,441,1.411,442,1.825,497,2.383,507,1.917,529,3.109,534,2.117,538,1.921,555,1.17,642,1.411,646,1.758,716,2.386,731,2.117,740,3.59,757,3.585,762,1.758,789,3.059,824,1.243,834,1.322,871,2.386,873,1.625,879,1.322,880,1.511,881,1.511,882,2.386,884,2.827,886,2.827,887,1.917,888,1.917,889,3.678,890,1.625,902,1.917,904,1.917,905,1.917,906,2.816,907,2.816,908,1.625,909,4.094,910,1.917,912,1.917,915,3.59,916,2.581,917,1.758,918,1.625,921,1.917,922,2.816,923,3.371,924,1.917,925,2.816,926,2.816,927,1.917,928,4.341,929,1.917,939,2.581,941,4.341,1063,2.386,1169,2.827,1207,2.117,1208,2.816,1209,2.385,1210,2.385,1211,2.385,1212,2.117,1213,2.117,1214,2.117,1215,2.117,1216,2.385,1217,2.117,1218,2.117,1219,2.385,1220,2.385,1221,2.385,1222,4.522,1223,2.385,1224,2.385,1225,2.117,1226,2.385,1227,4.574,1228,3.109,1229,5.094,1230,2.117,1231,3.109,1232,2.117,1233,2.385]],["title/components/UsercardComponent.html",[97,0.351,220,0.964]],["body/components/UsercardComponent.html",[2,0.253,3,0.1,4,0.176,6,0.202,7,0.616,9,0.405,11,1.426,13,1.102,15,0.914,16,0.022,17,0.837,18,0.412,19,0.687,20,1.535,23,1.918,27,0.862,28,2.053,30,0.705,31,0.689,32,0.283,39,1.011,42,0.1,43,0.14,44,0.813,45,0.564,46,0.744,50,1.347,52,1.375,53,1.095,56,0.77,66,0.009,67,0.016,68,1.293,70,0.516,71,1.623,74,1.53,75,0.427,81,0.921,83,1.019,86,0.957,97,0.561,98,0.506,99,0.665,100,0.665,101,0.665,103,1.269,108,1.2,109,0.629,110,1.986,111,1.866,113,0.957,115,0.957,125,1.375,127,1.779,128,1.623,132,1.347,134,1.506,138,3.243,147,2.143,150,1.068,153,2.352,154,1.691,155,1.786,156,1.691,158,1.719,162,0.703,166,1.2,169,2.011,189,0.595,190,0.957,191,1.516,192,1.535,193,0.665,194,0.534,195,0.665,196,0.665,197,0.534,198,0.665,199,0.506,200,1.019,201,0.665,202,0.506,203,0.665,204,0.506,205,0.665,206,0.506,207,0.665,208,0.534,209,0.665,210,0.506,211,0.665,212,0.506,213,0.665,214,0.534,215,0.665,216,0.534,217,0.665,218,0.506,219,0.665,220,1.167,221,0.665,222,0.506,223,0.665,224,0.506,225,0.595,226,0.506,227,0.629,228,0.665,247,1.53,292,1.996,330,1.019,344,3.105,389,0.665,400,1.433,441,0.951,442,1.347,497,1.935,507,2.078,528,1.638,538,2.199,555,0.789,599,2.53,613,1.095,645,2.078,652,1.905,660,0.838,707,1.608,741,1.608,758,1.293,761,2.295,763,3.243,774,2.586,794,2.986,824,1.935,834,0.892,835,1.293,839,2.586,867,4.347,868,1.293,871,2.208,873,1.761,876,3.501,878,1.608,879,0.892,880,1.019,881,1.019,882,1.761,884,2.208,886,2.208,887,1.293,888,1.293,889,2.53,890,1.095,891,1.428,892,1.608,915,3.203,916,1.905,917,2.389,918,1.095,923,2.998,947,2.078,1063,2.53,1098,4.569,1128,2.586,1169,2.53,1208,2.078,1212,2.295,1213,2.295,1214,1.428,1215,1.428,1217,4.849,1218,1.428,1228,1.428,1230,1.428,1231,1.428,1232,1.428,1234,1.608,1235,3.027,1236,3.027,1237,4.348,1238,4.348,1239,4.348,1240,4.348,1241,4.348,1242,4.348,1243,4.348,1244,4.348,1245,3.027,1246,3.796,1247,3.027,1248,3.027,1249,1.883,1250,4.763,1251,1.883,1252,3.027,1253,1.883,1254,5.348,1255,3.796,1256,1.883,1257,3.027,1258,1.883,1259,3.796,1260,4.348,1261,1.883,1262,3.714,1263,4.348,1264,1.883,1265,1.883,1266,1.883,1267,1.883,1268,5.348,1269,3.027,1270,5.348,1271,3.027,1272,1.883,1273,3.027,1274,3.027,1275,3.796,1276,4.348,1277,3.027,1278,1.883,1279,3.027,1280,1.883,1281,3.796,1282,1.883,1283,3.027,1284,3.027,1285,1.883,1286,1.883,1287,1.883,1288,1.883,1289,1.883,1290,1.883,1291,1.883,1292,1.883,1293,1.883,1294,3.027,1295,1.883,1296,1.883,1297,1.883,1298,3.027,1299,1.883,1300,1.883,1301,1.883,1302,1.883,1303,1.883,1304,1.883,1305,1.883,1306,1.883,1307,1.883,1308,1.883,1309,1.883,1310,3.027,1311,1.883,1312,1.883,1313,1.883,1314,1.883,1315,1.883,1316,3.027,1317,5.088,1318,3.027,1319,1.883,1320,4.348,1321,1.883,1322,1.883,1323,1.883,1324,1.883,1325,4.348,1326,4.348,1327,3.027,1328,1.883,1329,3.027,1330,1.883]],["title/components/UsermatchwebComponent.html",[97,0.351,222,0.964]],["body/components/UsermatchwebComponent.html",[2,0.115,3,0.115,4,0.101,6,0.221,7,0.689,9,0.467,11,1.528,13,0.963,15,1.133,16,0.022,17,0.85,18,0.364,19,0.852,20,1.661,23,1.096,27,0.852,30,0.694,31,0.771,32,0.326,39,1.131,42,0.115,43,0.162,44,0.909,45,0.649,46,0.857,50,1.507,52,1.488,53,1.148,56,0.861,57,1.365,66,0.01,67,0.018,70,0.87,71,1.264,74,1.711,75,0.477,81,0.613,83,1.173,86,1.848,97,0.587,98,0.582,99,0.766,100,0.766,101,0.766,103,1.419,108,1.317,109,0.724,110,2.036,111,1.915,113,1.07,115,1.07,125,1.488,127,2.11,128,1.757,134,1.488,147,1.906,150,1.195,153,2.253,154,1.786,155,0.724,156,0.686,158,1.339,162,0.81,166,1.71,169,2.018,184,1.97,186,1.365,189,0.686,190,1.317,191,1.181,192,1.661,193,0.766,194,0.615,195,0.766,196,0.766,197,0.615,198,0.766,199,0.582,200,0.582,201,0.766,202,0.582,203,0.766,204,0.582,205,0.766,206,0.582,207,0.766,208,0.615,209,0.766,210,0.582,211,0.766,212,0.582,213,0.766,214,0.615,215,0.766,216,0.615,217,0.766,218,0.582,219,0.766,220,0.582,221,0.766,222,1.264,223,0.766,224,0.582,225,1.07,226,0.582,227,0.724,228,0.766,229,0.441,240,1.173,247,1.711,292,2.139,330,1.173,344,1.832,386,1.489,389,0.766,400,3.053,441,1.096,442,1.507,445,2.568,497,1.854,507,2.325,529,3.569,534,1.645,538,1.646,555,0.909,642,1.096,646,2.131,716,1.262,731,3.569,740,2.131,757,3.288,762,2.131,789,2.622,824,2.094,834,1.027,868,1.489,871,2.423,873,1.97,879,1.027,880,1.173,881,1.173,882,1.97,884,2.423,886,2.423,887,1.489,888,1.489,889,3.795,890,1.262,899,2.892,900,2.892,902,2.325,904,2.325,905,2.325,906,3.232,907,3.232,908,1.97,909,3.232,910,2.325,912,2.325,915,3.213,916,2.131,917,1.365,918,1.262,921,1.489,922,2.325,923,2.962,924,1.489,925,2.325,926,2.325,927,1.489,928,4.014,929,1.489,939,2.131,941,4.014,942,4.02,943,4.02,944,2.892,945,4.02,946,2.892,947,2.325,948,2.892,1063,2.738,1169,2.423,1207,1.645,1208,1.489,1209,2.892,1210,2.892,1211,2.892,1212,1.645,1213,2.568,1214,1.645,1215,1.645,1216,1.853,1217,1.645,1218,1.645,1219,2.892,1220,2.892,1221,2.892,1222,4.433,1223,2.892,1224,2.892,1225,1.645,1226,1.853,1227,4.02,1228,2.568,1229,4.621,1230,1.645,1231,2.568,1232,1.645,1233,1.853,1331,3.386,1332,2.169,1333,2.169,1334,2.169,1335,2.169,1336,2.169,1337,3.386]],["title/components/ViewProfileComponent.html",[97,0.351,224,0.964]],["body/components/ViewProfileComponent.html",[2,0.258,3,0.08,4,0.07,6,0.08,7,0.514,9,0.326,10,0.88,11,1.14,13,1.1,15,0.364,16,0.022,17,1.013,18,0.394,19,0.274,20,1.151,27,0.881,30,0.563,31,0.576,32,0.228,39,0.505,42,0.08,43,0.113,44,0.679,45,0.453,52,1.204,53,1.152,54,1.198,55,1.204,56,0.643,57,1.592,66,0.007,67,0.013,70,0.431,71,0.944,74,2.577,75,0.357,76,2.559,77,3.915,81,1.185,83,2.96,91,1.198,92,2.216,97,0.518,98,0.406,99,0.534,100,0.534,101,0.534,103,1.921,108,1.03,109,0.505,110,1.9,111,1.782,112,1.737,113,0.8,115,0.8,117,3.475,119,3.915,120,3.254,123,3.254,125,1.204,127,1.904,128,1.904,131,1.039,134,1.538,137,3.363,142,0.673,147,1.904,148,3.147,149,2.216,150,0.893,153,2.061,154,1.777,155,0.845,156,0.8,158,1.812,162,0.565,163,1.292,166,0.478,167,1.292,169,2.016,174,2.161,179,1.292,180,1.292,186,2.398,187,2.161,189,0.478,190,1.886,191,0.717,192,1.345,193,0.534,194,0.429,195,0.534,196,0.534,197,0.429,198,0.534,199,0.406,200,1.138,201,0.534,202,0.406,203,0.534,204,0.406,205,0.534,206,0.406,207,0.534,208,0.429,209,0.534,210,0.406,211,0.534,212,0.406,213,0.534,214,0.429,215,0.534,216,0.429,217,0.534,218,0.406,219,0.534,220,0.406,221,0.534,222,0.406,223,0.534,224,1.023,225,1.676,226,0.406,227,0.505,228,0.534,243,1.592,246,4.912,267,3.254,268,3.877,295,1.368,353,4.465,355,1.292,356,1.292,357,1.292,386,3.948,411,3.183,413,1.804,414,1.918,420,3.757,445,1.147,453,1.292,455,1.292,459,2.785,461,1.292,463,1.292,465,1.292,466,1.292,486,2.27,488,2.616,490,2.616,492,1.471,511,2.161,512,2.161,514,2.161,532,5.368,537,1.737,538,1,555,0.634,589,1.918,599,2.666,602,2.83,613,1.471,660,1.126,661,1.592,713,4.149,714,2.885,715,4.912,718,2.161,720,1.918,723,3.254,724,3.345,746,2.161,750,2.161,752,2.161,758,3.147,769,3.254,824,1.695,833,1.147,834,0.716,835,1.039,842,2.759,843,1.918,879,2.51,880,0.818,908,2.216,939,1.592,947,1.737,956,2.161,967,1.918,1063,1.471,1066,3.254,1077,3.915,1120,1.918,1194,3.915,1195,3.915,1208,1.737,1338,5.555,1339,1.292,1340,5.75,1341,2.529,1342,2.529,1343,3.809,1344,3.809,1345,3.809,1346,3.809,1347,3.809,1348,3.809,1349,2.529,1350,1.512,1351,1.512,1352,1.512,1353,1.512,1354,1.512,1355,2.529,1356,1.512,1357,2.529,1358,2.529,1359,1.512,1360,2.529,1361,2.529,1362,1.512,1363,5.75,1364,1.512,1365,2.529,1366,1.512,1367,1.512,1368,2.529,1369,1.512,1370,1.512,1371,1.512,1372,1.512,1373,2.529,1374,1.512,1375,2.529,1376,1.512,1377,1.512,1378,1.512,1379,2.529,1380,1.512,1381,2.529,1382,1.512,1383,2.529,1384,1.512,1385,1.512,1386,1.512,1387,1.512,1388,2.529,1389,1.512,1390,1.512,1391,1.512,1392,3.259,1393,1.512,1394,1.512,1395,1.512,1396,1.512,1397,1.512,1398,1.512,1399,1.512,1400,1.512,1401,1.512,1402,1.512,1403,3.259,1404,1.512,1405,1.512,1406,1.512,1407,2.529,1408,1.512,1409,1.512,1410,1.512,1411,1.512,1412,1.512,1413,3.259,1414,1.512,1415,1.512,1416,1.512,1417,1.512,1418,1.512,1419,1.512,1420,1.512,1421,1.512,1422,1.512,1423,1.512,1424,1.512,1425,1.512,1426,5.75,1427,5.75,1428,2.529,1429,2.529,1430,2.529,1431,2.529,1432,1.512,1433,2.529,1434,2.529,1435,2.529,1436,1.512]],["title/coverage.html",[1437,4.187]],["body/coverage.html",[4,0.166,11,1.071,16,0.022,18,0.24,31,1.508,43,0.446,53,0.573,56,0.909,66,0.014,67,0.014,68,2.456,69,3.056,97,0.703,98,0.96,102,3.056,132,1.592,137,1.935,142,1.592,194,1.014,197,1.014,199,0.96,200,0.96,202,0.96,204,0.96,206,0.96,208,1.014,210,0.96,212,0.96,214,1.014,216,1.014,218,0.96,220,0.96,222,0.96,224,0.96,226,0.96,229,1.407,230,2.456,231,2.712,232,2.712,264,3.056,289,1.807,291,2.251,292,1.499,316,2.456,338,2.712,350,2.456,353,2.456,366,2.712,367,3.056,400,2.315,405,3.056,408,2.251,428,3.076,473,3.056,484,3.056,503,3.056,504,3.056,538,2.801,544,2.081,548,3.056,595,2.456,596,2.712,597,3.706,640,3.056,663,2.712,664,3.056,691,3.056,692,3.056,711,2.712,818,3.056,864,3.056,876,2.251,895,3.706,949,3.056,955,3.056,980,3.056,981,4.222,989,2.456,996,2.456,1000,3.056,1005,3.056,1011,3.056,1055,3.056,1088,3.056,1092,3.056,1093,3.056,1117,3.056,1121,3.056,1126,3.056,1131,3.056,1135,3.706,1144,2.712,1149,2.712,1150,3.056,1192,3.056,1207,3.706,1234,3.056,1338,3.056,1339,3.056,1437,3.056,1438,3.577,1439,3.577,1440,5.984,1441,3.577,1442,4.887,1443,3.577,1444,7.329,1445,3.577,1446,3.577,1447,6.467,1448,3.577,1449,4.887,1450,4.887,1451,5.984,1452,3.577,1453,3.577,1454,3.577,1455,3.577,1456,3.577,1457,3.577,1458,3.577,1459,3.577,1460,3.577,1461,4.887,1462,5.567,1463,3.577,1464,3.577,1465,3.577,1466,3.577,1467,3.577,1468,3.577,1469,3.577,1470,3.577,1471,3.577,1472,4.751,1473,6.265,1474,3.056,1475,3.056,1476,4.175,1477,3.056,1478,3.577]],["title/dependencies.html",[280,2.046,1479,2.999]],["body/dependencies.html",[16,0.022,32,0.751,33,2.523,37,3.064,66,0.017,67,0.017,280,2.365,282,3.787,298,5.18,299,4.163,305,4.266,308,3.787,309,4.266,322,3.429,343,4.266,344,2.702,345,4.266,379,4.266,918,2.906,1108,4.266,1161,4.266,1480,4.994,1481,4.994,1482,7.274,1483,4.994,1484,6.063,1485,4.994,1486,4.994,1487,4.994,1488,4.994,1489,4.994,1490,4.994,1491,4.994,1492,4.994,1493,4.994,1494,4.994,1495,4.994,1496,4.994,1497,4.994,1498,4.994,1499,4.994,1500,4.994,1501,4.994,1502,4.994,1503,4.994,1504,4.994]],["title/miscellaneous/enumerations.html",[1505,1.745,1506,3.69]],["body/miscellaneous/enumerations.html",[2,0.253,6,0.183,16,0.022,18,0.367,23,2.977,27,0.624,53,0.764,66,0.014,67,0.014,71,2.039,74,1.742,91,1.633,112,3.273,150,1.217,156,2.393,231,2.615,232,3.614,233,2.006,251,2.17,255,3.614,256,2.368,259,2.946,260,2.946,263,4.071,413,1.633,486,2.121,522,2.368,596,2.615,599,2.006,703,2.946,735,4.071,736,4.071,737,4.071,789,3,842,2.578,855,2.946,879,2.257,1120,3.614,1222,4.142,1225,2.615,1505,2.006,1506,2.946,1507,3.448,1508,4.766,1509,3.448,1510,4.766,1511,3.448,1512,3.448,1513,3.448,1514,3.448,1515,3.448,1516,3.448,1517,3.448,1518,3.448,1519,2.946,1520,3.448,1521,4.766,1522,3.448,1523,3.448,1524,3.448,1525,3.448,1526,3.448,1527,3.448,1528,3.448,1529,3.448,1530,3.448,1531,3.448,1532,3.448,1533,3.448,1534,3.448,1535,3.448,1536,3.448,1537,3.448,1538,3.448,1539,3.448,1540,3.448,1541,3.448,1542,3.448,1543,3.448,1544,3.448,1545,3.448,1546,3.448,1547,3.448,1548,3.448,1549,3.448,1550,3.448,1551,3.448,1552,3.448,1553,3.448,1554,3.448,1555,3.448,1556,3.448,1557,3.448,1558,3.448,1559,3.448,1560,3.448,1561,3.448,1562,3.448,1563,3.448,1564,3.448,1565,3.448,1566,3.448,1567,3.448,1568,3.448,1569,3.448,1570,3.448,1571,3.448,1572,3.448,1573,3.448,1574,3.448,1575,3.448,1576,3.448,1577,3.448,1578,3.448,1579,3.448,1580,3.448,1581,3.448,1582,3.448,1583,3.448,1584,3.448,1585,3.448,1586,3.448,1587,3.448,1588,3.448,1589,3.448,1590,3.448,1591,3.448,1592,3.448,1593,3.448,1594,3.448,1595,3.448,1596,2.946,1597,3.448,1598,3.448,1599,3.448,1600,3.448,1601,3.448,1602,3.448,1603,3.448,1604,3.448,1605,3.448,1606,3.448,1607,3.448,1608,3.448,1609,3.448,1610,3.448,1611,3.448,1612,3.448,1613,3.448,1614,3.448,1615,3.448,1616,3.448,1617,3.448,1618,3.448,1619,3.448,1620,3.448]],["title/index.html",[6,0.159,702,2.06,967,2.275]],["body/index.html",[3,0.206,4,0.179,16,0.02,17,0.583,41,1.956,55,1.954,56,0.984,66,0.015,67,0.015,70,0.879,96,3.307,97,0.566,111,1.098,142,2.751,149,3.596,182,4.687,237,3.245,239,3.54,295,2.095,308,5.124,372,3.307,411,3.931,413,1.834,481,3.245,527,3.307,590,3.91,634,3.307,652,2.437,655,2.659,688,2.936,689,3.307,693,3.307,720,2.936,724,3,730,3.307,756,3.307,767,3.307,771,2.659,801,3.307,843,2.936,844,3.307,851,4.952,852,3.307,908,3.931,963,4.405,992,3.307,995,2.936,1073,3.307,1519,4.405,1596,3.307,1621,3.871,1622,5.156,1623,5.796,1624,5.796,1625,3.871,1626,3.871,1627,5.156,1628,6.756,1629,3.871,1630,6.619,1631,3.871,1632,3.871,1633,3.871,1634,6.437,1635,3.871,1636,3.871,1637,3.871,1638,5.156,1639,3.871,1640,3.871,1641,3.307,1642,7.125,1643,2.936,1644,5.156,1645,3.871,1646,3.871,1647,5.796,1648,5.156,1649,7.018,1650,3.871,1651,3.871,1652,6.437,1653,5.156,1654,5.796,1655,3.871,1656,3.871,1657,5.796,1658,3.871,1659,5.796,1660,3.871,1661,6.437,1662,3.871,1663,3.871,1664,3.871,1665,3.871,1666,3.871,1667,3.871,1668,5.156,1669,3.871,1670,3.871,1671,3.871,1672,3.871,1673,3.871,1674,3.871,1675,6.437,1676,5.156,1677,5.156,1678,3.871,1679,3.871,1680,3.871]],["title/modules.html",[278,2.652]],["body/modules.html",[16,0.019,66,0.019,67,0.019,278,3.097,279,3.931,288,3.603,299,3.931,505,4.341,522,3.931,786,4.513,1681,5.724,1682,5.724]],["title/overview.html",[1643,3.717]],["body/overview.html",[0,3.128,11,1.79,16,0.021,26,1.836,31,0.939,42,0.219,43,0.307,56,1.049,66,0.015,67,0.015,97,0.403,98,1.606,184,2.4,189,1.304,194,1.696,197,1.945,199,1.606,202,1.606,204,1.606,206,1.606,208,1.696,210,1.606,212,1.606,214,1.696,216,1.696,218,1.606,220,1.606,222,1.606,224,1.606,226,1.606,229,0.839,252,2.4,254,3.764,278,2.908,279,5.209,280,1.954,281,3.128,282,3.128,283,3.524,284,3.524,285,3.524,286,3.524,287,3.524,288,3.764,289,3.022,290,4.106,291,3.764,292,2.506,293,4.592,294,3.524,295,2.232,1169,3.128,1643,3.128,1683,4.125,1684,4.125,1685,4.125,1686,4.125,1687,4.125]],["title/routes.html",[26,2.181]],["body/routes.html",[16,0.019,26,2.599,66,0.019,67,0.019]],["title/miscellaneous/typealiases.html",[1505,1.745,1688,4.319]],["body/miscellaneous/typealiases.html",[6,0.291,16,0.018,18,0.43,48,3.443,55,1.729,66,0.018,67,0.018,75,0.771,81,1.159,397,2.434,470,4.673,497,3.02,499,4.148,850,4.673,1063,3.182,1262,4.673,1505,3.182,1689,5.469,1690,5.469,1691,6.996,1692,5.469,1693,5.469,1694,5.469,1695,5.469,1696,5.469,1697,5.469,1698,5.469]],["title/miscellaneous/variables.html",[1472,3.276,1505,1.745]],["body/miscellaneous/variables.html",[6,0.262,16,0.021,18,0.455,65,3.503,66,0.017,67,0.017,81,1.09,155,2.259,156,2.138,428,4.44,528,3.659,660,2.197,711,4.926,1135,3.744,1144,4.926,1145,4.217,1472,3.744,1474,4.217,1475,4.217,1476,4.217,1477,5.55,1505,2.872,1641,5.143,1699,6.02,1700,4.937,1701,4.937,1702,4.937,1703,4.937,1704,4.937,1705,6.496,1706,6.02,1707,6.02,1708,6.02,1709,6.02,1710,6.02,1711,6.02,1712,4.937]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":538,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1169,"title":{"interfaces/UserCard-1.html":{}},"body":{"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["1.0.11",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1626,"title":{},"body":{"index.html":{}}}],["1.amazonaws.com",{"_index":1188,"title":{},"body":{"injectables/UploadService.html":{}}}],["1.amazonaws.com/rydeforce/rydeforc",{"_index":937,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["1.amazonaws.com:2222",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1686,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["100000000000",{"_index":1172,"title":{},"body":{"injectables/UploadService.html":{}}}],["11/11",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1687,"title":{},"body":{"overview.html":{}}}],["13/14",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["13/30",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1426,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["153",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1683,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["174",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["2.321.0",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1291,"title":{},"body":{"components/UsercardComponent.html":{}}}],["22/22",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["234.comput",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{}}}],["3",{"_index":1226,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["3.2.2",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1685,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["43/48",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["56/60",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["6.1.8",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1684,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1301,"title":{},"body":{"components/UsercardComponent.html":{}}}],["8/10",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":906,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["92",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["abov",{"_index":770,"title":{},"body":{"components/HowToComponent.html":{}}}],["access",{"_index":50,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["accessguard",{"_index":1,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{}}}],["accesskeyid",{"_index":1164,"title":{},"body":{"injectables/UploadService.html":{}}}],["accompani",{"_index":234,"title":{},"body":{"interfaces/ApiError.html":{}}}],["accordingli",{"_index":659,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["account",{"_index":700,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["account'",{"_index":775,"title":{},"body":{"components/HowToComponent.html":{}}}],["account\\'",{"_index":803,"title":{},"body":{"components/HowToComponent.html":{}}}],["accountinfo",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accountinfo'},{'nam",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["accountinfocompon",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":1254,"title":{},"body":{"components/UsercardComponent.html":{}}}],["activ",{"_index":1193,"title":{},"body":{"interfaces/User.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AccessGuard.html":{}}}],["actual",{"_index":499,"title":{},"body":{"classes/Car.html":{},"interfaces/Marker.html":{},"miscellaneous/typealiases.html":{}}}],["actual_compon",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["add",{"_index":590,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"index.html":{}}}],["addcartous",{"_index":517,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addit",{"_index":241,"title":{},"body":{"interfaces/ApiError.html":{}}}],["address",{"_index":76,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["address2",{"_index":77,"title":{},"body":{"classes/AddressModel.html":{},"components/ViewProfileComponent.html":{}}}],["addressid",{"_index":78,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressmodel",{"_index":68,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["addressselect",{"_index":1096,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["admin",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["admin.component.css",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":98,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administr",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Register.html":{}}}],["adress",{"_index":73,"title":{},"body":{"classes/AddressModel.html":{}}}],["again",{"_index":797,"title":{},"body":{"components/HowToComponent.html":{}}}],["agm/cor",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasybxwxgwzxhyvz9jyn9srhggozi7vcu5g3g",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["ak",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["akiairzg4tk6eblzv7ga",{"_index":1165,"title":{},"body":{"injectables/UploadService.html":{}}}],["al",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alabama",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alaska",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1689,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["allpost",{"_index":1417,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["alow",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["alreadi",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["amobil",{"_index":658,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["amount",{"_index":1665,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1623,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":918,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["angular/compil",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/source_map",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{}}}],["angular/cor",{"_index":32,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":33,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["animate(100",{"_index":1294,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(200",{"_index":1303,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(400",{"_index":929,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["animateonscrollmodul",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["animateonscrollmodule.forroot",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["animst",{"_index":1237,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animthumbst",{"_index":1238,"title":{},"body":{"components/UsercardComponent.html":{}}}],["apart",{"_index":718,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["api",{"_index":251,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"miscellaneous/enumerations.html":{}}}],["api/us",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["apierror",{"_index":230,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["apierror.statu",{"_index":632,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierror.typ",{"_index":636,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierrortyp",{"_index":255,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apierrortype.notloggedin",{"_index":637,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apikey",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["apiurl",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["app.compon",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/user.model",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["app/services/api/us",{"_index":38,"title":{},"body":{"guards/AccessGuard.html":{}}}],["app/services/auth.servic",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":197,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":796,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{}}}],["appmodul",{"_index":279,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":366,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appplacesautocomplet",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["appropri",{"_index":524,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["approutingmodul",{"_index":288,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approv",{"_index":861,"title":{},"body":{"components/LandingComponent.html":{}}}],["ar",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":847,"title":{},"body":{"components/LandingComponent.html":{}}}],["arizona",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arkansa",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["around",{"_index":1004,"title":{},"body":{"interfaces/Marker.html":{}}}],["array",{"_index":247,"title":{},"body":{"interfaces/ApiError.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["artifact",{"_index":1635,"title":{},"body":{"index.html":{}}}],["assets/icons/thumbsdown.png",{"_index":1281,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assets/icons/thumbsup.png",{"_index":1319,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assign",{"_index":1176,"title":{},"body":{"injectables/UploadService.html":{}}}],["associ",{"_index":257,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["assum",{"_index":1651,"title":{},"body":{"index.html":{}}}],["async",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attempt",{"_index":49,"title":{},"body":{"guards/AccessGuard.html":{}}}],["attribut",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth",{"_index":51,"title":{},"body":{"guards/AccessGuard.html":{}}}],["authent",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["authenticate(email",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator(email",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":815,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservic",{"_index":289,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1145,"title":{},"body":{"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["autocomplet",{"_index":1113,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1115,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.direct",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete.directive.t",{"_index":1093,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["autocomplete.directive.ts:10",{"_index":1107,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:13",{"_index":1100,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:19",{"_index":1104,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:24",{"_index":1105,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete/plac",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["automat",{"_index":634,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["avail",{"_index":522,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["avatar",{"_index":1316,"title":{},"body":{"components/UsercardComponent.html":{}}}],["avoid",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aw",{"_index":1161,"title":{},"body":{"injectables/UploadService.html":{},"dependencies.html":{}}}],["await",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["await/async",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["az",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b",{"_index":1648,"title":{},"body":{"index.html":{}}}],["back",{"_index":757,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["backend",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["bar",{"_index":772,"title":{},"body":{"components/HowToComponent.html":{}}}],["barebon",{"_index":1127,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["base",{"_index":1673,"title":{},"body":{"index.html":{}}}],["batch",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["batchend",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["be",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["bearer",{"_index":816,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["begin",{"_index":1177,"title":{},"body":{"injectables/UploadService.html":{}}}],["best",{"_index":1666,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":644,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{}}}],["big",{"_index":776,"title":{},"body":{"components/HowToComponent.html":{}}}],["bio",{"_index":947,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["biographi",{"_index":723,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["blablablabla",{"_index":948,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["block",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["blue",{"_index":777,"title":{},"body":{"components/HowToComponent.html":{}}}],["bodi",{"_index":1174,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["bootstrap",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["both",{"_index":744,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["branch",{"_index":1649,"title":{},"body":{"index.html":{}}}],["brand",{"_index":747,"title":{},"body":{"components/HowToComponent.html":{}}}],["bring",{"_index":787,"title":{},"body":{"components/HowToComponent.html":{}}}],["brows",{"_index":786,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"modules.html":{}}}],["browser",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":373,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["btncarinfo",{"_index":510,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["btoa(this.officeobject",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{}}}],["bucket",{"_index":1163,"title":{},"body":{"injectables/UploadService.html":{}}}],["build",{"_index":1634,"title":{},"body":{"index.html":{}}}],["burden",{"_index":854,"title":{},"body":{"components/LandingComponent.html":{}}}],["button",{"_index":556,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["c.foreach(el",{"_index":565,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.id",{"_index":591,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.make",{"_index":592,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.model",{"_index":593,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.year",{"_index":594,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["ca",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":47,"title":{},"body":{"guards/AccessGuard.html":{}}}],["calcul",{"_index":993,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["california",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["call",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/UsercardComponent.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canactivate(rout",{"_index":21,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canedit",{"_index":1343,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["car",{"_index":200,"title":{"classes/Car.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["car.model",{"_index":1205,"title":{},"body":{"interfaces/User.html":{}}}],["card",{"_index":889,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["card.fac",{"_index":941,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["card.user.firstnam",{"_index":893,"title":{},"body":{"components/LikesComponent.html":{}}}],["carmak",{"_index":511,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carmodel",{"_index":512,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carobject",{"_index":513,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carousel",{"_index":819,"title":{},"body":{"components/LandingComponent.html":{}}}],["carpool",{"_index":845,"title":{},"body":{"components/LandingComponent.html":{}}}],["carregistrationcompon",{"_index":199,"title":{"components/CarRegistrationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caryear",{"_index":514,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["catcherror",{"_index":34,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":623,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(_",{"_index":62,"title":{},"body":{"guards/AccessGuard.html":{}}}],["center",{"_index":1260,"title":{},"body":{"components/UsercardComponent.html":{}}}],["certain",{"_index":1696,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chang",{"_index":908,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["charact",{"_index":1427,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["check",{"_index":655,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["checkifloggedin",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checkout",{"_index":1647,"title":{},"body":{"index.html":{}}}],["cheifli",{"_index":485,"title":{},"body":{"classes/Car.html":{}}}],["choos",{"_index":740,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["chose",{"_index":748,"title":{},"body":{"components/HowToComponent.html":{}}}],["circl",{"_index":846,"title":{},"body":{"components/LandingComponent.html":{}}}],["circlemanag",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["citi",{"_index":79,"title":{},"body":{"classes/AddressModel.html":{}}}],["class",{"_index":43,"title":{"classes/AddressModel.html":{},"classes/AppPage.html":{},"classes/Car.html":{},"classes/SwipecardModel.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":534,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["cli",{"_index":1624,"title":{},"body":{"index.html":{}}}],["click",{"_index":701,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["client",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["closer",{"_index":795,"title":{},"body":{"components/HowToComponent.html":{}}}],["cluster_appmodul",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":96,"title":{},"body":{"classes/AddressModel.html":{},"index.html":{}}}],["colorado",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["come",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":1010,"title":{},"body":{"interfaces/Marker.html":{}}}],["commit",{"_index":1652,"title":{},"body":{"index.html":{}}}],["common",{"_index":1089,"title":{},"body":{"interfaces/Office.html":{}}}],["commonmodul",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["compani",{"_index":540,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{}}}],["compat",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":1257,"title":{},"body":{"components/UsercardComponent.html":{}}}],["complex",{"_index":919,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["compnent",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compoennt",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["compon",{"_index":97,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["components/accountinfo/accountinfo.compon",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin/admin.compon",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/car",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/favorites/favorites.compon",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/how",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing/landing.compon",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/likes/likes.compon",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["components/likesmatchweb/likesmatchweb.compon",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map.compon",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.compon",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rideswipe/rideswipe.compon",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usercard/usercard.compon",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usermatchweb/usermatchweb.compon",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["components/view",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":715,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["confirmpassword",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/ViewProfileComponent.html":{}}}],["conflict",{"_index":1668,"title":{},"body":{"index.html":{}}}],["congratul",{"_index":764,"title":{},"body":{"components/HowToComponent.html":{}}}],["connecticut",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.error('network",{"_index":630,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log",{"_index":687,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log(",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"data2",{"_index":1215,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log('befor",{"_index":1191,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('car",{"_index":572,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('data",{"_index":1307,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log('geocod",{"_index":685,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log('got",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('gotten",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('her",{"_index":933,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('in",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('loggeddata2",{"_index":934,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('nop",{"_index":1414,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log('print",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sav",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('successfulli",{"_index":1183,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('ther",{"_index":1181,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('thi",{"_index":930,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('upload",{"_index":1186,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(data",{"_index":932,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data2",{"_index":885,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3",{"_index":1309,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(e.messag",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(environment.apiurl",{"_index":1048,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["console.log(ev",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(param",{"_index":1184,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(posts.results[0].id",{"_index":1418,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(this.currentus",{"_index":835,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["console.log(this.currentuser.id",{"_index":1322,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.swipecards[this.currentindex].user.id",{"_index":1323,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.userservice.getofficebylink(this.currentuser.office).subscribe().tostr",{"_index":1385,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(userlink",{"_index":1308,"title":{},"body":{"components/UsercardComponent.html":{}}}],["const",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constant",{"_index":1273,"title":{},"body":{"components/UsercardComponent.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(authservic",{"_index":609,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(elref",{"_index":1097,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(http",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["constructor(matchservic",{"_index":868,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(priv",{"_index":45,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(tokenstorag",{"_index":808,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(userservic",{"_index":10,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contact",{"_index":599,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contactinfo",{"_index":595,"title":{"interfaces/ContactInfo.html":{}},"body":{"interfaces/ContactInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["contactinfotyp",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contain",{"_index":773,"title":{},"body":{"components/HowToComponent.html":{}}}],["content",{"_index":1358,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["context",{"_index":1477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.servic",{"_index":39,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["controller.service.t",{"_index":981,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["controller.service.ts:17",{"_index":986,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:18",{"_index":1028,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:27",{"_index":1037,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:29",{"_index":991,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:38",{"_index":1035,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:49",{"_index":1040,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:61",{"_index":1045,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:69",{"_index":1026,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:79",{"_index":1022,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:89",{"_index":1042,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:9",{"_index":984,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["conveni",{"_index":253,"title":{},"body":{"interfaces/ApiError.html":{}}}],["core",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":250,"title":{},"body":{"interfaces/ApiError.html":{}}}],["coverag",{"_index":1437,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{}}}],["credenti",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["ct",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["currentindex",{"_index":1239,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentrol",{"_index":1344,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["currentswipecard",{"_index":1240,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.firstnam",{"_index":1326,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.lastnam",{"_index":1327,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentus",{"_index":824,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["cuser",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["data2",{"_index":884,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3",{"_index":890,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3.photourl",{"_index":886,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["databas",{"_index":492,"title":{},"body":{"classes/Car.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date().getfullyear",{"_index":588,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["date(sessionstorage.getitem('batchend')).tolocaledatestr",{"_index":1390,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dateformatpip",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["datelocationencrypt",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{}}}],["day",{"_index":1365,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dc",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dd't'hh:mm:ss.sss'z",{"_index":1201,"title":{},"body":{"interfaces/User.html":{}}}],["de",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decent",{"_index":1664,"title":{},"body":{"index.html":{}}}],["declar",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":1274,"title":{},"body":{"components/UsercardComponent.html":{}}}],["default",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["degre",{"_index":907,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["delawar",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demonstr",{"_index":870,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["depend",{"_index":280,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":70,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["deseri",{"_index":1029,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["desktop",{"_index":646,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["detail",{"_index":238,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{}}}],["detect",{"_index":1667,"title":{},"body":{"index.html":{}}}],["determin",{"_index":793,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["dev",{"_index":1630,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1627,"title":{},"body":{"index.html":{}}}],["devic",{"_index":657,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["devif",{"_index":1670,"title":{},"body":{"index.html":{}}}],["direct",{"_index":56,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/plac",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1633,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1638,"title":{},"body":{"index.html":{}}}],["discord",{"_index":738,"title":{},"body":{"components/HowToComponent.html":{}}}],["dislik",{"_index":789,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dislikedriv",{"_index":1012,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dislikedriver(riderid",{"_index":1020,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["display",{"_index":694,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["dist",{"_index":1637,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":794,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["distinguish",{"_index":643,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["districtofcolumbia",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":1276,"title":{},"body":{"components/UsercardComponent.html":{}}}],["document",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["document.getelementbyid(\"profilepic\").setattribute(\"src\",this.currentuser.photourl",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid('address').removeattribute('dis",{"_index":1398,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('batchend').removeattribute('dis",{"_index":1399,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('batchend').setattribute('typ",{"_index":1400,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('confirmpassword').removeattribute('dis",{"_index":1397,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('currentoffice').style.display",{"_index":1401,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('currentoffice').textcont",{"_index":1386,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('edit').style.display",{"_index":1404,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('email').removeattribute('dis",{"_index":1395,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessage').removeattribute('hidden",{"_index":1406,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessagelogin",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["document.getelementbyid('firstname').removeattribute('dis",{"_index":1393,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('lastname').removeattribute('dis",{"_index":1394,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('password').removeattribute('dis",{"_index":1396,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('passworderror').style.display",{"_index":1424,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('selectoffice').style.display",{"_index":1402,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('submit').style.display",{"_index":1405,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dom",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["done",{"_index":741,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["draggabl",{"_index":1001,"title":{},"body":{"interfaces/Marker.html":{}}}],["driver",{"_index":486,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["driver'",{"_index":782,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver/passeng",{"_index":785,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver\\'",{"_index":804,"title":{},"body":{"components/HowToComponent.html":{}}}],["driverid",{"_index":1021,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dropdown",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["due",{"_index":635,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{}}}],["dummi",{"_index":1212,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["durat",{"_index":1128,"title":{},"body":{"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["durrent",{"_index":1355,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dynam",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{}}}],["e.g",{"_index":1090,"title":{},"body":{"interfaces/Office.html":{}}}],["e.messag",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2",{"_index":1679,"title":{},"body":{"index.html":{}}}],["e2e/app.po.t",{"_index":367,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":371,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":370,"title":{},"body":{"classes/AppPage.html":{}}}],["earli",{"_index":1669,"title":{},"body":{"index.html":{}}}],["earth",{"_index":950,"title":{},"body":{"interfaces/Location.html":{}}}],["east",{"_index":936,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["east/west",{"_index":954,"title":{},"body":{"interfaces/Location.html":{}}}],["edit",{"_index":1340,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["effort",{"_index":726,"title":{},"body":{"components/HowToComponent.html":{}}}],["element",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["element(by.css('app",{"_index":374,"title":{},"body":{"classes/AppPage.html":{}}}],["element.owner.substring(7",{"_index":567,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["elementref",{"_index":1098,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["elref",{"_index":1101,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["elref.nativeel",{"_index":1110,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["email",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["employe",{"_index":729,"title":{},"body":{"components/HowToComponent.html":{}}}],["employer'",{"_index":858,"title":{},"body":{"components/LandingComponent.html":{}}}],["employer\\'",{"_index":863,"title":{},"body":{"components/LandingComponent.html":{}}}],["empti",{"_index":246,"title":{},"body":{"interfaces/ApiError.html":{},"components/ViewProfileComponent.html":{}}}],["enabl",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["encrypt",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationd",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationdate}}{{registrationkey",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{}}}],["end",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["endflipcard",{"_index":899,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["endflipcard(card",{"_index":902,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["endpoint",{"_index":262,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MapsControllerService.html":{}}}],["enjoy",{"_index":849,"title":{},"body":{"components/LandingComponent.html":{}}}],["ensur",{"_index":536,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["enter",{"_index":721,"title":{},"body":{"components/HowToComponent.html":{}}}],["entri",{"_index":600,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["enum",{"_index":258,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enumer",{"_index":1506,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["err",{"_index":1180,"title":{},"body":{"injectables/UploadService.html":{}}}],["err.error",{"_index":624,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":633,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":233,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["error.model",{"_index":620,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.model.t",{"_index":232,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["errorev",{"_index":626,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":254,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["especi",{"_index":1662,"title":{},"body":{"index.html":{}}}],["evalu",{"_index":1221,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["event",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["eventemitt",{"_index":1102,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["examin",{"_index":1373,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["exampl",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LikesComponent.html":{}}}],["execut",{"_index":1676,"title":{},"body":{"index.html":{}}}],["exist",{"_index":693,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["expir",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["extra",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Marker.html":{}}}],["face",{"_index":909,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["fact",{"_index":832,"title":{},"body":{"components/LandingComponent.html":{}}}],["fail",{"_index":576,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["fals",{"_index":660,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":754,"title":{},"body":{"components/HowToComponent.html":{}}}],["favorit",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'nam",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["favorites.component.css",{"_index":647,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":648,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favoritescompon",{"_index":202,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["featur",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["fellow",{"_index":728,"title":{},"body":{"components/HowToComponent.html":{}}}],["fetch",{"_index":1032,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["field",{"_index":243,"title":{},"body":{"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["file.nam",{"_index":1173,"title":{},"body":{"injectables/UploadService.html":{}}}],["fill",{"_index":746,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["final",{"_index":749,"title":{},"body":{"components/HowToComponent.html":{}}}],["find",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{}}}],["finish",{"_index":752,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["first",{"_index":83,"title":{},"body":{"classes/AddressModel.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["firstnam",{"_index":1194,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["fit",{"_index":732,"title":{},"body":{"components/HowToComponent.html":{}}}],["fl",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["flag",{"_index":1640,"title":{},"body":{"index.html":{}}}],["flipcard",{"_index":900,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["flipcard(card",{"_index":910,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["florida",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focus",{"_index":779,"title":{},"body":{"components/HowToComponent.html":{}}}],["folder",{"_index":1151,"title":{},"body":{"injectables/UploadService.html":{}}}],["follow",{"_index":689,"title":{},"body":{"injectables/GeocodeService.html":{},"index.html":{}}}],["forc",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forgot",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":532,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["format",{"_index":245,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{}}}],["format.pip",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["formsmodul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["front",{"_index":928,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["full",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":506,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["further",{"_index":844,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["ga",{"_index":855,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gener",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["geocod",{"_index":665,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode(address",{"_index":668,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":663,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["geograph",{"_index":987,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["georgia",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":967,"title":{"index.html":{}},"body":{"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getcurrentus",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getdislikeddriv",{"_index":1013,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdislikeddrivers(riderid",{"_index":1025,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdist",{"_index":982,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getdistance(address",{"_index":985,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getformattedaddress",{"_index":1094,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getformattedaddress(plac",{"_index":1103,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getfromlink",{"_index":1014,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfromlink(uri",{"_index":1027,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddriv",{"_index":1015,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddrivers(riderid",{"_index":1034,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdriv",{"_index":1016,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdrivers(riderid",{"_index":1036,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getoffic",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getparagraphtext",{"_index":368,"title":{},"body":{"classes/AppPage.html":{}}}],["getregistrationkey",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["getrol",{"_index":1345,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getrout",{"_index":983,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getroute(start",{"_index":990,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["gets3bucket",{"_index":1152,"title":{},"body":{"injectables/UploadService.html":{}}}],["gettoken",{"_index":1136,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["getus",{"_index":1346,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getuser(email",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["git",{"_index":1642,"title":{},"body":{"index.html":{}}}],["github",{"_index":1672,"title":{},"body":{"index.html":{}}}],["give",{"_index":762,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["given",{"_index":716,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["go",{"_index":756,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["goe",{"_index":904,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["good",{"_index":730,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["googl",{"_index":678,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocod",{"_index":674,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderresult",{"_index":680,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatu",{"_index":681,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":682,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlng",{"_index":671,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlngliter",{"_index":1006,"title":{},"body":{"interfaces/Marker.html":{}}}],["google.maps.places.autocomplete(this.el",{"_index":1114,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["googlemap",{"_index":1108,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["googlemapsapiwrapp",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["gotten",{"_index":574,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["grab",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["grant",{"_index":1119,"title":{},"body":{"interfaces/Register.html":{}}}],["graph",{"_index":1682,"title":{},"body":{"modules.html":{}}}],["group",{"_index":859,"title":{},"body":{"components/LandingComponent.html":{}}}],["groupm",{"_index":739,"title":{},"body":{"components/HowToComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":375,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1219,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["have",{"_index":1031,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["haven't",{"_index":768,"title":{},"body":{"components/HowToComponent.html":{}}}],["haven\\'t",{"_index":802,"title":{},"body":{"components/HowToComponent.html":{}}}],["hawaii",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["he/sh",{"_index":1357,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["held",{"_index":1375,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["help",{"_index":851,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["here",{"_index":652,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"index.html":{}}}],["hi",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":1132,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["hide",{"_index":1250,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimag",{"_index":1245,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimage(hid",{"_index":1248,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hold",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/ContactInfo.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["home",{"_index":704,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["home(curr",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hook",{"_index":1363,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["hopefulli",{"_index":800,"title":{},"body":{"components/HowToComponent.html":{}}}],["host",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hour",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["hous",{"_index":85,"title":{},"body":{"classes/AddressModel.html":{}}}],["howto",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["howtocompon",{"_index":204,"title":{"components/HowToComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["htmlinputel",{"_index":1106,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["http",{"_index":236,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["http://192.168.60.54:2222",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://ec2",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1631,"title":{},"body":{"index.html":{}}}],["http://semant",{"_index":887,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["http_interceptor",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpclientmodul",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httperrorrespons",{"_index":617,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":615,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheader",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpinterceptor",{"_index":616,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":612,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://s3.u",{"_index":935,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["https://stackoverflow.com/a/46941824",{"_index":1698,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ia",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["icon",{"_index":1008,"title":{},"body":{"interfaces/Marker.html":{}}}],["id",{"_index":91,"title":{},"body":{"classes/AddressModel.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["idaho",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1660,"title":{},"body":{"index.html":{}}}],["identif",{"_index":1007,"title":{},"body":{"interfaces/Marker.html":{}}}],["identifi",{"_index":1005,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["if(!this.userservice.isloggedin",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.password",{"_index":1422,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(this.userservice.isloggedin",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ignor",{"_index":697,"title":{},"body":{"components/HowToComponent.html":{}}}],["il",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["illinoi",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imag",{"_index":1284,"title":{},"body":{"components/UsercardComponent.html":{}}}],["immedi",{"_index":790,"title":{},"body":{"components/HowToComponent.html":{}}}],["implement",{"_index":44,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["incorrect",{"_index":755,"title":{},"body":{"components/HowToComponent.html":{}}}],["indend",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["indic",{"_index":248,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info.model",{"_index":998,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["info.model.t",{"_index":597,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["inform",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["infowindow",{"_index":1009,"title":{},"body":{"interfaces/Marker.html":{}}}],["initi",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["initila",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{}}}],["inject",{"_index":31,"title":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1403,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["input",{"_index":707,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["instanceof",{"_index":625,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["instead",{"_index":1175,"title":{},"body":{"injectables/UploadService.html":{}}}],["instructor",{"_index":717,"title":{},"body":{"components/HowToComponent.html":{}}}],["intercept",{"_index":608,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":611,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":606,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interest",{"_index":1222,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":229,"title":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["intro",{"_index":821,"title":{},"body":{"components/LandingComponent.html":{}}}],["invok",{"_index":677,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["iowa",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["it'",{"_index":801,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["it\\'",{"_index":806,"title":{},"body":{"components/HowToComponent.html":{}}}],["item",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["item.info",{"_index":1429,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["item.typ",{"_index":1428,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["js",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["judgment",{"_index":1223,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["jwtinterceptor",{"_index":290,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["kansa",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1678,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1262,"title":{},"body":{"components/UsercardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kentucki",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":92,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{}}}],["know",{"_index":1368,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["ks",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ky",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":1002,"title":{},"body":{"interfaces/Marker.html":{}}}],["land",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["landing'},{'nam",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["landing.component.css",{"_index":822,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":823,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":206,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":713,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["lastnam",{"_index":1195,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["latitud",{"_index":951,"title":{},"body":{"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["latlng",{"_index":673,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["latlngliter",{"_index":988,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["left",{"_index":1268,"title":{},"body":{"components/UsercardComponent.html":{}}}],["legend",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["lessen",{"_index":853,"title":{},"body":{"components/LandingComponent.html":{}}}],["librari",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["like",{"_index":642,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["like(index",{"_index":1224,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["likecard",{"_index":898,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likedriv",{"_index":1017,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likedriver(riderid",{"_index":1039,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likes'},{'nam",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likes.component.css",{"_index":865,"title":{},"body":{"components/LikesComponent.html":{}}}],["likes.component.html",{"_index":866,"title":{},"body":{"components/LikesComponent.html":{}}}],["likescompon",{"_index":208,"title":{"components/LikesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["likesmatchweb",{"_index":653,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb'},{'nam",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likesmatchweb.component.css",{"_index":896,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb.component.html",{"_index":897,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchwebcompon",{"_index":210,"title":{"components/LikesmatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["limit",{"_index":1360,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["line",{"_index":84,"title":{},"body":{"classes/AddressModel.html":{}}}],["link",{"_index":497,"title":{},"body":{"classes/Car.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["link.model",{"_index":502,"title":{},"body":{"classes/Car.html":{},"interfaces/User.html":{}}}],["list",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["littl",{"_index":725,"title":{},"body":{"components/HowToComponent.html":{}}}],["live",{"_index":1198,"title":{},"body":{"interfaces/User.html":{}}}],["local",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":132,"title":{"interfaces/Location.html":{}},"body":{"components/AdminComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["location.reload(tru",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["location_obj",{"_index":1111,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["log",{"_index":54,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'nam",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login.component.css",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":212,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":1118,"title":{},"body":{"interfaces/Register.html":{}}}],["longitud",{"_index":952,"title":{},"body":{"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["look",{"_index":761,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["louisiana",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":1653,"title":{},"body":{"index.html":{}}}],["ma",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":703,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["manag",{"_index":507,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["manual",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["manufactur",{"_index":541,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["map",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["map'},{'nam",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["map(token",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["mapcompon",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapsapiload",{"_index":1099,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["mapscontrollerservic",{"_index":291,"title":{"injectables/MapsControllerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"coverage.html":{},"overview.html":{}}}],["mapto",{"_index":35,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mapto(tru",{"_index":61,"title":{},"body":{"guards/AccessGuard.html":{}}}],["marker",{"_index":989,"title":{"interfaces/Marker.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["maryland",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massachusett",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1674,"title":{},"body":{"index.html":{}}}],["match",{"_index":67,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches/${riderid",{"_index":1047,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid",{"_index":1053,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid}/${driverid",{"_index":1054,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid",{"_index":1049,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid}/${driverid",{"_index":1051,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matchingcontrollerservic",{"_index":292,"title":{"injectables/MatchingControllerService.html":{}},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":871,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["math.floor(math.random",{"_index":1171,"title":{},"body":{"injectables/UploadService.html":{}}}],["md",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mean",{"_index":598,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["member",{"_index":860,"title":{},"body":{"components/LandingComponent.html":{}}}],["merg",{"_index":1661,"title":{},"body":{"index.html":{}}}],["messag",{"_index":239,"title":{},"body":{"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["messagelogin",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.innerhtml",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.style.display",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["meter",{"_index":1130,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["mi",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["michigan",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleencrypt",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{}}}],["middleencryption.length",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{}}}],["minnesota",{"_index":1564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":1505,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing/incorrect",{"_index":244,"title":{},"body":{"interfaces/ApiError.html":{}}}],["mississippi",{"_index":1566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["missouri",{"_index":1568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mm",{"_index":1200,"title":{},"body":{"interfaces/User.html":{}}}],["mn",{"_index":1565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mo",{"_index":1569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":645,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["mode",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["model",{"_index":488,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/address.model",{"_index":1285,"title":{},"body":{"components/UsercardComponent.html":{}}}],["models/api",{"_index":619,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["models/car.model",{"_index":554,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["models/link.model",{"_index":881,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/office.model",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/role.model",{"_index":880,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/rout",{"_index":997,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["models/swipecard.model",{"_index":878,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["models/user.model",{"_index":555,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["modifi",{"_index":1361,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["modul",{"_index":278,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":1570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":724,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["move",{"_index":722,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/Marker.html":{}}}],["ms",{"_index":1567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":1571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multi",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["nav",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":705,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["navbar.component.css",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcompon",{"_index":216,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":771,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["navigateto",{"_index":369,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":1432,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["nc",{"_index":1585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nd",{"_index":1587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ne",{"_index":1573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearbi",{"_index":778,"title":{},"body":{"components/HowToComponent.html":{}}}],["nebraska",{"_index":1572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":843,"title":{},"body":{"components/LandingComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["network",{"_index":628,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nevada",{"_index":1574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["newhampshir",{"_index":1576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newjersey",{"_index":1578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newmexico",{"_index":1580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newyork",{"_index":1582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":613,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["next.handle(request",{"_index":817,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pip",{"_index":622,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodul",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["nh",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nj",{"_index":1579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nm",{"_index":1581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobodi",{"_index":1329,"title":{},"body":{"components/UsercardComponent.html":{}}}],["none",{"_index":939,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["north/west",{"_index":953,"title":{},"body":{"interfaces/Location.html":{}}}],["northcarolina",{"_index":1584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northdakota",{"_index":1586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_logged_in",{"_index":260,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["notifi",{"_index":719,"title":{},"body":{"components/HowToComponent.html":{}}}],["notloggedin",{"_index":259,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":751,"title":{},"body":{"components/HowToComponent.html":{}}}],["null",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["num",{"_index":568,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number",{"_index":86,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/RouteInfo.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["number.parseint(strnum",{"_index":569,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number/etc",{"_index":604,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["nv",{"_index":1575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ny",{"_index":1583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["o",{"_index":1337,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["object",{"_index":528,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["observable.create((observ",{"_index":676,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":684,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.error(statu",{"_index":686,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(result",{"_index":683,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["occur",{"_index":629,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["of(fals",{"_index":64,"title":{},"body":{"guards/AccessGuard.html":{}}}],["offic",{"_index":137,"title":{"interfaces/Office.html":{}},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["office.model",{"_index":1204,"title":{},"body":{"interfaces/User.html":{}}}],["office.nam",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobject",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobjectarray",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["oh",{"_index":1589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ohio",{"_index":1588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":1591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oklahoma",{"_index":1590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":1650,"title":{},"body":{"index.html":{}}}],["on",{"_index":763,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["onc",{"_index":720,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["oninit",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ontap",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["ontap(ev",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["opac",{"_index":1298,"title":{},"body":{"components/UsercardComponent.html":{}}}],["oper",{"_index":529,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["optintodr",{"_index":515,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["option",{"_index":19,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["order",{"_index":767,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oregon",{"_index":1592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["origin",{"_index":1656,"title":{},"body":{"index.html":{}}}],["other",{"_index":850,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1095,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["over",{"_index":641,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["overview",{"_index":1643,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrit",{"_index":1691,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["own",{"_index":487,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["owner",{"_index":489,"title":{},"body":{"classes/Car.html":{}}}],["ownwer",{"_index":546,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["p4ssw0rd",{"_index":1410,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["pa",{"_index":1594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":1479,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":57,"title":{},"body":{"guards/AccessGuard.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["param",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["paramet",{"_index":15,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["params.bucket",{"_index":1189,"title":{},"body":{"injectables/UploadService.html":{}}}],["params.key",{"_index":1190,"title":{},"body":{"injectables/UploadService.html":{}}}],["part",{"_index":708,"title":{},"body":{"components/HowToComponent.html":{}}}],["passcheck",{"_index":1421,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["passeng",{"_index":733,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger'",{"_index":783,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger\\'",{"_index":805,"title":{},"body":{"components/HowToComponent.html":{}}}],["password",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"components/ViewProfileComponent.html":{}}}],["password).topromise().then",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["past",{"_index":905,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["path",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pennsylvania",{"_index":1593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":261,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/User.html":{}}}],["phone",{"_index":735,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["photo",{"_index":1203,"title":{},"body":{"interfaces/User.html":{}}}],["photourl",{"_index":1196,"title":{},"body":{"interfaces/User.html":{}}}],["pictur",{"_index":1208,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["pin",{"_index":780,"title":{},"body":{"components/HowToComponent.html":{}}}],["pipe",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes/d",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["place",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["placeid",{"_index":1003,"title":{},"body":{"interfaces/Marker.html":{}}}],["placesautocompletedirect",{"_index":226,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plan",{"_index":745,"title":{},"body":{"components/HowToComponent.html":{}}}],["pleas",{"_index":769,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["plu",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["popul",{"_index":873,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibel",{"_index":1213,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibl",{"_index":72,"title":{},"body":{"classes/AddressModel.html":{}}}],["post",{"_index":1416,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["post(environment.apiurl",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["potenti",{"_index":731,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["pr",{"_index":1596,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["present",{"_index":547,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["previou",{"_index":758,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["previous",{"_index":552,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["price",{"_index":856,"title":{},"body":{"components/LandingComponent.html":{}}}],["primari",{"_index":249,"title":{},"body":{"interfaces/ApiError.html":{}}}],["privat",{"_index":46,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["problem",{"_index":1646,"title":{},"body":{"index.html":{}}}],["process",{"_index":709,"title":{},"body":{"components/HowToComponent.html":{}}}],["prod",{"_index":1639,"title":{},"body":{"index.html":{}}}],["produc",{"_index":494,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["product",{"_index":1641,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["profile.compon",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1341,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.html",{"_index":1342,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.t",{"_index":1339,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:106",{"_index":1359,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:121",{"_index":1351,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:127",{"_index":1369,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:131",{"_index":1352,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:136",{"_index":1378,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:138",{"_index":1353,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":1349,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":1370,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1371,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1377,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":1376,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1367,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1362,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1364,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1366,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1374,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":1372,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1354,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:71",{"_index":1350,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":1356,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile/view",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":831,"title":{},"body":{"components/LandingComponent.html":{}}}],["project",{"_index":1622,"title":{},"body":{"index.html":{}}}],["promis",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["properti",{"_index":75,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["protractor",{"_index":372,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":252,"title":{},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"components/FavoritesComponent.html":{},"components/LoginComponent.html":{},"interfaces/RouteInfo.html":{},"overview.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["public",{"_index":649,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["puerto",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["puertorico",{"_index":1595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pull",{"_index":1659,"title":{},"body":{"index.html":{}}}],["push",{"_index":1654,"title":{},"body":{"index.html":{}}}],["pushed.befor",{"_index":1658,"title":{},"body":{"index.html":{}}}],["put",{"_index":931,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["rc.0",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":760,"title":{},"body":{"components/HowToComponent.html":{}}}],["reach",{"_index":798,"title":{},"body":{"components/HowToComponent.html":{}}}],["reactiveformsmodul",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1680,"title":{},"body":{"index.html":{}}}],["reason",{"_index":690,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["redirect",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["refresh",{"_index":531,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["refreshfield",{"_index":518,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reg",{"_index":573,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["region",{"_index":1168,"title":{},"body":{"injectables/UploadService.html":{}}}],["regis",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["regist",{"_index":544,"title":{"interfaces/Register.html":{}},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"coverage.html":{}}}],["registr",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interfaces/Register.html":{}}}],["registration'},{'nam",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["registration.compon",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration.component.css",{"_index":508,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.html",{"_index":509,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.t",{"_index":504,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registration.component.ts:108",{"_index":523,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:129",{"_index":530,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:19",{"_index":553,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:25",{"_index":543,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:29",{"_index":539,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:34",{"_index":542,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:39",{"_index":549,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:44",{"_index":550,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:49",{"_index":545,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:52",{"_index":521,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:63",{"_index":526,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:70",{"_index":533,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:94",{"_index":535,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration/car",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registrationkey",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["relev",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["relic",{"_index":551,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reload",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["remov",{"_index":1043,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["repeat",{"_index":792,"title":{},"body":{"components/HowToComponent.html":{}}}],["repo",{"_index":1645,"title":{},"body":{"index.html":{}}}],["repres",{"_index":71,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["represent",{"_index":605,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["request",{"_index":237,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["request.clon",{"_index":813,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requir",{"_index":711,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserv",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["reset",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetcar",{"_index":519,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resetus",{"_index":520,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resolv",{"_index":1671,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":1694,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["respect",{"_index":759,"title":{},"body":{"components/HowToComponent.html":{}}}],["respons",{"_index":235,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["reston",{"_index":1091,"title":{},"body":{"interfaces/Office.html":{}}}],["result",{"_index":66,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["return",{"_index":27,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["revatur",{"_index":698,"title":{},"body":{"components/HowToComponent.html":{}}}],["reversegeocod",{"_index":666,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reversegeocode(latlng",{"_index":670,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["review",{"_index":750,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rhodeisland",{"_index":1597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ri",{"_index":1598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rico",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ride",{"_index":839,"title":{},"body":{"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["rideforc",{"_index":699,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["rider",{"_index":842,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riderid",{"_index":1024,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["rideshar",{"_index":766,"title":{},"body":{"components/HowToComponent.html":{}}}],["ridesharecli",{"_index":1621,"title":{},"body":{"index.html":{}}}],["rideswip",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RideswipeComponent.html":{}}}],["rideswipe'},{'nam",{"_index":219,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rideswipe.component.css",{"_index":1122,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipe.component.html",{"_index":1123,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipecompon",{"_index":218,"title":{"components/RideswipeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1270,"title":{},"body":{"components/UsercardComponent.html":{}}}],["role",{"_index":879,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role.model",{"_index":1206,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":41,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rotat",{"_index":912,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(0deg",{"_index":924,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(180deg",{"_index":927,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(90deg",{"_index":925,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rout",{"_index":26,"title":{"routes.html":{}},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"overview.html":{},"routes.html":{}}}],["route.data.requireslogin",{"_index":59,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routeinfo",{"_index":996,"title":{"interfaces/RouteInfo.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routerlink",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routing.modul",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["run",{"_index":1628,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":36,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["rydeforc",{"_index":1158,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3",{"_index":1159,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3/65600312303b.png",{"_index":938,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["safe",{"_index":857,"title":{},"body":{"components/LandingComponent.html":{}}}],["save",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"components/ViewProfileComponent.html":{}}}],["savetoken",{"_index":1137,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["savetoken(token",{"_index":1141,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sc",{"_index":1600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffold",{"_index":1632,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1297,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scale(1.2",{"_index":1300,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scroll",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sd",{"_index":1602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1162,"title":{},"body":{"injectables/UploadService.html":{}}}],["second",{"_index":89,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/RouteInfo.html":{}}}],["secretaccesskey",{"_index":1166,"title":{},"body":{"injectables/UploadService.html":{}}}],["section",{"_index":710,"title":{},"body":{"components/HowToComponent.html":{}}}],["see",{"_index":656,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["select",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["send",{"_index":525,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/MapsControllerService.html":{}}}],["sent",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["serv",{"_index":1629,"title":{},"body":{"index.html":{}}}],["server",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["servic",{"_index":52,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/api/map",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/match",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/us",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/auth.servic",{"_index":621,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["session",{"_index":825,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessioncheck",{"_index":826,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.clear",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{}}}],["sessionstorage.getitem('address",{"_index":1389,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('firstnam",{"_index":1380,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('lastnam",{"_index":1382,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('rol",{"_index":1413,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('useremail",{"_index":1384,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1148,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.length",{"_index":837,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.removeitem(token_key",{"_index":1146,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.setitem('act",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('address",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('batchend",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('firstnam",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('id",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('lastnam",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('rol",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('useremail",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('userpassword",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(token_key",{"_index":1147,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["set",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sethead",{"_index":814,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["seven",{"_index":734,"title":{},"body":{"components/HowToComponent.html":{}}}],["show",{"_index":781,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["shown",{"_index":791,"title":{},"body":{"components/HowToComponent.html":{}}}],["side",{"_index":627,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sign",{"_index":840,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["signout",{"_index":1138,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["simpli",{"_index":651,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{}}}],["site",{"_index":820,"title":{},"body":{"components/LandingComponent.html":{}}}],["skype",{"_index":737,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slack",{"_index":736,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["someth",{"_index":1218,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["southcarolina",{"_index":1599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southdakota",{"_index":1601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spec\\.t",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":256,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"miscellaneous/enumerations.html":{}}}],["specifi",{"_index":601,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["spent",{"_index":1663,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.model.t",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../link.model.t",{"_index":1690,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.model.t",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.model.t",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.t",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.storage.t",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":1692,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/accountinfo/accountinfo.component.t",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:17",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:19",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:21",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:23",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:26",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:35",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:40",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:50",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:61",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/car",{"_index":503,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.t",{"_index":640,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:12",{"_index":650,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/favorites/favorites.component.ts:20",{"_index":654,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/how",{"_index":691,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.t",{"_index":818,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.ts:16",{"_index":830,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:18",{"_index":827,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:29",{"_index":828,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:48",{"_index":829,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/likes/likes.component.t",{"_index":864,"title":{},"body":{"components/LikesComponent.html":{},"coverage.html":{}}}],["src/app/components/likes/likes.component.ts:22",{"_index":869,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:34",{"_index":875,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:39",{"_index":872,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.t",{"_index":895,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:104",{"_index":911,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:115",{"_index":903,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:45",{"_index":901,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:57",{"_index":914,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:62",{"_index":913,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:43",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/map/map.component.t",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1075,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":1076,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:70",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:98",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.t",{"_index":1121,"title":{},"body":{"components/RideswipeComponent.html":{},"coverage.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:10",{"_index":1124,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:14",{"_index":1125,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/usercard/usercard.component.t",{"_index":1234,"title":{},"body":{"components/UsercardComponent.html":{},"coverage.html":{}}}],["src/app/components/usercard/usercard.component.ts:121",{"_index":1249,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:132",{"_index":1253,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:163",{"_index":1256,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:187",{"_index":1258,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:37",{"_index":1272,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:39",{"_index":1280,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:45",{"_index":1266,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:47",{"_index":1265,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:49",{"_index":1261,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:51",{"_index":1264,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:53",{"_index":1282,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:56",{"_index":1278,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:58",{"_index":1247,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:68",{"_index":1267,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:73",{"_index":1251,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.t",{"_index":1207,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:130",{"_index":1333,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:142",{"_index":1332,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:39",{"_index":1331,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:49",{"_index":1336,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:54",{"_index":1335,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:91",{"_index":1334,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/view",{"_index":1338,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["src/app/directives/plac",{"_index":1092,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["src/app/guards/access.guard.t",{"_index":5,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:16",{"_index":14,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:21",{"_index":25,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/models/address.model.t",{"_index":69,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/app/models/address.model.ts:10",{"_index":93,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:12",{"_index":94,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:14",{"_index":95,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:4",{"_index":90,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:6",{"_index":82,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:8",{"_index":88,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/api",{"_index":231,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/car.model.t",{"_index":484,"title":{},"body":{"classes/Car.html":{},"coverage.html":{}}}],["src/app/models/car.model.ts:13",{"_index":498,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:15",{"_index":493,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:17",{"_index":496,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:19",{"_index":500,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:9",{"_index":491,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/contact",{"_index":596,"title":{},"body":{"interfaces/ContactInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/interest.model.t",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/link.model.t",{"_index":1693,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/models/location.model.t",{"_index":949,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/models/marker.model.t",{"_index":1000,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["src/app/models/office.model.t",{"_index":1088,"title":{},"body":{"interfaces/Office.html":{},"coverage.html":{}}}],["src/app/models/register.model.t",{"_index":1117,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/role.model.t",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/rout",{"_index":1126,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/models/state.model.t",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/swipecard.model.t",{"_index":1131,"title":{},"body":{"classes/SwipecardModel.html":{},"coverage.html":{}}}],["src/app/models/swipecard.model.ts:6",{"_index":1133,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/swipecard.model.ts:8",{"_index":1134,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/user.model.t",{"_index":1192,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/api/map",{"_index":980,"title":{},"body":{"injectables/MapsControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/match",{"_index":1011,"title":{},"body":{"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/us",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:88",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/geocode.service.t",{"_index":664,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["src/app/services/geocode.service.ts:15",{"_index":672,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:32",{"_index":669,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:9",{"_index":667,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/upload.service.t",{"_index":1150,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:10",{"_index":1154,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:14",{"_index":1155,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:25",{"_index":1157,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:9",{"_index":1160,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/utils/error.interceptor.t",{"_index":607,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:17",{"_index":610,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:20",{"_index":614,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.t",{"_index":807,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:12",{"_index":809,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:15",{"_index":810,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/token.storage.t",{"_index":1135,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/token.storage.ts:11",{"_index":1143,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:16",{"_index":1142,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:21",{"_index":1140,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:8",{"_index":1139,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/types.t",{"_index":1695,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.t",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":702,"title":{"index.html":{}},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state('back",{"_index":926,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('cent",{"_index":1287,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('front",{"_index":922,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('left",{"_index":1289,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('on",{"_index":1296,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('right",{"_index":1292,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('two",{"_index":1299,"title":{},"body":{"components/UsercardComponent.html":{}}}],["statement",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":240,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["step",{"_index":1644,"title":{},"body":{"index.html":{}}}],["store",{"_index":1636,"title":{},"body":{"index.html":{}}}],["street",{"_index":87,"title":{},"body":{"classes/AddressModel.html":{}}}],["string",{"_index":81,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strnum",{"_index":566,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["structur",{"_index":877,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["style",{"_index":915,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["styleurl",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sub",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["submit",{"_index":589,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["submitchang",{"_index":1347,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["success",{"_index":688,"title":{},"body":{"injectables/GeocodeService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["successfuli",{"_index":765,"title":{},"body":{"components/HowToComponent.html":{}}}],["such",{"_index":242,"title":{},"body":{"interfaces/ApiError.html":{}}}],["support",{"_index":505,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"modules.html":{}}}],["sure",{"_index":527,"title":{},"body":{"components/CarRegistrationComponent.html":{},"index.html":{}}}],["svg",{"_index":1681,"title":{},"body":{"modules.html":{}}}],["swipcard",{"_index":874,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["swipe",{"_index":1217,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["swipe(act",{"_index":1252,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipe_act",{"_index":1241,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipebio",{"_index":1277,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecard",{"_index":867,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["swipecardbio",{"_index":1242,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmain",{"_index":1243,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmodel",{"_index":876,"title":{"classes/SwipecardModel.html":{}},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["swipeleft",{"_index":1269,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipemain",{"_index":1279,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swiperight",{"_index":1271,"title":{},"body":{"components/UsercardComponent.html":{}}}],["switch",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["switchrol",{"_index":1348,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["system",{"_index":74,"title":{},"body":{"classes/AddressModel.html":{},"components/CarRegistrationComponent.html":{},"interfaces/Register.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tabl",{"_index":548,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":992,"title":{},"body":{"injectables/MapsControllerService.html":{},"index.html":{}}}],["tap",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["templat",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["tennesse",{"_index":1603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":1675,"title":{},"body":{"index.html":{}}}],["texa",{"_index":1605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text",{"_index":894,"title":{},"body":{"components/LikesComponent.html":{}}}],["th",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["thank",{"_index":1697,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["themselv",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{}}}],["there'",{"_index":1328,"title":{},"body":{"components/UsercardComponent.html":{}}}],["there\\'",{"_index":1330,"title":{},"body":{"components/UsercardComponent.html":{}}}],["think",{"_index":788,"title":{},"body":{"components/HowToComponent.html":{}}}],["this.address2",{"_index":1388,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.addressselect.emit(this.getformattedaddress(autocomplete.getplac",{"_index":1116,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.animst",{"_index":1317,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.animthumbst",{"_index":1315,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.authenticator(email",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.authenticate(this.useremail",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":638,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.batchend",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.car",{"_index":558,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmak",{"_index":579,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmodel",{"_index":581,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject",{"_index":557,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.id",{"_index":577,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.mak",{"_index":578,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.model",{"_index":580,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.own",{"_index":582,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.year",{"_index":584,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.length",{"_index":560,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.push(el",{"_index":570,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.caryear",{"_index":585,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.confirmpassword",{"_index":1423,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentindex",{"_index":1325,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentrol",{"_index":1407,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentswipecard",{"_index":1311,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentus",{"_index":834,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.datelocationencrypt",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.el",{"_index":1109,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.encryptedlocationd",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.firstnam",{"_index":1379,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.fold",{"_index":1170,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.geocod",{"_index":675,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocoder.geocod",{"_index":679,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.getoffic",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.getrol",{"_index":1392,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.gets3bucket().upload(param",{"_index":1179,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.getus",{"_index":1391,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.http",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete[]>(environment.apiurl",{"_index":1052,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.get(environment.apiurl",{"_index":999,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["this.http.get[]>(environment.apiurl",{"_index":1046,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.put[]>(environment.apiurl",{"_index":1050,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.isloggedin",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.lastnam",{"_index":1381,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.likecards.push(card",{"_index":940,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.mapsapiloader.load().then",{"_index":1112,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.matchservice.dislikedriver(this.currentuser.id",{"_index":1232,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getlikeddrivers(this.currentuser.id).subscrib",{"_index":883,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.matchservice.getmatchingdrivers(this.currentuser.id).subscrib",{"_index":1214,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.likedriver(this.currentuser.id",{"_index":1230,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.undislikedriver(this.currentuser.id",{"_index":1228,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.unlikedriver(this.currentuser.id",{"_index":1231,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.officeobject",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.officeobjectarray",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.password",{"_index":1425,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.password).subscrib",{"_index":1411,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.postservice.getposts().then((allpost",{"_index":1415,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.registrationkey",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.resetus",{"_index":561,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.route.navigate([\"/land",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.route.navigate(['/land",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.url",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":63,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.sess",{"_index":838,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.sessioncheck",{"_index":836,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.swipe_action.left",{"_index":1321,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipe_action.right",{"_index":1255,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.add('hidden",{"_index":1313,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.remove('hidden",{"_index":1314,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.length",{"_index":1310,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.push(card",{"_index":892,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["this.swipecards.splice(this.currentindex",{"_index":1324,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[0",{"_index":1312,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[this.currentindex].user.id).subscrib",{"_index":1320,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.thumbimg",{"_index":1318,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":812,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.tokenstorage.savetoken(token",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.url",{"_index":1187,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.us",{"_index":1420,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.usernam",{"_index":1383,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userobject",{"_index":575,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.cars.push(this.carobject",{"_index":586,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id",{"_index":563,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id.tostr",{"_index":583,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userpass",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users.push(card",{"_index":1216,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users.splice(index",{"_index":1233,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].choos",{"_index":1227,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].user.id).subscrib",{"_index":1229,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.createcar(this.carobject).subscribe(car",{"_index":587,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getallcars().subscribe(c",{"_index":564,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getalloffices().subscribe(data",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getallusers().subscribe((x",{"_index":1419,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getcurrentuser().pip",{"_index":60,"title":{},"body":{"guards/AccessGuard.html":{}}}],["this.userservice.getcurrentuser().subscrib",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(us",{"_index":571,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getcurrentuserobservable().subscrib",{"_index":833,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getofficebylink(this.currentuser.office).tostr",{"_index":1387,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getregistrationkey().subscrib",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getuserbyemail(email).subscrib",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuserbyemail(email).then((x",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update().subscrib",{"_index":1408,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.updatepassword(this.currentuser.id",{"_index":1409,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["those",{"_index":1202,"title":{},"body":{"interfaces/User.html":{}}}],["thrash",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["three",{"_index":743,"title":{},"body":{"components/HowToComponent.html":{}}}],["throwerror",{"_index":618,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(apierror",{"_index":639,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err.error",{"_index":631,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thu",{"_index":753,"title":{},"body":{"components/HowToComponent.html":{}}}],["thumb",{"_index":1259,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbanimdon",{"_index":1246,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbimg",{"_index":1244,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbnail",{"_index":1283,"title":{},"body":{"components/UsercardComponent.html":{}}}],["time",{"_index":995,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"index.html":{}}}],["titl",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["tn",{"_index":1604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to'},{'nam",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["to.compon",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["to.component.css",{"_index":695,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.html",{"_index":696,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.t",{"_index":692,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["to/how",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"coverage.html":{}}}],["tobase64str",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{}}}],["today",{"_index":841,"title":{},"body":{"components/LandingComponent.html":{}}}],["token",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{}}}],["token.storag",{"_index":811,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["token_key",{"_index":1144,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorag",{"_index":408,"title":{"injectables/TokenStorage.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/TokenStorage.html":{},"coverage.html":{}}}],["total",{"_index":1129,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["track",{"_index":1263,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trainer",{"_index":1120,"title":{},"body":{"interfaces/Register.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":923,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transit",{"_index":916,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transition('on",{"_index":1302,"title":{},"body":{"components/UsercardComponent.html":{}}}],["transition('two",{"_index":1304,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex",{"_index":1290,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(0",{"_index":1288,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(200",{"_index":1293,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trash",{"_index":1225,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["travel",{"_index":994,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["tree",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["trigger",{"_index":917,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('flip",{"_index":921,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('pop",{"_index":1295,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trigger('slid",{"_index":1286,"title":{},"body":{"components/UsercardComponent.html":{}}}],["true",{"_index":65,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":774,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["tx",{"_index":1606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.model.t",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":1688,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1655,"title":{},"body":{"index.html":{}}}],["ui.com/images/avatar/large/chris.jpg",{"_index":888,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["unauthor",{"_index":263,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["unavail",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefin",{"_index":559,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["under",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["underneath",{"_index":706,"title":{},"body":{"components/HowToComponent.html":{}}}],["undislikedriv",{"_index":1018,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["undislikedriver(riderid",{"_index":1041,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unit",{"_index":1519,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["unknown",{"_index":920,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["unlik",{"_index":1023,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriv",{"_index":1019,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriver(riderid",{"_index":1044,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unus",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["up",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["updat",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["upload",{"_index":1182,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfil",{"_index":1153,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(fil",{"_index":1156,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservic",{"_index":1149,"title":{"injectables/UploadService.html":{}},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["upresult",{"_index":1178,"title":{},"body":{"injectables/UploadService.html":{}}}],["upresult.fail",{"_index":1185,"title":{},"body":{"injectables/UploadService.html":{}}}],["uri",{"_index":1033,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["url",{"_index":48,"title":{},"body":{"guards/AccessGuard.html":{},"classes/Car.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["us",{"_index":55,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["useclass",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["usepromis",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":53,"title":{"interfaces/User.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'",{"_index":602,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{}}}],["user.email",{"_index":1434,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.firstnam",{"_index":1431,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.id",{"_index":1430,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.lastnam",{"_index":1433,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.model",{"_index":501,"title":{},"body":{"classes/Car.html":{},"classes/SwipecardModel.html":{}}}],["user.rol",{"_index":1435,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.user.address",{"_index":945,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.batchend",{"_index":946,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.email",{"_index":944,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.firstnam",{"_index":942,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.lastnam",{"_index":943,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user\\'",{"_index":1436,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["usercard",{"_index":400,"title":{"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["usercard'},{'nam",{"_index":221,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usercard.component.css",{"_index":1235,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercard.component.html",{"_index":1236,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercardcompon",{"_index":220,"title":{"components/UsercardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercontrollerservic",{"_index":11,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":562,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{}}}],["userlink",{"_index":882,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb",{"_index":1209,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb'},{'nam",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usermatchweb.component.css",{"_index":1211,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.html",{"_index":1210,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchwebcompon",{"_index":222,"title":{"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":714,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["username/phon",{"_index":603,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["userobject",{"_index":516,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["userpass",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofil",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/{userid",{"_index":1038,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["userservic",{"_index":20,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ut",{"_index":1608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utah",{"_index":1607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["utils/error.interceptor",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/jwt.interceptor",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/token.storag",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["va",{"_index":1612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valu",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["variabl",{"_index":1472,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":712,"title":{},"body":{"components/HowToComponent.html":{}}}],["vehicl",{"_index":495,"title":{},"body":{"classes/Car.html":{},"components/HowToComponent.html":{}}}],["venmo",{"_index":1197,"title":{},"body":{"interfaces/User.html":{}}}],["verdict",{"_index":1220,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["vermont",{"_index":1609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":1625,"title":{},"body":{"index.html":{}}}],["via",{"_index":1677,"title":{},"body":{"index.html":{}}}],["view",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["viewchild",{"_index":1275,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipebio",{"_index":1306,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipemain",{"_index":1305,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewprofilecompon",{"_index":224,"title":{"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virginia",{"_index":1611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":891,"title":{},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{}}}],["void",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["vt",{"_index":1610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wa",{"_index":1614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["want",{"_index":58,"title":{},"body":{"guards/AccessGuard.html":{},"components/LandingComponent.html":{}}}],["washington",{"_index":1613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["way",{"_index":852,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["westvirginia",{"_index":1615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":661,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["whichev",{"_index":799,"title":{},"body":{"components/HowToComponent.html":{}}}],["wi",{"_index":1618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window.location.reload(tru",{"_index":1412,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["window.screen.width",{"_index":662,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["wisconsin",{"_index":1617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wish",{"_index":784,"title":{},"body":{"components/HowToComponent.html":{}}}],["within",{"_index":742,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["without",{"_index":1030,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["work",{"_index":537,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["wv",{"_index":1616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wy",{"_index":1620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wyom",{"_index":1619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["x.active.tostr",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.address",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.batchend",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.firstnam",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.id.tostr",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.lastnam",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.role",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["xcvf",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{}}}],["ye",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["year",{"_index":490,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["you'r",{"_index":848,"title":{},"body":{"components/LandingComponent.html":{}}}],["you'v",{"_index":1657,"title":{},"body":{"index.html":{}}}],["you\\'r",{"_index":862,"title":{},"body":{"components/LandingComponent.html":{}}}],["yourself",{"_index":727,"title":{},"body":{"components/HowToComponent.html":{}}}],["ype",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yyyi",{"_index":1199,"title":{},"body":{"interfaces/User.html":{}}}],["zip",{"_index":80,"title":{},"body":{"classes/AddressModel.html":{}}}],["zone.j",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zxcjhd5+grqjenpwbs31mtoy1gsetewyuhsm5h6p",{"_index":1167,"title":{},"body":{"injectables/UploadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessGuard.html":{"url":"guards/AccessGuard.html","title":"guard - AccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/access.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/access.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/access.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { UserControllerService } from '../../app/services/api/user-controller.service';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class AccessGuard implements CanActivate {\n    constructor(private userService: UserControllerService, private router: Router) {}\n  \n    // RouterStateSnapshot to cache the url attempted to be accessed on the auth service\n    // after user logs in, use this url to direct them to the page they want\n    canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): boolean | Observable {\n      if (route.data.requiresLogin) {\n        return this.userService.getCurrentUser().pipe(\n          mapTo(true),\n          catchError(_ => {\n            this.router.navigate(['login']);\n            return of(false);\n          })\n        );\n      }\n      return true;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents possible adress of Users of the system \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Optional\n                                address2\n                            \n                            \n                                addressID\n                            \n                            \n                                city\n                            \n                            \n                                state\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:6\n                            \n                        \n\n                \n                    \n                        First line of the address (house number, Street name) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:8\n                            \n                        \n\n                \n                    \n                        Second line of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addressID:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:4\n                            \n                        \n\n                \n                    \n                        The id (and possible key) of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:10\n                            \n                        \n\n                \n                    \n                        THe City of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:12\n                            \n                        \n\n                \n                    \n                        The State the address is in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:14\n                            \n                        \n\n                \n                    \n                        Represents the zip-code \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressModel {\n    /** The id (and possible key) of the address */\n    addressID: number;\n    /** First line of the address (house number, Street name) */\n    address: string;\n    /** Second line of the address */\n    address2?: string;\n    /** THe City of the address */\n    city: string;\n    /** The State the address is in */\n    state: string;\n    /** Represents the zip-code */\n    zip: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Allows extra features reserved for Administrators\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEnd\n                            \n                            \n                                encryptedLocationDate\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                registrationKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateLocationEncryption\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRegistrationKey\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                            Sets up Component with User Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows User Services to be utilized\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateLocationEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \ndateLocationEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Sets up a date and location encryption key \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Retrieves all offices, called on component initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRegistrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRegistrationKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Alows a New registration key to be used for New User Registration \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initilaizes the Component with the offices \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:21\n                            \n                        \n\n                \n                    \n                        When the current batch ends \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encryptedLocationDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encryptedLocationDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                        Holds the office and batch end \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Holds th current office being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds a list of offices \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registrationKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:17\n                            \n                        \n\n                \n                    \n                        Holds a registration key that new users can use to regiser themselves \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Office } from '../../models/office.model';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n/**\n * Allows extra features reserved for Administrators\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  /** Holds a registration key that new users can use to regiser themselves */\n  registrationKey: string;\n  /** Holds a list of offices */\n  officeObjectArray: Office[] = [];\n  /** When the current batch ends */\n  batchEnd: string;\n  /** Holds th current office being viewed */\n  officeObject;\n\n  /** Holds the office and batch end */\n  encryptedLocationDate: string;\n\n  /**\n   * Sets up Component with User Service\n   * @param {UserControllerService} userService - Allows User Services to be utilized\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /** Initilaizes the Component with the offices */\n  ngOnInit() {\n    this.getOffices();\n  }\n\n  /** Alows a New registration key to be used for New User Registration */\n  getRegistrationKey() {\n    this.userService.getRegistrationKey().subscribe(\n      data => {\n        this.registrationKey = data;\n        this.dateLocationEncryption();\n      }\n    );\n  }\n\n  /** Sets up a date and location encryption key */\n  dateLocationEncryption() {\n    let middleEncryption = btoa(this.officeObject + '~' + this.batchEnd);\n    if (middleEncryption.length != 28) {\n      middleEncryption = 'XcvF' + middleEncryption;\n    }\n    this.encryptedLocationDate = middleEncryption;\n  }\n\n  /**\n   * Retrieves all offices, called on component initialization\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n      this.officeObject = '';\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Generate Key\n      This key expires after 2 hours\n      \n        \n          Batch End\n        \n        \n      \n      \n        \n          Office Address\n        \n        \n          \n            Select Office\n            {{office.name}}\n          \n        \n      \n      Get Key\n      \n      \n      \n      \n        {{encryptedLocationDate}}{{registrationKey}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Generate Key      This key expires after 2 hours                        Batch End                                              Office Address                                      Select Office            {{office.name}}                              Get Key                                {{encryptedLocationDate}}{{registrationKey}}            '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api-error.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an error that accompanied the response to an HTTP request\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Any additional details, such which fields were missing/incorrect in a\nrequest format error. An empty array indicates that there are no such\ndetails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary message corresponding to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP status that accompanied the error. This is not returned by the\nAPI, but is provided as a convenience by the ErrorInterceptor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ApiErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiErrorType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the error, if a specific type can be associated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n    /**\n     * The primary message corresponding to the error.\n     */\n    message: String;\n    /**\n     * Any additional details, such which fields were missing/incorrect in a\n     * request format error. An empty array indicates that there are no such\n     * details.\n     */\n    details: String[];\n    /**\n   * The HTTP status that accompanied the error. This is not returned by the\n   * API, but is provided as a convenience by the ErrorInterceptor.\n   */\n    status: number;\n    /**\n    * The type of the error, if a specific type can be associated.\n    */\n    type?: ApiErrorType;\n}\n\n/**\n * A specific type of error which can be returned by the API.\n */\nexport enum ApiErrorType {\n    /**\n     * The user is not logged in.\n     */\n    NotLoggedIn = 'NOT_LOGGED_IN',\n    /**\n     * The user is logged in, but does not have permission to access an endpoint.\n     */\n    Unauthorized = 'UNAUTHORIZED',\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonTap(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  password: string;\n  confirmPassword: string;\n\n  onTap(event) {\n    console.log(event);\n  }\n\n \n}\n\n\n\n    \n\n    \n        \n\n\n \n \n -->\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountinfoComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CarRegistrationComponent\n                            \n                            \n                                FavoritesComponent\n                            \n                            \n                                HowToComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                LikesComponent\n                            \n                            \n                                LikesmatchwebComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                PlacesAutocompleteDirective\n                            \n                            \n                                RideswipeComponent\n                            \n                            \n                                UsercardComponent\n                            \n                            \n                                UsermatchwebComponent\n                            \n                            \n                                ViewProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                            \n                                     MapsControllerService\n                            \n                            \n                                     MatchingControllerService\n                            \n                            \n                                     UserControllerService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RideswipeComponent } from './components/rideswipe/rideswipe.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UsercardComponent } from './components/usercard/usercard.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { MapComponent } from './components/map/map.component';\nimport { AgmCoreModule, GoogleMapsAPIWrapper, CircleManager } from '@agm/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { UsermatchwebComponent } from './components/usermatchweb/usermatchweb.component';\nimport { LikesmatchwebComponent } from './components/likesmatchweb/likesmatchweb.component';\nimport { UserControllerService } from './services/api/user-controller.service';\nimport { MapsControllerService } from './services/api/maps-controller.service';\nimport { MatchingControllerService } from './services/api/matching-controller.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { HttpClientModule, HttpClient, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PlacesAutocompleteDirective } from './directives/places-autocomplete/places-autocomplete.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AccountinfoComponent } from './components/accountinfo/accountinfo.component';\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\nimport { JwtInterceptor } from './utils/jwt.interceptor';\nimport { ErrorInterceptor } from './utils/error.interceptor';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CarRegistrationComponent } from './components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from './components/view-profile/view-profile.component';\n// import { DateFormatPipe } from './pipes/date-format.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RideswipeComponent,\n    LandingComponent,\n    UsercardComponent,\n    HowToComponent,\n    MapComponent,\n    NavbarComponent,\n    LoginComponent,\n    LikesComponent,\n    UsermatchwebComponent,\n    LikesmatchwebComponent,\n    PlacesAutocompleteDirective,\n    FavoritesComponent,\n    AccountinfoComponent,\n    AdminComponent,\n    CarRegistrationComponent,\n    ViewProfileComponent,\n    // DateFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AnimateOnScrollModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBXWXgWzxhyvz9JyN9SrHgGOzi7VcU5G3g',\n      libraries: ['places'],\n    }),\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    NgbActiveModal,\n    MapsControllerService,\n    UserControllerService,\n    AuthService,\n    MatchingControllerService,\n    GoogleMapsAPIWrapper,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from '../components/how-to/how-to.component';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { MapComponent } from '../components/map/map.component';\nimport { RideswipeComponent } from '../components/rideswipe/rideswipe.component';\nimport { UsercardComponent } from '../components/usercard/usercard.component';\nimport { FavoritesComponent } from '../components/favorites/favorites.component';\nimport { AccountinfoComponent } from '../components/accountinfo/accountinfo.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CarRegistrationComponent } from '../components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from '../components/view-profile/view-profile.component';\n\n/**\n * This is where we set our routerLink attribute.\n * For example...\n * About\n * creates an  element of class \"dropdown-item\" that will \n * refer to these routes to find which component to route to.\n */\nexport const routes: Routes = [\n  { path: '',  pathMatch: 'full', redirectTo: 'landing' },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'landing', component: LandingComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent },\n  { path: 'accountInfo', component: AccountinfoComponent},\n  { path: 'rideswipe', component: RideswipeComponent },\n  { path: 'userCard', component: UsercardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'cars', component: CarRegistrationComponent },\n  { path: 'userProfile', component: ViewProfileComponent}\n  //{ path: 'logout', redirectTo: 'landing' }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                authenticator\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserControllerService, tokenStorage: TokenStorage, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Our http client dependency for making http requests\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to grab any user information from the API \n\n                                                        \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to save our generated token locally \n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticate(email: string, password: string, usePromise?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        usePromise\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticator\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticator(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The email address to be sent from the view to the API\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The password to be sent from the view to the API  \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap, map } from 'rxjs/operators';\nimport { UserControllerService } from './api/user-controller.service';\nimport { TokenStorage } from './../utils/token.storage';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * \n   * @param http Our http client dependency for making http requests\n   * @param userService Service used to grab any user information from the API \n   * @param tokenStorage Used to save our generated token locally \n   */\n  constructor(\n    private http: HttpClient,\n    private userService: UserControllerService,\n    private tokenStorage: TokenStorage,\n    private route: Router\n  ) { }\n  /**\n   * \n   * @param email The email address to be sent from the view to the API\n   * @param password The password to be sent from the view to the API  \n   */\n  authenticator(email: string, password: string) {\n    const credentials = { email, password };\n    console.log('in authenticate');\n    return this.http\n      .post(environment.apiUrl + '/login', credentials)\n      .pipe(\n        map(token => {\n          console.log('Saving token');\n          this.tokenStorage.saveToken(token);\n          this.userService.getCurrentUser().subscribe();\n          return null;\n        })\n      );\n  }\n\n  authenticate(email: string, password: string, usePromise?: boolean) {\n    this.authenticator(email, password).toPromise().then(\n      (x) => {\n        console.log('Got user from Authenticate (Promise mode)');\n        this.userService.getUserByEmail(email).then((x) => {\n          console.log('Gotten email of user');\n          sessionStorage.setItem('id', x.id.toString());\n          sessionStorage.setItem('firstName', x.firstName);\n          sessionStorage.setItem('lastName', x.lastName);\n          sessionStorage.setItem('active', x.active.toString());\n          sessionStorage.setItem('role', x.role);\n          sessionStorage.setItem('address', x.address);\n          sessionStorage.setItem('batchEnd', x.batchEnd);\n          sessionStorage.setItem('userEmail', email);\n          sessionStorage.setItem('userPassword', password);\n        });\n        location.reload(true);\n      },\n      (e) => {\n        // error coming from the backend\n        console.log('Printing Login error (Promise Mode)!');\n        console.log(e);\n        if (document) {\n          const messageLogin = document.getElementById('errorMessageLogin');\n          if (messageLogin) {\n            messageLogin.style.display = 'block';\n            console.log(e.message);\n            if (e.message == 'GENERAL') {\n              messageLogin.innerHTML = \"Server unavailable\";\n            } else {\n              messageLogin.innerHTML = e.message;\n            }\n          }\n        }\n        return e.message;\n      }\n    );\n  }\n\n  logout() {\n    sessionStorage.clear();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Car.html":{"url":"classes/Car.html","title":"class - Car","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/car.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the Car a User (cheifly a Driver) owns \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                model\n                            \n                            \n                                owner\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:9\n                            \n                        \n\n                \n                    \n                        The ID of the car in the database.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        make:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:15\n                            \n                        \n\n                \n                    \n                        The Producer of the Vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:17\n                            \n                        \n\n                \n                    \n                        THe model of the vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     Link\n\n                    \n                \n                    \n                        \n                            Type :     Link\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:13\n                            \n                        \n\n                \n                    \n                        The owner of this car. Represents the URL mapping to the actual user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        year:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:19\n                            \n                        \n\n                \n                    \n                        THe year the car was produced \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\nimport { Link } from './link.model';\n\n/** Represents the Car a User (cheifly a Driver) owns */\nexport class Car {\n    /**\n   * The ID of the car in the database.\n   */\n  id: number;\n  /**\n   * The owner of this car. Represents the URL mapping to the actual user\n   */\n  owner: Link;\n  /** The Producer of the Vehicle */\n  make: string;\n  /** THe model of the vehicle */\n  model: string;\n  /** THe year the car was produced */\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarRegistrationComponent.html":{"url":"components/CarRegistrationComponent.html","title":"component - CarRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/car-registration/car-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the functionality of car registration and management\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car-registration\n            \n\n            \n                styleUrls\n                car-registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car-registration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnCarInfo\n                            \n                            \n                                carMake\n                            \n                            \n                                carModel\n                            \n                            \n                                carObject\n                            \n                            \n                                cars\n                            \n                            \n                                carYear\n                            \n                            \n                                optInToDrive\n                            \n                            \n                                userObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshFields\n                            \n                            \n                                resetCars\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n                \n                    \n                            Sets up the Car Registration component with dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to manager the user AND the cars available on the system\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCarToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCarToUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Sets the car with appropriate values and sends it to the server using the User Service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Makes sure there is a car object available to operate on\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Refreshes the fields in the Car form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCars\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCars()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Clears the fields in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Ensures that the component is working with the logged on user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnCarInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        btnCarInfo:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carMake\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carMake:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:29\n                            \n                        \n\n                \n                    \n                        The company that manufactured it\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carModel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model of the car\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carObject:     Car\n\n                    \n                \n                    \n                        \n                            Type :     Car\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:25\n                            \n                        \n\n                \n                    \n                        The car to create and register\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cars:     Car[]\n\n                    \n                \n                    \n                        \n                            Type :     Car[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:49\n                            \n                        \n\n                \n                    \n                        List of cars owned by the ownwer to present in a table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:39\n                            \n                        \n\n                \n                    \n                        When the car was produced\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optInToDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optInToDrive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:44\n                            \n                        \n\n                \n                    \n                        Relic from the AccountInfoComponent that previously managed cars\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userObject:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:19\n                            \n                        \n\n                \n                    \n                        The User that owns the car\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Car } from '../../models/car.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Supports the functionality of car registration and management\n */\n@Component({\n  selector: 'app-car-registration',\n  templateUrl: './car-registration.component.html',\n  styleUrls: ['./car-registration.component.css']\n})\nexport class CarRegistrationComponent implements OnInit {\n\n  /**\n   * The User that owns the car\n   */\n  userObject: User;\n\n  // for drivers\n  /**\n   * The car to create and register\n   */\n  carObject: Car;\n  /**\n   * The company that manufactured it\n   */\n  carMake: string;\n\n  /**\n   * Model of the car\n   */\n  carModel: string;\n\n  /**\n   * When the car was produced\n   */\n  carYear: number;\n\n  /**\n   * Relic from the AccountInfoComponent that previously managed cars\n   */\n  optInToDrive: boolean;\n\n  /**\n   * List of cars owned by the ownwer to present in a table\n   */\n  cars: Car[];\n\n  // booleans for car information buttons\n  btnCarInfo: Number = 0;\n\n  /**\n   * Sets up the Car Registration component with dependencies\n   * @param {UserControllerService} userService - the Service that allows us to manager the user AND the cars available on the system\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Makes sure there is a car object available to operate on\n   */\n  ngOnInit() {\n    this.carObject = new Car();\n  }\n\n  /**\n   * Clears the fields in the form\n   */\n  resetCars() {\n\n    if (this.cars !== undefined && this.cars != null && this.cars.length !== 0) {\n      return;\n    }\n    this.resetUser();\n    const userId = this.userObject.id;\n    this.cars = [];\n    this.userService.getAllCars().subscribe(c => {\n\n      c.forEach(element => {\n        const strNum = element.owner.substring(7);\n        const num = Number.parseInt(strNum);\n        if (num === userId) {\n          this.cars.push(element);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Ensures that the component is working with the logged on user\n   */\n  resetUser() {\n    this.userService.getCurrentUser().subscribe(user => {\n      console.log('Car reg: Gotten User: ' + user);\n      this.userObject = user;\n    },\n    e => {\n      console.log('Car reg: Failed to get user: ' + e);\n    });\n\n  }\n\n  /**\n   * Sets the car with appropriate values and sends it to the server using the User Service\n   */\n  addCarToUser() {\n\n    this.resetUser();\n\n    this.carObject.id = 0;\n    this.carObject.make = this.carMake;\n    this.carObject.model = this.carModel;\n\n    this.carObject.owner = '/users/' + this.userObject.id.toString();\n    this.carObject.year = this.carYear;\n    // this.userObject.cars.push(this.carObject);\n\n    this.userService.createCar(this.carObject).subscribe(car => {\n      this.carObject = car;\n    });\n\n  }\n\n  /**\n   * Refreshes the fields in the Car form\n   */\n  refreshFields() {\n    this.carMake = '';\n    this.carModel = '';\n    this.carYear = new Date().getFullYear();\n  }\n\n}\n\n    \n\n    \n        \n  \n  Car Information:\n  \n  \n  \n  \n    \n      \n        Make\n      \n      \n    \n\n    \n      \n        Model\n      \n      \n    \n\n    \n      \n        Year\n      \n      \n    \n    \n      \n        Submit\n      \n      Add Car\n      Clear Fields\n    \n    \n       0\">\n        \n          ID\n          Make\n          Model\n          Year\n        \n        \n          {{c.id}}\n          {{c.make}}\n          {{c.model}}\n          {{c.year}}\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Car Information:                          Make                                  Model                                  Year                                  Submit            Add Car      Clear Fields               0\">                  ID          Make          Model          Year                          {{c.id}}          {{c.make}}          {{c.model}}          {{c.year}}                                '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactInfo.html":{"url":"interfaces/ContactInfo.html","title":"interface - ContactInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contact-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Holds a means of contacting a user \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this contact info entry in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The details specifying the user's username/phone number/etc. on the\nservice.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represente the type of contact info available \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ContactInfo {\n    /**\n     * The ID of this contact info entry in the database.\n     */\n    id: Number;\n    /** Represente the type of contact info available */\n    type: String;\n    /**\n     * The details specifying the user's username/phone number/etc. on the\n     * service.\n     */\n    info: String;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/error.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/error.interceptor.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError, ApiErrorType } from '../models/api-error.model';\nimport { AuthService } from './../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred.\n          console.error('Network error:', err.error);\n          return throwError(err.error);\n        } else {\n          // API error.\n          const apiError = err.error;\n          apiError.status = err.status;\n          // Automatically log out if the error was due to being not logged in.\n          if (apiError.type === ApiErrorType.NotLoggedIn) {\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          return throwError(apiError);\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n    \n        Description\n    \n    \n        Provides an over view of User Likes, distinguishing between the mobile view and desktop view \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                            Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the device is amobile device and sets view accordingly \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                        Whether or not the Device is a mobile device \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Provides an over view of User Likes, distinguishing between the mobile view and desktop view */\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n\n  /** Whether or not the Device is a mobile device */\n  public mobile = false;\n\n  /**\n   * Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n   */\n  constructor() { }\n\n  /** Checks to see if the device is amobile device and sets view accordingly */\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n    \n  \n  \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geocode.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geocode\n                            \n                            \n                                reverseGeocode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geocode.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocode(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverseGeocode\n                            \n                            \n                        \n                    \n                \n                \n                    \nreverseGeocode(latLng: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodeService {\n\n  geocoder: google.maps.Geocoder;\n\n  constructor() {\n    this.geocoder = new google.maps.Geocoder();\n  }\n\n  reverseGeocode(latLng: google.maps.LatLng): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ location: latLng }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log('Geocoding service: geocoder failed due to: ' + status);\n            observer.error(status);\n          }\n        })\n      );\n    });\n  }\n\n  geocode(address: string): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ address: address }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log(\n              'Geocoding service: geocode was not successful for the following reason: '\n              + status\n            );\n            observer.error(status);\n          }\n        })\n      );\n    });\n    return null;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowToComponent.html":{"url":"components/HowToComponent.html","title":"component - HowToComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowToComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/how-to/how-to.component.ts\n\n\n    \n        Description\n    \n    \n        Exists for Displaying a How-to page \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to\n            \n\n            \n                styleUrls\n                how-to.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Exists for Displaying a How-to page */\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      How to Use Revature RideForce\n    \n      \n      Registering an Account:\n      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.\n      \n      \n      Create Profile:\n      Creating your profile is the first part of the process for registering a new account.\n      \n      This section requires you to input a variety of information:\n      \n        Your first name\n        Last name\n        Username\n        Password\n        Confirm Password\n        Key: Allows access to RideForce given to you by your instructor\n        Office Address\n        Apartment Address\n        Batch End Date: Instructor should also notify you on your batch end date\n      \n      Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.\n        Biography:\n        The \"Biography\" section requires some more information from you with a little more effort on detail:\n        \n          About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential\n            fit as a passenger or driver.\n          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,\n            Discord, GroupMe, and other potential services of your choosing.\n        \n        When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking\n          on the \"Next\" button.\n        Car Info:\n        Within this section there are three options: Car, Passenger, or Both.\n        \n        If you do not have a car and plan on only being passenger, simply click next and move on to the next section.\n        \n        If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:\n        \n          Make: Enter the brand of your vehicle.\n          Model: Enter model of your vehicle.\n          Year: Enter year of your vehicle.\n        \n        Once all required information is entered depending on the option chose, move on to the final section by clicking the\n          \"Next\" button.\n        Review and Submit:\n        You are now finished entering all required information and may review what you have entered thus far within this section.\n        \n        If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.\n        \n        Once the information looks good, give it one more look and then click \"Submit\".\n        \n        Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!\n        \n        \n        Login:\n        In order to login, you must have a registered account. If you haven't registered one yet, please refer to the \"Registering Account\" section above.\n        \n        To login, simply click \"Login\" on the navigation bar.\n        \n        You should now see the login view, which contains two input fields: \"Username\" and \"Password\".\n        \n        Simply enter in your registered account's username and password into the respective input fields and click the big blue \"Login\" button underneath them.\n        \n        \n        Map:\n        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.\n        \n        After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver's and passenger's addresses.\n        \n        If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.\n        \n        \n        Browse:\n        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.\n        \n        This will bring you to a view displaying a potential driver.\n        \n        After viewing the potential driver's profile, if you think they are a good match, then \"like\" them as a potential driver.\n        \n        If you think they are not a good match, simply \"dislike\" them and move on to the next.\n        \n        \n        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.\n        \n        The order of drivers is determined by distance, so closer drivers will appear first on your browse page.\n        \n        You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"\n        \n        Within this \"liked list\" you can once again view your \"liked\" drivers profiles.\n        \n        Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it's a good match!\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              How to Use Revature RideForce                Registering an Account:      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.                  Create Profile:      Creating your profile is the first part of the process for registering a new account.            This section requires you to input a variety of information:              Your first name        Last name        Username        Password        Confirm Password        Key: Allows access to RideForce given to you by your instructor        Office Address        Apartment Address        Batch End Date: Instructor should also notify you on your batch end date            Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.        Biography:        The \"Biography\" section requires some more information from you with a little more effort on detail:                  About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential            fit as a passenger or driver.          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,            Discord, GroupMe, and other potential services of your choosing.                When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking          on the \"Next\" button.        Car Info:        Within this section there are three options: Car, Passenger, or Both.                If you do not have a car and plan on only being passenger, simply click next and move on to the next section.                If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:                  Make: Enter the brand of your vehicle.          Model: Enter model of your vehicle.          Year: Enter year of your vehicle.                Once all required information is entered depending on the option chose, move on to the final section by clicking the          \"Next\" button.        Review and Submit:        You are now finished entering all required information and may review what you have entered thus far within this section.                If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.                Once the information looks good, give it one more look and then click \"Submit\".                Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!                        Login:        In order to login, you must have a registered account. If you haven\\'t registered one yet, please refer to the \"Registering Account\" section above.                To login, simply click \"Login\" on the navigation bar.                You should now see the login view, which contains two input fields: \"Username\" and \"Password\".                Simply enter in your registered account\\'s username and password into the respective input fields and click the big blue \"Login\" button underneath them.                        Map:        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.                After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver\\'s and passenger\\'s addresses.                If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.                        Browse:        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.                This will bring you to a view displaying a potential driver.                After viewing the potential driver\\'s profile, if you think they are a good match, then \"like\" them as a potential driver.                If you think they are not a good match, simply \"dislike\" them and move on to the next.                        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.                The order of drivers is determined by distance, so closer drivers will appear first on your browse page.                You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"                Within this \"liked list\" you can once again view your \"liked\" drivers profiles.                Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it\\'s a good match!      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'HowToComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/jwt.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/jwt.interceptor.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorage } from './token.storage';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private tokenStorage: TokenStorage) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.tokenStorage.getToken();\n    if (token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing/landing.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the Carousel Appearence as a Site Intro\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates the Landing Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Component to utilize User Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Initializes the component by retrieving the User\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Checks to see if there is a session or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:16\n                            \n                        \n\n                \n                    \n                        Holds the current user of the program \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                        Whether a User is, in fact, logged on \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n// import { Router } from '@angular/router';\n\n/**\n * Supports the Carousel Appearence as a Site Intro\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n  /** Holds the current user of the program */\n  currentUser: User;\n  /** Whether a User is, in fact, logged on */\n  session: boolean;\n\n  /**\n   * Creates the Landing Component\n   * @param {UserControllerService} userService - Allows Component to utilize User Functionality\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Initializes the component by retrieving the User\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  //   this.userService.getCurrentUserObservable().subscribe(\n  //   data => {\n  //     this.currentUser = data;\n  //     console.log(this.currentUser)\n  //   }\n  // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Checks to see if there is a session or not\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n        \n      \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n\n\n    \n   -->\n\n    \n        RideForce\n        Looking for a ride? Sign up today to be a driver or a rider\n        Get\n            Started\n        Browse\n        \n          For more information,\n          click here\n        \n      \n\n      \n      RideForce\n      Looking for a ride? Sign up today to be a driver or a rider\n      Get\n          Started\n\n      \n        For more information,\n        click here\n      \n     -->\n\n\n      \n\n          Need a ride? Look no further than RideForce!\n          Use the App to find drivers to carpool in your\n          circle or area!\n\n\n       -->\n    \n      \n      \n        \n\n          Rider\n          If you're looking to carpool to and from work, then RideForce is the app for you. Use\n            the app to find and like drivers who you enjoy riding with.\n        \n        \n\n          Driver\n          Want to give others a ride? Sign up to be a driver to help others find a way and lessen\n            the burden of gas prices.\n        \n        \n\n          Safe\n          Find drivers and riders within your employer's company, circle, or group. Members are\n            give a token that will expire in 2 hours so both riders and drivers are approved by the group\n        \n      \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Previous            Next         -->            RideForce        Looking for a ride? Sign up today to be a driver or a rider        Get            Started        Browse                  For more information,          click here                          RideForce      Looking for a ride? Sign up today to be a driver or a rider      Get          Started              For more information,        click here           -->                Need a ride? Look no further than RideForce!          Use the App to find drivers to carpool in your          circle or area!       -->                                  Rider          If you\\'re looking to carpool to and from work, then RideForce is the app for you. Use            the app to find and like drivers who you enjoy riding with.                          Driver          Want to give others a ride? Sign up to be a driver to help others find a way and lessen            the burden of gas prices.                          Safe          Find drivers and riders within your employer\\'s company, circle, or group. Members are            give a token that will expire in 2 hours so both riders and drivers are approved by the group              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesComponent.html":{"url":"components/LikesComponent.html","title":"component - LikesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likes/likes.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a mobile device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likes\n            \n\n            \n                styleUrls\n                likes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                swipecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:34\n                            \n                        \n\n                \n                    \n                        Hold current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { User } from '../../models/user.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Component that shows User Likes on a mobile device\n */\n@Component({\n    selector: 'app-likes',\n    templateUrl: './likes.component.html',\n    styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    swipecards: SwipecardModel[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(data2);\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n   \n      \n        \n        \n          {{card.user.firstName}}\n          Some example text.\n          Like\n        \n      \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{card.user.firstName}}          Some example text.          Like                  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesmatchwebComponent.html":{"url":"components/LikesmatchwebComponent.html","title":"component - LikesmatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesmatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likesmatchweb/likesmatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a desktop device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likesmatchweb\n            \n\n            \n                styleUrls\n                likesmatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likesmatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                likecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:57\n                            \n                        \n\n                \n                    \n                        Hold the current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        likecards:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n    \n        \n  Your Likes\n  \n    \n      \n        \n          \n            \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n               {{user.user.email}} \n              Like\n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your Likes                                                                                {{user.user.firstName}} {{user.user.lastName}}               {{user.user.email}}               Like                                                          {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesmatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/location.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a specific location on Earth \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the North/West value of the location \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The East/West value of the location \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n    /** the North/West value of the location */\n    latitude: number;\n    /** The East/West value of the location */\n    longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Responsible for providing a user the ability to log in\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                userEmail\n                            \n                            \n                                userPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Sets up the Login compoennt with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides the ability to authenticate the user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the ability to navigate to landing if user is already logged on\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(Unused) Provides cUser Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Gets the parameters from the login fields. \nIf the login fails, displays the error message sent by the server under the password field.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checking to see if there is a current user, and if there is, redirects to landing.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        The User to log on to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        The \"username\" of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        The password associated with the indended account\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Responsible for providing a user the ability to log in\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * The \"username\" of the user\n   */\n  userEmail: string;\n\n  /**\n   * The password associated with the indended account\n   */\n  userPass: string;\n\n  /**\n   * The User to log on to\n   */\n  currentUser: User;\n\n  /**\n   * Sets up the Login compoennt with dependency injection\n   * @param { AuthService} authService - Provides the ability to authenticate the user\n   * @param {Router} route - provides the ability to navigate to landing if user is already logged on\n   * @param {UserControllerService} userService - (Unused) Provides cUser Functionality\n   */\n  constructor(private authService: AuthService, private route: Router, private userService: UserControllerService) { }\n\n  /**\n   * Checking to see if there is a current user, and if there is, redirects to landing.\n   */\n  ngOnInit() {\n      if (sessionStorage.length > 0){\n        this.route.navigate(['/landing']);\n      }\n    }\n\n\n  // getUser(email: string) {\n  //   let user;\n  //   return this.userService.getUserByEmail(email).subscribe();\n  // }\n\n  /**\n   * Gets the parameters from the login fields. \n   * If the login fails, displays the error message sent by the server under the password field.\n   */\n  login() {\n    this.authService.authenticate(this.userEmail, this.userPass);\n  }\n}\n\n    \n\n    \n         -->\n\n\n  \n    \n    \n     Sign In \n    Sign Up \n   -->\n    \n    \n\n       \n       -->\n    \n\n    \n    \n    \n      \n      \n      Default Message\n      \n    \n  \n\n    \n    \n      Register\n      |\n      Forgot Password? \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->               Sign In     Sign Up    -->                      -->                                  Default Message                          Register      |      Forgot Password?       '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsControllerService.html":{"url":"injectables/MapsControllerService.html","title":"injectable - MapsControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/maps-controller.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistance\n                            \n                            \n                                    Public\n                                getRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/maps-controller.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistance(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Sends address as string to location endpoint in Map Service. Map Service returns geographic location\nin latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoute(start: string, end: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Takes in 2 addresses and calculates the distance and travel time between them\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { LatLngLiteral } from '@agm/core';\nimport { RouteInfo } from '../../models/route-info.model';\n\n@Injectable()\nexport class MapsControllerService {\n\n public constructor(private http: HttpClient) { }\n\n  /** \n  * Sends address as string to location endpoint in Map Service. Map Service returns geographic location\n  * in latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n  */                                        \n  getDistance(address: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/location', {\n      params: { address },\n    });\n  }\n\n  /**\n   * Takes in 2 addresses and calculates the distance and travel time between them\n   * \n   * @param start string address\n   * @param end string address\n   */\n  public getRoute(start: string, end: string): Observable { // gives back latitude and longitude\n    \n    return this.http.get(environment.apiUrl + '/route', {\n      params: { start, end },\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/marker.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an object that could appear on a map \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        placeId\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The address the marker represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can it move around \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any Identifier a User might use \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the actual location on the map \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeId\n                                    \n                                \n                                \n                                    \n                                        placeId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra identification for the marker \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Does it represent any specific user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Marker {\n    /** the actual location on the map */\n    location: google.maps.LatLngLiteral;\n    /** The address the marker represents */\n    address?: string;\n    /** Any Identifier a User might use */\n    label?: string;\n    /** Does it represent any specific user */\n    userId?: number;\n    /** Can it move around */\n    draggable?: boolean;\n    /** Extra identification for the marker */\n    placeId?: string;\n    // icon?: string;\n    // infoWindow?: boolean;\n    // comments?: string[];\n    // saved?: boolean;\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchingControllerService.html":{"url":"injectables/MatchingControllerService.html","title":"injectable - MatchingControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchingControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/matching-controller.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dislikeDriver\n                            \n                            \n                                getDislikedDrivers\n                            \n                            \n                                getFromLink\n                            \n                            \n                                getLikedDrivers\n                            \n                            \n                                getMatchingDrivers\n                            \n                            \n                                likeDriver\n                            \n                            \n                                unDislikeDriver\n                            \n                            \n                                unlikeDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/matching-controller.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \ndislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id unliked the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDislikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDislikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns all users disliked by the user with the given ID\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromLink(uri: Link)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            will deserialize the link object. returns the object reference from the link\na link is a reference to the object without having to fetch the object from the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    Link\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns all users liked by the user with the given ID.\nReturns this as an array of strings in the format\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Returns all drivers who match the rider with the given user ID.\n\"/users/{userid}\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id likes the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unDislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunDislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id disliked the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id likes the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from \"../../../app/models/user.model\";\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Link } from '../../models/link.model';\n\n@Injectable()\nexport class MatchingControllerService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * will deserialize the link object. returns the object reference from the link\n   * a link is a reference to the object without having to fetch the object from the database\n   * @param uri \n   */\n  getFromLink(uri: Link): Observable {\n    return this.http.get(environment.apiUrl + uri);\n  }\n  /**\n   * Returns all drivers who match the rider with the given user ID.\n   * \"/users/{userid}\"\n   * \n   * @param riderId\n   */\n  getMatchingDrivers(riderId: number): Observable[]> {\n   \n    return this.http.get[]>(environment.apiUrl + `/matches/${riderId}`);\n  }\n\n  /**\n   * Returns all users liked by the user with the given ID.\n   * Returns this as an array of strings in the format\n   * \n   * @param riderId \n   */\n  getLikedDrivers(riderId: number): Observable[]> {\n    console.log(environment.apiUrl + `/matches/likes/${riderId}`);\n    return this.http.get[]>(environment.apiUrl + `/matches/likes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id likes the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  likeDriver(riderId: number, driverId: number): Observable {\n    \n    return this.http.put[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`, '');\n\n  }\n\n  /**\n   * Removes any indication that the user with ID :id likes the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unlikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`);\n  }\n\n  /**\n   * Returns all users disliked by the user with the given ID\n   * @param riderId \n   */\n  getDislikedDrivers(riderId: number): Observable[]> {\n    return this.http.get[]>(environment.apiUrl + `/matches/dislikes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id unliked the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  dislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.put[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`, '');\n  }\n\n  /**\n   *  Removes any indication that the user with ID :id disliked the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unDislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Hosts the Component that allows users to navigate between components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the component with relevent services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows User Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(unused, should be used by Login component) Enables component to authenticate user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Sets up the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Allows User to log out of their session\nuses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Sets up the Log in Session appearence\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Updates the status of our session ( is the user currently logged on?)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the current user of the app \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     \n\n                    \n                \n                    \n                        \n                            Default value : sessionStorage.length > 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether the User is logged on or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n/**\n * Hosts the Component that allows users to navigate between components\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  /** Holds the current user of the app */\n  currentUser: User;\n  /**\n   * Whether the User is logged on or not\n   */\n  session = sessionStorage.length > 0;\n\n  /**\n   * Sets up the component with relevent services\n   * @param {UserControllerService} userService - allows User Services to be utilized\n   * @param {AuthService} authService - (unused, should be used by Login component) Enables component to authenticate user\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private userService: UserControllerService,\n    private authService: AuthService,\n    private route: Router) { }\n\n  /**\n   * Sets up the Log in Session appearence\n   */\n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Updates the status of our session ( is the user currently logged on?)\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n  /**\n   * Sets up the current user\n   */\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  }\n  // checkIfLoggedIn(){\n  //   if(this.userService.isLoggedIn){\n  //     this.isLoggedIn = true;\n  //   } \n  //   else if(!this.userService.isLoggedIn) {\n  //     this.isLoggedIn = false;\n  //   }\n  // }\n\n  // getCurrentUser(){\n  //   this.userService.getCurrentUser().subscribe(\n  //     data => {\n  //       this.currentUser = data;\n  //     }\n  //   )\n  // }\n\n  /**\n   * Allows User to log out of their session\n   * uses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n   */\n  async logout() {\n    sessionStorage.clear();\n    if (this.route.url === \"/landing\") {\n      location.reload(true);\n    } else {\n      await this.route.navigate([\"/landing\"]);\n      location.reload(true);\n    }\n  }\n}\n\n    \n\n    \n        \n   -->\n    \n     -->\n    \n      \n    \n    \n        \n          \n        \n        \n          About\n          User Settings\n        \n      \n    \n      \n        Home(current)\n        Login\n        Get Key\n        Map\n        Browse\n        Favorites\n        Car\n        Logout\n      \n  \n  \n      \n        \n      \n      \n      \n        About\n        User Settings\n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->         -->                                                              About          User Settings                                Home(current)        Login        Get Key        Map        Browse        Favorites        Car        Logout                                                  About        User Settings          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Office.html":{"url":"interfaces/Office.html","title":"interface - Office","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Office\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/office.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents Offices a User might hold \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Where the office is located \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the office in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The common name of the office (e.g. \"Reston\").\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Office {\n\n  /**\n   * The ID of the office in the database.\n   */\n  id: number;\n  /**\n   * The common name of the office (e.g. \"Reston\").\n   */\n  name: string;\n  /** Where the office is located */\n  address: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlacesAutocompleteDirective.html":{"url":"directives/PlacesAutocompleteDirective.html","title":"directive - PlacesAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlacesAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlacesAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedAddress\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressSelect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, mapsAPILoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressSelect\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormattedAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormattedAddress(place: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        place\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     HTMLInputElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\n@Directive({\n  selector: '[appPlacesAutocomplete]'\n})\nexport class PlacesAutocompleteDirective implements OnInit {\n\n  private element: HTMLInputElement;\n\n  @Output()\n  addressSelect: EventEmitter = new EventEmitter();\n\n  constructor(private elRef: ElementRef, private mapsAPILoader: MapsAPILoader) {\n    this.element = elRef.nativeElement;\n  }\n\n  getFormattedAddress(place) {\n    const location_obj = {};\n    return place;\n  }\n\n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.element);\n      autocomplete.addListener('place_changed', () => {\n        this.addressSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the object the Account Info component would use when creating a new user in the system \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    THe password of the new user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The long token granted by an administrator (or trainer) to allow new User registration \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User name of the new user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n  /** The User name of the new user */\n  username: string;\n  /** THe password of the new user */\n  password: string;\n  /** The long token granted by an administrator (or trainer) to allow new User registration */\n  token: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RideswipeComponent.html":{"url":"components/RideswipeComponent.html","title":"component - RideswipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RideswipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rideswipe/rideswipe.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rideswipe\n            \n\n            \n                styleUrls\n                rideswipe.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rideswipe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rideswipe',\n  templateUrl: './rideswipe.component.html',\n  styleUrls: ['./rideswipe.component.css']\n})\nexport class RideswipeComponent implements OnInit {\n\n  public mobile = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'RideswipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"interfaces/RouteInfo.html","title":"interface - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Provides the barebones information about a given route \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route distance, in meters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route time, in seconds.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteInfo {\n    /**\n * The total route distance, in meters.\n */\n    distance: number;\n    /**\n     * The total route time, in seconds.\n     */\n    duration: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwipecardModel.html":{"url":"classes/SwipecardModel.html","title":"class - SwipecardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwipecardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/swipecard.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a User object that could be hidden in an HTML list \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:6\n                            \n                        \n\n                \n                    \n                        The Given User \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:8\n                            \n                        \n\n                \n                    \n                        Is is visible or hidden? \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\n\n/** Represents a User object that could be hidden in an HTML list */\nexport class SwipecardModel {\n    /** The Given User */\n    user: User;\n    /** Is is visible or hidden? */\n    visible = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorage.html":{"url":"injectables/TokenStorage.html","title":"injectable - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/token.storage.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/token.storage.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'authToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorage {\n  constructor() { }\n\n  signOut() {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FOLDER\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getS3Bucket\n                            \n                            \n                                uploadfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3Bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetS3Bucket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadfile(file: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOLDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FOLDER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rydeforce-s3/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as S3 from 'aws-sdk/clients/s3';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  FOLDER = 'rydeforce-s3/';\n  url: any;\n  \n  constructor() { }\n\n  getS3Bucket(): any {\n    const bucket = new S3 (\n    {\n    accessKeyId: 'AKIAIRZG4TK6EBLZV7GA',\n    secretAccessKey: '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',\n    region: 'us-east-1'\n    }\n    );\n    return bucket;\n  } \n\n  uploadfile(file) {\n   const params = {\n      Bucket: 'rydeforce',\n      Key: this.FOLDER + Math.floor(Math.random() * 100000000000) + file.name ,\n      Body: file\n       // allow that and instead assign numbers on the beginning of the name.\n    };\n\n    let upResult = this.getS3Bucket().upload(params, function (err, data) {\n      if (err) {\n        console.log('There was an error uploading your file: ', err);\n        return false;\n      }\n      console.log('Successfully uploaded file.', data);\n      console.log(params);\n\n      return true;\n    });\n    if (!upResult.failed) {\n      console.log('upload successful');\n      this.url = 'https://s3.us-east-1.amazonaws.com/' + params.Bucket + '/' + params.Key;\n    } else {\n      console.log('upload failed');\n    }\n\n    console.log('BEFORE RETURNING, this.url is: ' + this.url);\n    return this.url;\n  }\n} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        address\n                                \n                                \n                                        batchEnd\n                                \n                                \n                                        cars\n                                \n                                \n                                        contactInfo\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        office\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        role\n                                \n                                \n                                            Optional\n                                        venmo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user's account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's home address (where they currently live).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchEnd\n                                    \n                                \n                                \n                                    \n                                        batchEnd:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cars\n                                    \n                                \n                                \n                                    \n                                        cars:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of cars the User might own (holds the URL mapping to those cars) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactInfo\n                                    \n                                \n                                \n                                    \n                                        contactInfo:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's contact information.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        office\n                                    \n                                \n                                \n                                    \n                                        office:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's office (where they work).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL to the user's profile photo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's role, determining what permissions they have to access data on\nthe server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venmo\n                                    \n                                \n                                \n                                    \n                                        venmo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user's Venmo username.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from './link.model';\nimport { Office } from './office.model';\nimport { Car } from './car.model';\nimport { ContactInfo } from './contact-info.model';\nimport { Role } from './role.model';\n\nexport interface User {\n  /**\n   * The ID of the user in the database.\n   */\n  id: number;\n  /** The first name of a user */\n  firstName: string;\n  /** The last name of a user */\n  lastName: string;\n  /** The username of a user */\n  email: string;\n  /**\n   * The URL to the user's profile photo.\n   */\n  photoUrl: string;\n  /**\n   * The user's home address (where they currently live).\n   */\n  address: string;\n  /**\n   * The user's office (where they work).\n   */\n  office: Link;\n  /**\n   * The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n   */\n  batchEnd: any;\n  /** List of cars the User might own (holds the URL mapping to those cars) */\n  cars: Link[];\n  /**\n   * The user's Venmo username.\n   */\n  venmo?: string;\n  /**\n   * The user's contact information.\n   */\n  contactInfo: Link[];\n  /**\n   * Whether the user's account is active.\n   */\n  active: boolean;\n  /**\n   * The user's role, determining what permissions they have to access data on\n   * the server.\n   */\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard.html":{"url":"interfaces/UserCard.html","title":"interface - UserCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/likesmatchweb/likesmatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Used as a more complex data structure for holding info on liked users\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    (Unknown) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status of the User \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Driver that they like \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard-1.html":{"url":"interfaces/UserCard-1.html","title":"interface - UserCard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/usermatchweb/usermatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents the User selection item in the html page \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the given user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to profile picture of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User being represented \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsercardComponent.html":{"url":"components/UsercardComponent.html","title":"component - UsercardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsercardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usercard/usercard.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a mobile view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usercard\n            \n\n            \n                styleUrls\n                usercard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usercard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animState\n                            \n                            \n                                animThumbState\n                            \n                            \n                                currentIndex\n                            \n                            \n                                currentSwipeCard\n                            \n                            \n                                currentUser\n                            \n                            \n                                SWIPE_ACTION\n                            \n                            \n                                swipeCardBio\n                            \n                            \n                                swipeCardMain\n                            \n                            \n                                swipecards\n                            \n                            \n                                thumbImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                swipe\n                            \n                            \n                                swiped\n                            \n                            \n                                thumbAnimDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideImage(hide: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Hides the card picture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hide\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipe\n                            \n                            \n                        \n                    \n                \n                \n                    \nswipe(action: , user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            action triggered when user swipes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.SWIPE_ACTION.RIGHT\n                                                        \n\n                                                \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swiped\n                            \n                            \n                        \n                    \n                \n                \n                    \nswiped()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Called when the swipe animation has completed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbAnimDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nthumbAnimDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Called when the Thumb Animation is done\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:49\n                            \n                        \n\n                \n                    \n                        Keeps track of the Animation state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animThumbState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animThumbState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'one'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:51\n                            \n                        \n\n                \n                    \n                        Keeps track of the Thumb animation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:47\n                            \n                        \n\n                \n                    \n                        Index of the Current User being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSwipeCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSwipeCard:     SwipecardModel\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:45\n                            \n                        \n\n                \n                    \n                        User currently being looked at \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:68\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWIPE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SWIPE_ACTION:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { LEFT: 'swipeleft', RIGHT: 'swiperight' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:37\n                            \n                        \n\n                \n                    \n                        constant for swipe action: left or right \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardBio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardBio:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeBio' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardMain:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:56\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeMain' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:39\n                            \n                        \n\n                \n                    \n                        our list of swipecards: DUMMY DATA \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icons/thumbsDown.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:53\n                            \n                        \n\n                \n                    \n                        Location of the thumbnail image files \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { AddressModel } from '../../models/address.model';\nimport { Link } from '../../models/link.model';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Allows Views for Other Users in a mobile view\n */\n@Component({\n    selector: 'app-usercard',\n    templateUrl: './usercard.component.html',\n    styleUrls: ['./usercard.component.css'],\n    animations: [\n        trigger('slide', [\n            state('center', style({ transform: 'translateX(0)' })),\n            state('left', style({ transform: 'translateX(-200%)' })),\n            state('right', style({ transform: 'translateX(200%)' })),\n            transition('* => *', animate(100))\n        ]),\n        trigger('pop', [\n            state('one', style({ transform: 'scale(1)', opacity: 0 })),\n            state('two', style({ transform: 'scale(1.2)', opacity: .8 })),\n            transition('one => two', animate(200)),\n            transition('two => one', animate(100))\n        ])\n    ]\n})\nexport class UsercardComponent implements OnInit {\n\n    /** constant for swipe action: left or right */\n    SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n    /** our list of swipecards: DUMMY DATA */\n    swipecards: SwipecardModel[] = [\n\n    ];\n\n\n    /** User currently being looked at */\n    currentSwipeCard: SwipecardModel;\n    /** Index of the Current User being viewed */\n    currentIndex = 0;\n    /** Keeps track of the Animation state */\n    animState = 'center';\n    /** Keeps track of the Thumb animation */\n    animThumbState = 'one';\n    /** Location of the thumbnail image files */\n    thumbImg = 'assets/icons/thumbsDown.png';\n\n    /** Represents the div element 'swipeMain' */\n    @ViewChild('swipeMain') swipeCardMain: ElementRef;\n    /** Represents the div element 'swipeBio' */\n    @ViewChild('swipeBio') swipeCardBio: ElementRef;\n\n    /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /** Holds the current user of the system */\n    currentUser: User;\n\n    /**\n     * Sets up the component by populating the list of possibel matches for the current user\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('data');\n                this.currentUser = data;\n                console.log(this.currentUser);\n                let userLinks: Link[] = null;\n                this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        // console.log(\"data2 is \" + data2);\n                        userLinks = data2;\n                        console.log(userLinks);\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                    // Sets the current swipe card to the first element of the array if the array has something in it.\n                                    if (this.swipecards.length > 0) {\n                                        this.currentSwipeCard = this.swipecards[0];\n                                    }\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        );\n\n\n\n    }\n\n    /**\n     * Hides the card picture\n     *\n     * @param hide\n     */\n    hideImage(hide: boolean) {\n        if (hide) {\n            this.swipeCardMain.nativeElement.classList.add('hidden');\n        } else {\n            this.swipeCardMain.nativeElement.classList.remove('hidden');\n        }\n    }\n\n    /**\n     *  action triggered when user swipes\n     */\n     swipe(action = this.SWIPE_ACTION.RIGHT, user) {\n        this.animThumbState = 'two';\n        // swipe right, next avatar\n        if (action === this.SWIPE_ACTION.RIGHT) {\n            this.animState = 'right';\n            this.thumbImg = 'assets/icons/thumbsUp.png';\n            this.matchService.unDislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.likeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n\n        // swipe left, previous avatar\n        if (action === this.SWIPE_ACTION.LEFT) {\n            this.animState = 'left';\n            this.thumbImg = 'assets/icons/thumbsDown.png';\n            console.log(this.currentUser.id);\n            console.log(this.swipecards[this.currentIndex].user.id);\n            this.matchService.unlikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.dislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n        this.swipecards.splice(this.currentIndex, 1);\n    }\n\n    /**\n     * Called when the swipe animation has completed\n     */\n    swiped() {\n        if (this.animState === 'left') {\n            this.animState = 'center';\n            if (this.currentIndex + 1 > this.swipecards.length - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n        } else if (this.animState === 'right') {\n            this.animState = 'center';\n            if (this.currentIndex - 1 \n    \n\n    \n        \n    \n     0\">\n        \n            \n                \n                \n                     -->\n                    \n                \n\n                \n                    \n                        {{currentSwipeCard.user.firstName}} \n                    \n                     duration / distance\n                     contacts\n                    link to bio\n                \n                \n                \n                \n                \n                \n            \n            \n                \n                    \n                        Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}\n                    \n                    Distance: \n                    Contact: \n                    car info: \n                    ride info: \n                \n            \n        \n    \n    \n        There's nobody here.\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\">                                                                         -->                                                                                                {{currentSwipeCard.user.firstName}}                                          duration / distance                     contacts                    link to bio                                                                                                                                                                                    Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}                                        Distance:                     Contact:                     car info:                     ride info:                                                     There\\'s nobody here.    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsercardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsermatchwebComponent.html":{"url":"components/UsermatchwebComponent.html","title":"component - UsermatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsermatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usermatchweb/usermatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a desktop view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usermatchweb\n            \n\n            \n                styleUrls\n                usermatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usermatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usermatchweb/usermatchweb.component.ts:39\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            like\n                            \n                            \n                        \n                    \n                \n                \n                    \nlike(index: number, interest: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Handles verdict a user gives on a potential match\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe user being evaluated\n\n\n                                                        \n                                                \n                                                \n                                                        interest\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe judgment on the viewed user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:49\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Potential Matches \n  \n    \n      \n        \n          \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              \n                X -->\n                \n                \n                \n                O -->\n                 \n\n              \n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Potential Matches                                                                     {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}                              X -->                                                                O -->                                                                                         {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsermatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewProfileComponent.html":{"url":"components/ViewProfileComponent.html","title":"component - ViewProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/view-profile/view-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Represents the page that allows users to view (and edit) their profile\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-profile\n            \n\n            \n                styleUrls\n                view-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address2\n                            \n                            \n                                batchEnd\n                            \n                            \n                                canEdit\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                currentRole\n                            \n                            \n                                currentUser\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRole\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitChanges\n                            \n                            \n                                switchRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/view-profile/view-profile.component.ts:18\n                            \n                        \n\n                \n                    \n                            Sets up the component with the User Service injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows the component to work with the user service (for updating)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Allows the form to be edited\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Gets the list of offices from the database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Sets up the User's current role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Sets up all users in the system \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Sets up the form with data about the durrent user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Updates the user once he/she is content with the updates\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Enables limited ability to modify the User's role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:35\n                            \n                        \n\n                \n                    \n                        The address of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                        The day the User's batch ends\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canEdit:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:40\n                            \n                        \n\n                \n                    \n                        Whether the user can make changes (Currently not used) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        The password of the user, used to confirm User knows the password (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:127\n                            \n                        \n\n                \n                    \n                        The current role of the logged on user in string form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:18\n                            \n                        \n\n                \n                    \n                        The User being selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:25\n                            \n                        \n\n                \n                    \n                        The first name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:27\n                            \n                        \n\n                \n                    \n                        The last name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     Office\n\n                    \n                \n                    \n                        \n                            Type :     Office\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:44\n                            \n                        \n\n                \n                    \n                        Current office being examined \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of offices held by the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:31\n                            \n                        \n\n                \n                    \n                        The password of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        The user name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:136\n                            \n                        \n\n                \n                    \n                        Holds the list of all users in the system \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n// import { DateFormatPipe } from '../../pipes/date-format.pipe';\nimport { Role } from '../../models/role.model';\nimport { Office } from '../../models/office.model';\n\n/**\n * Represents the page that allows users to view (and edit) their profile\n */\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  /** The User being selected */\n  currentUser: User;\n  /**\n   * Sets up the component with the User Service injected\n   * @param userService - Allows the component to work with the user service (for updating)\n   */\n  constructor(private userService: UserControllerService) { }\n  /** The first name of the user (hooked to form item in html) */\n  firstName: string;\n  /** The last name of the user (hooked to form item in html) */\n  lastName: string;\n  /** The user name of the user (hooked to form item in html) */\n  username: string;\n  /** The password of the user (hooked to form item in html) */\n  password: string;\n  /** The password of the user, used to confirm User knows the password (hooked to form item in html) */\n  confirmPassword: string;\n  /** The address of the user (hooked to form item in html) */\n  address2: string;\n  /** The day the User's batch ends*/\n  batchEnd: any;\n\n  /** Whether the user can make changes (Currently not used) */\n  canEdit = false;\n  /** List of offices held by the user */\n  officeObjectArray: Office[] = [];\n  /** Current office being examined */\n  officeObject: Office;\n\n  /**\n   * Sets up the form with data about the durrent user\n   */\n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n        // this.currentUser = data;\n        // console.log(this.currentUser);\n      this.firstName = sessionStorage.getItem('firstName');\n      this.lastName = sessionStorage.getItem('lastName');\n      this.username = sessionStorage.getItem('userEmail');\n      // console.log(this.userService.getOfficeByLink(this.currentUser.office).subscribe().toString());\n      // document.getElementById('currentOffice').textContent = this.userService.getOfficeByLink(this.currentUser.office).toString();\n      this.address2 = sessionStorage.getItem('address');\n      this.batchEnd = new Date(sessionStorage.getItem('batchEnd')).toLocaleDateString();\n    //   }\n    // );\n    this.getOffices();\n    this.getUsers();\n    this.getRole();\n  }\n\n  /**\n   * Allows the form to be edited\n   */\n  edit() {\n    document.getElementById('firstName').removeAttribute('disabled');\n    document.getElementById('lastName').removeAttribute('disabled');\n    document.getElementById('email').removeAttribute('disabled');\n    document.getElementById('password').removeAttribute('disabled');\n    document.getElementById('confirmPassword').removeAttribute('disabled');\n    document.getElementById('address').removeAttribute('disabled');\n    document.getElementById('batchEnd').removeAttribute('disabled');\n    document.getElementById('batchEnd').setAttribute('type', 'date');\n    document.getElementById('currentOffice').style.display = 'none';\n    document.getElementById('selectOffice').style.display = 'inline';\n    document.getElementById('edit').style.display = 'none';\n    document.getElementById('submit').style.display = 'inline';\n    document.getElementById('errorMessage').removeAttribute('hidden');\n  }\n\n  /**\n   * Updates the user once he/she is content with the updates\n   */\n  submitChanges() {\n\n    sessionStorage.setItem('firstName', this.firstName);\n    sessionStorage.setItem('lastName', this.lastName);\n    sessionStorage.setItem('userEmail', this.username);\n    sessionStorage.setItem('address', this.address2);\n    sessionStorage.setItem('batchEnd', this.batchEnd);\n    sessionStorage.setItem('role', this.currentRole);\n    this.userService.update().subscribe();\n    // this.userService.updatePassword(this.currentUser.id, 'p4ssw0rd', this.password).subscribe();\n    window.location.reload(true);\n  }\n\n  /**\n   * Enables limited ability to modify the User's role in the system\n   */\n  switchRole() {\n    if (sessionStorage.getItem('role') === 'DRIVER') {\n      sessionStorage.setItem('role', 'RIDER');\n      this.getRole();\n    } else if (sessionStorage.getItem('role') === 'RIDER') {\n      sessionStorage.setItem('role', 'DRIVER');\n      this.getRole();\n    } else {\n      console.log('nope');\n    }\n  }\n\n  /**\n   * Gets the list of offices from the database\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n    });\n  }\n  /** The current role of the logged on user in string form */\n  currentRole: string;\n  /**\n   * Sets up the User's current role in the system\n   */\n  getRole() {\n    this.currentRole = sessionStorage.getItem('role');\n  }\n\n  /** Holds the list of all users in the system */\n  users: any[];\n  /** Sets up all users in the system */\n  getUsers() {\n    let data;\n    // this.postService.getPosts().then((allPosts) => {posts = allPosts; console.log(posts.results[0].id)});\n    this.userService.getAllUsers().subscribe((x) => {data = x; this.users = data});\n  }\n\n  // passCheck() {\n  //   if(this.password !== this.confirmPassword) {\n  //     document.getElementById('passwordError').style.display = 'inline';\n  //   } else {\n  //     sessionStorage.setItem('userPassword', this.password);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n              \n              Your Profile:\n              \n              \n                \n                  First Name\n                \n                \n                  \n                    \n                   -->\n              \n              \n                \n                  First name cannot be empty\n                \n                \n                  ;\n                  First name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Last Name\n                \n                \n              \n              \n                \n                  Last name cannot be empty\n                \n                \n                  ;\n                  Last name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Email\n                \n                \n              \n              \n                \n                  Email cannot be empty\n                \n                \n                  Email cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Password\n                \n                \n              \n              \n                \n                  Password cannot be empty\n                \n                \n                  Password cannot be more than 15 characters\n                \n              \n              \n                \n                  Confirm\n                \n                \n              \n              \n                \n                  Password Confirm cannot be empty\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                 -->\n                \n                  Passwords do not match.\n                \n              \n\n              \n                \n                  Key\n                \n                \n              \n              \n                \n                  You need a Key\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                \n               -->\n\n              \n                \n                  Office Address\n                \n                \n                   -->\n                \n                \n                  \n                    {{office.name}}\n                  \n                \n                 -->\n                 -->\n              \n\n\n              \n                \n                  Address\n                \n                \n                 -->\n              \n              \n                \n                  Address cannot be empty\n                \n              \n\n              \n                \n                  Batch End\n                \n                \n              \n              \n                Switch to Rider \n              \n              \n                Switch to Driver \n              \n              \n              \n                Edit \n              \n              Save Changes \n              \n                \n                  Please fill out ALL fields and confirm your passwords match\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Biography:\n              \n              \n                \n                  About You\n                \n              \n              \n              \n\n              \n                Profile Picture\n                \n              \n              \n                \n                  Contact Info\n                \n                \n                 -->\n                \n                  \n                    \n                  \n                \n              \n\n              \n                \n                  \n                    \n                      {{contact}}\n                    \n                  \n                  \n                  -\n                \n              \n              \n                Previous\n                 Next\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Car Information:\n              \n              \n                \n                  Driver\n                  Rider\n                \n              \n              \n              \n                \n                  \n                    Make\n                  \n                  \n                \n\n                \n                  \n                    Model\n                  \n                  \n                \n\n                \n                  \n                    Year\n                  \n                  \n                \n              \n              \n                Previous\n                 Edit\n              \n              \n                \n                  Please select Driver or Rider\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Review and submit:\n              \n              User Information\n              First name: {{firstName}} \n              Last Name: {{lastName}} \n              Email: {{username}} \n               Office Address: {{officeObject}}\n               Apartment Address: {{address2}}\n              Batch: {{batchEnd}} \n              \n               0\">\n                Biography\n                About You: {{bio}}\n                Contact Info:\n                \n                   {{item.type}}: {{item.info}}  \n                \n              \n              \n              \n                Car Info\n                Make: {{carMake}} \n                Model: {{carModel}} \n                Year: {{carYear}} \n              \n              \n              \n\n                 Previous\n\n                 Finish\n              \n            \n          \n        \n       -->\n      \n        \n          \n            \n            \n            View Users\n            \n              \n                \n                  User ID\n                  User's Name\n                  User Email\n                  User Role\n                   \n                \n              \n              \n                \n                  {{ user.id }}\n                  {{ user.firstName }}&nbsp;{{ user.lastName }}\n                  {{ user.email }}\n                  {{ user.role }}\n                  Make Admin\n                    Make Trainer\n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Your Profile:                                                              First Name                                                                                         -->                                                              First name cannot be empty                                                  ;                  First name cannot be more than 15 characters                                                                              Last Name                                                                                              Last name cannot be empty                                                  ;                  Last name cannot be more than 15 characters                                                                              Email                                                                                              Email cannot be empty                                                  Email cannot be more than 15 characters                                                                              Password                                                                                              Password cannot be empty                                                  Password cannot be more than 15 characters                                                                              Confirm                                                                                              Password Confirm cannot be empty                                                  Password Confirm cannot be more than 15 characters                 -->                                  Passwords do not match.                                                                              Key                                                                                              You need a Key                                                  Password Confirm cannot be more than 15 characters                               -->                                                Office Address                                                   -->                                                                      {{office.name}}                                                   -->                 -->                                                              Address                                                 -->                                                              Address cannot be empty                                                                              Batch End                                                                            Switch to Rider                                             Switch to Driver                                                           Edit                             Save Changes                                                 Please fill out ALL fields and confirm your passwords match                                                                                                                                  Biography:                                                              About You                                                                                        Profile Picture                                                                              Contact Info                                                 -->                                                                                                                                                                                                {{contact}}                                                                          -                                                            Previous                 Next                                                                                                                  Car Information:                                                              Driver                  Rider                                                                                                                Make                                                                                                          Model                                                                                                          Year                                                                                                Previous                 Edit                                                              Please select Driver or Rider                                                                                                                                  Review and submit:                            User Information              First name: {{firstName}}               Last Name: {{lastName}}               Email: {{username}}                Office Address: {{officeObject}}               Apartment Address: {{address2}}              Batch: {{batchEnd}}                              0\">                Biography                About You: {{bio}}                Contact Info:                                   {{item.type}}: {{item.info}}                                                                            Car Info                Make: {{carMake}}                 Model: {{carModel}}                 Year: {{carYear}}                                                            Previous                 Finish                                                   -->                                                            View Users                                                            User ID                  User\\'s Name                  User Email                  User Role                                                                                                 {{ user.id }}                  {{ user.firstName }} {{ user.lastName }}                  {{ user.email }}                  {{ user.role }}                  Make Admin                    Make Trainer                                                                                                      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/accountinfo/accountinfo.component.ts\n            \n            \n                component\n            \n            \n                AccountinfoComponent\n            \n            \n                93 %\n                (56/60)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/car-registration/car-registration.component.ts\n            \n            \n                component\n            \n            \n                CarRegistrationComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            \n                component\n            \n            \n                FavoritesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/how-to/how-to.component.ts\n            \n            \n                component\n            \n            \n                HowToComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/likes/likes.component.ts\n            \n            \n                component\n            \n            \n                LikesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                component\n            \n            \n                LikesmatchwebComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                89 %\n                (43/48)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/rideswipe/rideswipe.component.ts\n            \n            \n                component\n            \n            \n                RideswipeComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/usercard/usercard.component.ts\n            \n            \n                component\n            \n            \n                UsercardComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                component\n            \n            \n                UsermatchwebComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/view-profile/view-profile.component.ts\n            \n            \n                component\n            \n            \n                ViewProfileComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n            \n            \n                directive\n            \n            \n                PlacesAutocompleteDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/address.model.ts\n            \n            \n                class\n            \n            \n                AddressModel\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/api-error.model.ts\n            \n            \n                interface\n            \n            \n                ApiError\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/car.model.ts\n            \n            \n                class\n            \n            \n                Car\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/contact-info.model.ts\n            \n            \n                interface\n            \n            \n                ContactInfo\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/location.model.ts\n            \n            \n                interface\n            \n            \n                Location\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/marker.model.ts\n            \n            \n                interface\n            \n            \n                Marker\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/office.model.ts\n            \n            \n                interface\n            \n            \n                Office\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/register.model.ts\n            \n            \n                interface\n            \n            \n                Register\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/route-info.model.ts\n            \n            \n                interface\n            \n            \n                RouteInfo\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/swipecard.model.ts\n            \n            \n                class\n            \n            \n                SwipecardModel\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/services/api/maps-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MapsControllerService\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/api/matching-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MatchingControllerService\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/api/user-controller.service.ts\n            \n            \n                injectable\n            \n            \n                UserControllerService\n            \n            \n                43 %\n                (13/30)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                injectable\n            \n            \n                TokenStorage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                variable\n            \n            \n                TOKEN_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.4\n        \n            @angular/animations : ^6.1.8\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.8\n        \n            @angular/compiler : ^6.1.8\n        \n            @angular/core : ^6.1.8\n        \n            @angular/forms : ^6.1.8\n        \n            @angular/http : ^6.1.8\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.8\n        \n            @angular/platform-browser-dynamic : ^6.1.8\n        \n            @angular/router : ^6.1.8\n        \n            @ng-bootstrap/ng-bootstrap : ^3.2.2\n        \n            aws-sdk : ^2.321.0\n        \n            core-js : ^2.4.1\n        \n            googlemaps : ^1.12.0\n        \n            hammerjs : ^2.0.8\n        \n            ng2-animate-on-scroll : ^1.0.11\n        \n            rxjs : ^6.3.2\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorType   (src/.../api-error.model.ts)\n                        \n                        \n                            ContactInfoType   (src/.../contact-info-type.model.ts)\n                        \n                        \n                            Interest   (src/.../interest.model.ts)\n                        \n                        \n                            Role   (src/.../role.model.ts)\n                        \n                        \n                            State   (src/.../state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/api-error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorType\n                    \n                \n                    \n                        \n                            A specific type of error which can be returned by the API.\n\n                        \n                    \n                        \n                            \n                                 NotLoggedIn\n                            \n                        \n                        \n                            \n                                Value : NOT_LOGGED_IN\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : UNAUTHORIZED\n                            \n                        \n            \n        \n\n    src/app/models/contact-info-type.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactInfoType\n                    \n                \n                    \n                        \n                            Represents the ype of contact information available for a user \n\n                        \n                    \n                        \n                            \n                                 Phone\n                            \n                        \n                        \n                            \n                                Value : PHONE\n                            \n                        \n                        \n                            \n                                 Slack\n                            \n                        \n                        \n                            \n                                Value : SLACK\n                            \n                        \n                        \n                            \n                                 Skype\n                            \n                        \n                        \n                            \n                                Value : SKYPE\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/models/interest.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                    \n                        \n                            Holds the Interest type \n\n                        \n                    \n                        \n                            \n                                 like\n                            \n                        \n                        \n                            \n                                Value : LIKE\n                            \n                        \n                        \n                            \n                                 dislike\n                            \n                        \n                        \n                            \n                                Value : DISLIKE\n                            \n                        \n                        \n                            \n                                 thrash\n                            \n                        \n                        \n                            \n                                Value : TRASH\n                            \n                        \n            \n        \n\n    src/app/models/role.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                    \n                        \n                            Represents the type of user in the system \n\n                        \n                    \n                        \n                            \n                                 Driver\n                            \n                        \n                        \n                            \n                                Value : DRIVER\n                            \n                        \n                        \n                            \n                                 Rider\n                            \n                        \n                        \n                            \n                                Value : RIDER\n                            \n                        \n                        \n                            \n                                 Trainer\n                            \n                        \n                        \n                            \n                                Value : TRAINER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/models/state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                    \n                        \n                            Represents a State in the United States (Plus DC and Puerto Rico) \n\n                        \n                    \n                        \n                            \n                                 Alabama\n                            \n                        \n                        \n                            \n                                Value : AL\n                            \n                        \n                        \n                            \n                                 Alaska\n                            \n                        \n                        \n                            \n                                Value : AK\n                            \n                        \n                        \n                            \n                                 Arkansas\n                            \n                        \n                        \n                            \n                                Value : AR\n                            \n                        \n                        \n                            \n                                 Arizona\n                            \n                        \n                        \n                            \n                                Value : AZ\n                            \n                        \n                        \n                            \n                                 California\n                            \n                        \n                        \n                            \n                                Value : CA\n                            \n                        \n                        \n                            \n                                 Colorado\n                            \n                        \n                        \n                            \n                                Value : CO\n                            \n                        \n                        \n                            \n                                 Connecticut\n                            \n                        \n                        \n                            \n                                Value : CT\n                            \n                        \n                        \n                            \n                                 Delaware\n                            \n                        \n                        \n                            \n                                Value : DE\n                            \n                        \n                        \n                            \n                                 DistrictOfColumbia\n                            \n                        \n                        \n                            \n                                Value : DC\n                            \n                        \n                        \n                            \n                                 Florida\n                            \n                        \n                        \n                            \n                                Value : FL\n                            \n                        \n                        \n                            \n                                 Georgia\n                            \n                        \n                        \n                            \n                                Value : GA\n                            \n                        \n                        \n                            \n                                 Hawaii\n                            \n                        \n                        \n                            \n                                Value : HI\n                            \n                        \n                        \n                            \n                                 Idaho\n                            \n                        \n                        \n                            \n                                Value : ID\n                            \n                        \n                        \n                            \n                                 Illinois\n                            \n                        \n                        \n                            \n                                Value : IL\n                            \n                        \n                        \n                            \n                                 Indiana\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 Iowa\n                            \n                        \n                        \n                            \n                                Value : IA\n                            \n                        \n                        \n                            \n                                 Kansas\n                            \n                        \n                        \n                            \n                                Value : KS\n                            \n                        \n                        \n                            \n                                 Kentucky\n                            \n                        \n                        \n                            \n                                Value : KY\n                            \n                        \n                        \n                            \n                                 Louisiana\n                            \n                        \n                        \n                            \n                                Value : LA\n                            \n                        \n                        \n                            \n                                 Maine\n                            \n                        \n                        \n                            \n                                Value : ME\n                            \n                        \n                        \n                            \n                                 Maryland\n                            \n                        \n                        \n                            \n                                Value : MD\n                            \n                        \n                        \n                            \n                                 Massachusetts\n                            \n                        \n                        \n                            \n                                Value : MA\n                            \n                        \n                        \n                            \n                                 Michigan\n                            \n                        \n                        \n                            \n                                Value : MI\n                            \n                        \n                        \n                            \n                                 Minnesota\n                            \n                        \n                        \n                            \n                                Value : MN\n                            \n                        \n                        \n                            \n                                 Mississippi\n                            \n                        \n                        \n                            \n                                Value : MS\n                            \n                        \n                        \n                            \n                                 Missouri\n                            \n                        \n                        \n                            \n                                Value : MO\n                            \n                        \n                        \n                            \n                                 Montana\n                            \n                        \n                        \n                            \n                                Value : MT\n                            \n                        \n                        \n                            \n                                 Nebraska\n                            \n                        \n                        \n                            \n                                Value : NE\n                            \n                        \n                        \n                            \n                                 Nevada\n                            \n                        \n                        \n                            \n                                Value : NV\n                            \n                        \n                        \n                            \n                                 NewHampshire\n                            \n                        \n                        \n                            \n                                Value : NH\n                            \n                        \n                        \n                            \n                                 NewJersey\n                            \n                        \n                        \n                            \n                                Value : NJ\n                            \n                        \n                        \n                            \n                                 NewMexico\n                            \n                        \n                        \n                            \n                                Value : NM\n                            \n                        \n                        \n                            \n                                 NewYork\n                            \n                        \n                        \n                            \n                                Value : NY\n                            \n                        \n                        \n                            \n                                 NorthCarolina\n                            \n                        \n                        \n                            \n                                Value : NC\n                            \n                        \n                        \n                            \n                                 NorthDakota\n                            \n                        \n                        \n                            \n                                Value : ND\n                            \n                        \n                        \n                            \n                                 Ohio\n                            \n                        \n                        \n                            \n                                Value : OH\n                            \n                        \n                        \n                            \n                                 Oklahoma\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 Oregon\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n                        \n                            \n                                 Pennsylvania\n                            \n                        \n                        \n                            \n                                Value : PA\n                            \n                        \n                        \n                            \n                                 PuertoRico\n                            \n                        \n                        \n                            \n                                Value : PR\n                            \n                        \n                        \n                            \n                                 RhodeIsland\n                            \n                        \n                        \n                            \n                                Value : RI\n                            \n                        \n                        \n                            \n                                 SouthCarolina\n                            \n                        \n                        \n                            \n                                Value : SC\n                            \n                        \n                        \n                            \n                                 SouthDakota\n                            \n                        \n                        \n                            \n                                Value : SD\n                            \n                        \n                        \n                            \n                                 Tennessee\n                            \n                        \n                        \n                            \n                                Value : TN\n                            \n                        \n                        \n                            \n                                 Texas\n                            \n                        \n                        \n                            \n                                Value : TX\n                            \n                        \n                        \n                            \n                                 Utah\n                            \n                        \n                        \n                            \n                                Value : UT\n                            \n                        \n                        \n                            \n                                 Vermont\n                            \n                        \n                        \n                            \n                                Value : VT\n                            \n                        \n                        \n                            \n                                 Virginia\n                            \n                        \n                        \n                            \n                                Value : VA\n                            \n                        \n                        \n                            \n                                 Washington\n                            \n                        \n                        \n                            \n                                Value : WA\n                            \n                        \n                        \n                            \n                                 WestVirginia\n                            \n                        \n                        \n                            \n                                Value : WV\n                            \n                        \n                        \n                            \n                                 Wisconsin\n                            \n                        \n                        \n                            \n                                Value : WI\n                            \n                        \n                        \n                            \n                                 Wyoming\n                            \n                        \n                        \n                            \n                                Value : WY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRideshareClient\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nInformation for developers\nGit directions\nHere is an overview of the steps you need to take in order to make a\nsuccessful change to the repo. If you do not follow all these steps, there\nmay be problems!\ngit checkout -b your-branch # Omit the '-b' if the branch already exists.\n# Make changes to branch...\ngit add .  # Assuming you are in the root directory.\ngit commit -m 'Descriptive commit message'\ngit push -u origin your-branch # You can use just 'git push' if you've already pushed.Before you make a pull request, it's a good idea to merge any new changes\nfrom the dev branch, especially if you've spent a decent amount of time on\nyour changes (making it more likely that the dev branch has changed). This is\nthe best way to detect merge conflicts early.\n# To merge any new changes from the dev branch:\ngit checkout dev\ngit pull\ngit checkout your-branch\ngit merge devIf you get any merge conflicts, resolve them and then make a new commit (git add . && git commit -m 'Descriptive commit message).\nOnce you've pushed your branch, make a pull request on GitHub and make sure\nthat your PR is based off the dev branch and not master!\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Link   (src/.../link.model.ts)\n                        \n                        \n                            Overwrite   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/link.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Link\n                    \n                \n                    \n                        \n                            Enables the use of Strings as URL mappings to an actual resource in the backend \n\n                        \n                    \n                \n                    \n                        Link:     string\n\n                    \n                \n            \n        \n\n    src/app/utils/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Overwrite\n                    \n                \n                    \n                        \n                            Overwrite certain properties of a type, while keeping others. Thanks to\nhttps://stackoverflow.com/a/46941824!\n\n                        \n                    \n                \n                    \n                        Overwrite:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token.storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n  // apiUrl: 'http://192.168.60.54:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/token.storage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
