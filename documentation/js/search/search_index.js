var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AccessGuard.html",[0,2.743,1,3.087]],["body/guards/AccessGuard.html",[0,3.456,1,4.904,2,0.235,3,0.235,4,0.205,5,4.548,6,0.235,7,1.192,8,6.799,9,0.999,10,2.657,11,2,12,4.117,13,0.946,14,4.548,15,1.405,16,0.021,17,0.89,18,0.375,19,1.065,20,2.045,21,4.548,22,6.595,23,2.993,24,6.799,25,4.548,26,2.422,27,1.224,28,2.914,29,3.414,30,0.869,31,1.331,32,0.706,33,2.311,34,3.89,35,4.548,36,3.456,37,2.311,38,4.548,39,1.536,40,2.873,41,2.311,42,0.235,43,0.297,44,1.24,45,1.38,46,1.814,47,4.548,48,3.622,49,3.131,50,1.714,51,4.548,52,1.114,53,0.663,54,1.921,55,1.176,56,1.176,57,2.657,58,3.89,59,4.548,60,4.548,61,4.548,62,4.548,63,3.89,64,4.548,65,2.657,66,0.016,67,0.016]],["title/classes/AddressModel.html",[43,0.236,68,2.485]],["body/classes/AddressModel.html",[2,0.234,3,0.234,4,0.204,6,0.234,13,1.144,16,0.021,17,0.887,18,0.453,19,1.06,23,3.303,42,0.234,43,0.373,53,0.659,66,0.016,67,0.016,68,3.932,69,3.864,70,0.429,71,2.36,72,5.355,73,4.519,74,1.909,75,0.78,76,3.117,77,5.626,78,6.579,79,6.93,80,6.93,81,1.375,82,4.519,83,3.104,84,6.579,85,5.711,86,2.171,87,5.711,88,4.519,89,4.884,90,4.519,91,2.722,92,3.607,93,4.519,94,4.519,95,4.519,96,4.884]],["title/components/AdminComponent.html",[97,0.262,98,0.984]],["body/components/AdminComponent.html",[2,0.148,3,0.148,4,0.129,6,0.148,7,0.869,9,0.629,10,1.672,11,1.753,13,1.093,15,0.701,16,0.021,17,0.843,18,0.378,19,0.531,20,1.762,27,1.009,30,0.694,32,0.444,39,0.966,42,0.148,43,0.187,44,1.14,45,0.868,52,1.331,53,0.932,55,1.404,56,1.081,66,0.012,67,0.012,70,0.397,75,0.571,76,1.766,81,1.21,92,4.288,97,0.486,98,1.481,99,1.02,100,1.02,101,1.02,102,2.447,103,1.938,104,3.575,105,4.181,106,4.181,107,3.575,108,1.581,109,0.966,110,2.159,111,2.037,112,2.878,113,1.338,114,4.181,115,1.338,116,4.181,117,4.128,118,5.433,119,4.646,120,4.646,121,5.433,122,5.433,123,4.646,124,5.433,125,1.739,126,4.181,127,1.331,128,1.331,129,2.878,130,2.861,131,2.273,132,1.874,133,4.181,134,1.739,135,2.861,136,2.878,137,3.851,138,3.575,139,2.64,140,2.861,141,4.181,142,2.705,143,4.586,144,2.861,145,4.181,146,2.861,147,1.938,148,3.526,149,3.067,150,2.158,151,2.861,152,4.181,153,2.124,154,1.581,155,0.966,156,0.868,157,2.861,158,1.491,159,2.861,160,4.181,161,3.575,162,1.078,163,2.447,164,2.861,165,2.861,166,0.74,167,2.447,168,2.861,169,1.97,170,2.861,171,2.861,172,5.433,173,2.861,174,2.447,175,2.861,176,2.861,177,2.861,178,2.861,179,2.447,180,2.447,181,2.861,182,2.878,183,3.575,184,2.442,185,3.575,186,2.64,187,3.575,188,4.181,189,0.916,190,1.338,191,1.202,192,1.938,193,1.02,194,0.823,195,1.02,196,1.02,197,0.823,198,1.02,199,0.78,200,0.78,201,1.02,202,0.78,203,1.02,204,0.78,205,1.02,206,0.78,207,1.02,208,0.823,209,1.02,210,0.78,211,1.02,212,0.78,213,1.02,214,0.823,215,1.02,216,0.823,217,1.02,218,0.78,219,1.02,220,0.78,221,1.02,222,0.78,223,1.02,224,0.78,225,0.916,226,0.78,227,0.966,228,1.02]],["title/interfaces/ApiError.html",[229,0.751,230,2.485]],["body/interfaces/ApiError.html",[2,0.224,3,0.224,4,0.195,6,0.224,16,0.021,18,0.478,19,1.031,27,1.139,42,0.287,50,1.631,53,0.81,54,2.346,66,0.016,67,0.016,70,0.41,71,1.631,75,0.759,81,1.272,86,1.964,229,1.155,230,3.825,231,3.287,232,3.287,233,4.199,234,6.136,235,3.7,236,3.585,237,3.585,238,5.362,239,4.718,240,3.725,241,4.751,242,6.474,243,3.508,244,5.555,245,4.221,246,4.751,247,2.823,248,4.751,249,5.555,250,5.555,251,3.875,252,2.215,253,5.555,254,3.508,255,4.919,256,3.585,257,4.751,258,4.327,259,3.7,260,3.7,261,3.7,262,3.7,263,4.751]],["title/components/AppComponent.html",[97,0.262,197,1.038]],["body/components/AppComponent.html",[2,0.201,3,0.201,4,0.175,6,0.201,7,1.077,13,1.025,15,0.952,16,0.021,17,0.964,18,0.381,19,0.722,27,0.722,30,0.497,32,0.603,41,3.156,42,0.201,43,0.254,53,0.906,54,2.188,56,1.339,57,3.026,66,0.014,67,0.014,70,0.369,74,2.188,75,0.708,81,1.281,97,0.492,98,1.06,99,1.386,100,1.386,101,1.386,109,1.313,110,2.236,111,2.125,113,1.657,115,1.657,134,1.244,154,1.244,155,1.313,156,1.179,189,1.244,190,1.657,191,1.489,192,2.215,193,1.386,194,1.118,195,1.386,196,1.386,197,1.786,198,1.386,199,1.06,200,1.06,201,1.386,202,1.06,203,1.386,204,1.06,205,1.386,206,1.06,207,1.386,208,1.118,209,1.386,210,1.06,211,1.386,212,1.06,213,1.386,214,1.118,215,1.386,216,1.118,217,1.386,218,1.06,219,1.386,220,1.06,221,1.386,222,1.06,223,1.386,224,1.06,225,1.244,226,1.06,227,1.313,228,1.386,252,2.477,264,3.324,265,3.935,266,4.429,267,5.179,268,5.179,269,5.312,270,3.75,271,6.654,272,5.179,273,5.179,274,3.887,275,4.429,276,4.429,277,3.324,278,3.887,279,3.935,280,3.887,281,3.887,282,3.566,283,3.887]],["title/modules/AppModule.html",[284,1.962,285,2.485]],["body/modules/AppModule.html",[2,0.15,3,0.15,4,0.131,11,1.838,16,0.021,30,0.946,32,0.449,39,1.679,42,0.218,43,0.189,65,2.463,66,0.012,67,0.012,70,0.275,98,1.652,111,0.832,162,1.091,189,0.926,194,1.743,197,1.957,199,1.652,202,1.652,204,1.652,206,1.652,208,1.743,210,1.652,212,1.652,214,1.743,216,1.743,218,1.652,220,1.652,222,1.652,224,1.652,226,1.652,252,2.315,254,3.828,265,3.203,266,3.605,284,2.292,285,5.177,286,1.297,287,3.778,288,4.15,289,2.475,290,2.475,291,2.475,292,2.475,293,2.475,294,3.828,295,3.079,296,4.172,297,3.828,298,2.56,299,3.605,300,2.475,301,1.471,302,2.894,303,4.216,304,3.605,305,3.605,306,4.216,307,3.605,308,1.993,309,4.216,310,2.894,311,3.605,312,4.973,313,4.216,314,2.475,315,4.216,316,4.216,317,2.199,318,2.475,319,2.894,320,2.475,321,2.475,322,2.475,323,2.475,324,2.475,325,1.993,326,2.475,327,2.475,328,2.894,329,4.216,330,2.894,331,1.993,332,2.894,333,2.475,334,2.894,335,2.894,336,2.894,337,2.894,338,2.894,339,1.573,340,2.894,341,3.605,342,1.993,343,2.199,344,4.973,345,1.691,346,2.894,347,2.199,348,2.894,349,2.475,350,2.475,351,2.894,352,2.475,353,1.573,354,2.475,355,2.894,356,2.894,357,2.475,358,2.475,359,1.993,360,2.475,361,2.475,362,1.993,363,2.475,364,4.216,365,2.894,366,2.894,367,2.894,368,2.894,369,2.894,370,2.894,371,2.894,372,2.475,373,4.216,374,4.216]],["title/classes/AppPage.html",[43,0.236,375,2.743]],["body/classes/AppPage.html",[2,0.277,3,0.277,4,0.242,6,0.277,7,1.319,13,1.047,16,0.021,27,1.296,30,0.685,41,2.725,42,0.277,43,0.415,66,0.018,67,0.018,191,1.542,308,3.692,375,4.818,376,4.586,377,6.979,378,6.979,379,5.363,380,5.363,381,4.586,382,5.363,383,5.363,384,5.363]],["title/modules/AppRoutingModule.html",[284,1.962,294,2.28]],["body/modules/AppRoutingModule.html",[2,0.21,3,0.21,4,0.184,16,0.021,26,2.774,30,0.935,32,0.632,33,2.068,42,0.308,43,0.349,66,0.015,67,0.015,97,0.523,98,1.456,112,2.803,127,0.997,191,1.171,194,1.536,199,1.456,200,1.11,202,1.456,204,1.456,206,1.456,212,1.456,214,1.536,218,1.456,220,1.456,224,1.456,284,2.213,287,3.093,294,3.372,311,4.566,320,3.481,321,3.481,322,3.481,323,3.481,324,3.481,325,2.803,326,3.481,327,3.481,333,3.481,349,3.481,350,3.481,357,3.481,358,3.481,359,2.803,360,3.481,361,3.481,362,2.803,363,3.481,385,4.071,386,4.071,387,5.34,388,3.481,389,5.34,390,4.071,391,4.071,392,4.071,393,2.378,394,4.071,395,2.803,396,3.093,397,3.481,398,1.375,399,7.253,400,4.071,401,4.071,402,5.34,403,4.103,404,4.071,405,2.571,406,1.72,407,4.071,408,3.481,409,1.94,410,3.093,411,4.071,412,3.093,413,4.071]],["title/injectables/AuthService.html",[31,0.838,295,1.834]],["body/injectables/AuthService.html",[2,0.149,3,0.149,4,0.13,6,0.149,7,0.876,9,0.926,11,1.761,12,3.391,13,0.901,15,1.217,16,0.021,17,0.771,18,0.325,19,0.923,20,1.947,26,2.306,27,1.125,28,2.774,29,2.702,30,0.848,31,1.153,32,0.449,33,1.469,36,2.197,37,1.469,39,0.977,40,1.826,41,1.469,42,0.149,43,0.189,46,2.177,49,3.759,52,1.484,53,1.029,54,2.559,55,1.657,66,0.012,67,0.012,70,0.518,76,1.779,81,1.263,97,0.305,103,1.502,127,1.337,128,1.032,134,1.348,154,1.747,161,3.602,166,1.689,182,3.421,233,2.461,236,3.654,237,2.461,251,3.826,270,3.765,275,2.473,286,2.447,295,2.14,301,2.14,341,2.473,342,3.996,345,2.461,398,1.423,405,2.661,406,2.099,412,4.148,414,2.473,415,3.879,416,2.903,417,2.197,418,4.128,419,2.891,420,2.9,421,3.602,422,2.14,423,4.213,424,1.68,425,2.9,426,3.391,427,4.213,428,1.779,429,2.661,430,2.661,431,2.661,432,4.213,433,5.46,434,2.891,435,2.9,436,4.213,437,4.128,438,3.2,439,2.661,440,2.891,441,3.602,442,2.461,443,4.669,444,3.602,445,4.213,446,4.213,447,2.891,448,4.669,449,3.2,450,3.2,451,2.891,452,2.197,453,2.473,454,1.826,455,2.197,456,2.891,457,2.891,458,1.296,459,4.213,460,2.891,461,2.891,462,2.891,463,2.891,464,2.891,465,2.891,466,2.891,467,2.891,468,2.891,469,2.891,470,2.197,471,2.891,472,4.213,473,2.891,474,2.891,475,2.891,476,2.891,477,2.473,478,2.891,479,2.473,480,2.891,481,2.891,482,2.891,483,2.473,484,2.891,485,2.473,486,2.891,487,2.473,488,2.891,489,2.473,490,2.891,491,2.473,492,1.991,493,2.891,494,2.197,495,2.891,496,2.197,497,2.473,498,4.213,499,2.891,500,2.891,501,2.891,502,2.891,503,4.97,504,4.213,505,2.891,506,2.473]],["title/classes/Car.html",[43,0.236,200,0.984]],["body/classes/Car.html",[2,0.234,3,0.234,4,0.204,6,0.234,13,1.121,16,0.021,18,0.444,30,0.731,42,0.234,43,0.374,48,3.614,53,0.99,66,0.016,67,0.016,70,0.43,71,2.483,75,0.782,81,1.288,86,2.22,91,3.305,200,1.975,406,2.417,422,3.347,507,3.877,508,4.894,509,2.282,510,4.894,511,4.38,512,6.936,513,4.38,514,4.533,515,3.343,516,4.533,517,5.633,518,5.633,519,4.533,520,2.952,521,4.533,522,3.614,523,4.533,524,3.877,525,3.877]],["title/components/CarRegistrationComponent.html",[97,0.262,199,0.984]],["body/components/CarRegistrationComponent.html",[2,0.122,3,0.122,4,0.107,6,0.122,7,0.754,9,0.52,10,1.382,11,1.616,13,1.101,15,0.579,16,0.021,17,0.767,18,0.405,19,0.439,20,1.572,27,1.044,28,2.511,30,0.631,32,0.367,39,0.799,42,0.122,43,0.155,44,0.988,45,0.717,52,1.21,53,0.997,54,1.531,55,0.937,56,0.937,66,0.01,67,0.01,70,0.344,74,1.531,75,0.495,81,1.044,86,1.799,91,1.727,97,0.449,98,0.645,99,0.843,100,0.843,101,0.843,103,1.293,108,1.41,109,0.799,110,2.101,111,1.98,113,1.16,115,1.16,125,1.581,127,1.21,128,0.888,134,1.705,142,1.625,143,4.271,154,0.757,155,0.799,156,1.337,158,1.293,162,0.891,166,0.611,189,0.757,190,1.16,191,1.042,192,1.762,193,0.843,194,1.267,195,0.843,196,0.843,197,0.68,198,0.843,199,1.347,200,2.021,201,0.843,202,0.645,203,0.843,204,0.645,205,0.843,206,0.645,207,0.843,208,0.68,209,0.843,210,0.645,211,0.843,212,0.645,213,0.843,214,0.68,215,0.843,216,0.68,217,0.843,218,0.645,219,0.843,220,0.645,221,0.843,222,0.645,223,0.843,224,0.645,225,0.757,226,0.645,227,0.799,228,0.843,243,3.55,286,1.625,359,4.636,393,2.118,398,1.489,416,2.118,422,2.856,424,1.757,458,1.06,492,2.496,509,0.943,510,4.225,511,3.55,513,3.121,517,3.1,526,5.759,527,2.022,528,2.754,529,2.496,530,3.55,531,3.625,532,3.625,533,4.941,534,4.941,535,4.941,536,4.941,537,4.941,538,4.941,539,4.941,540,4.941,541,4.941,542,4.941,543,4.941,544,3.625,545,3.402,546,2.365,547,3.625,548,2.754,549,2.365,550,3.1,551,1.727,552,2.754,553,2.365,554,3.625,555,4.225,556,2.365,557,3.754,558,2.365,559,3.1,560,2.289,561,2.374,562,2.365,563,3.1,564,3.625,565,2.365,566,2.365,567,2.118,568,2.365,569,3.625,570,3.625,571,3.1,572,2.365,573,2.365,574,3.625,575,3.625,576,2.365,577,2.365,578,0.999,579,1.797,580,3.625,581,4.408,582,2.365,583,2.365,584,3.625,585,3.1,586,2.365,587,2.365,588,2.365,589,2.365,590,2.365,591,3.625,592,2.365,593,2.365,594,2.365,595,3.625,596,3.625,597,2.365,598,2.365,599,1.628,600,2.365,601,2.365,602,3.625,603,2.365,604,3.625,605,2.365,606,2.365,607,2.365,608,3.625,609,2.365,610,2.365,611,2.365,612,2.754,613,2.289,614,3.625,615,3.625,616,3.625,617,3.625]],["title/interfaces/ContactInfo.html",[229,0.751,618,2.485]],["body/interfaces/ContactInfo.html",[2,0.377,3,0.256,4,0.224,6,0.256,16,0.021,18,0.477,42,0.256,52,1.482,53,0.723,66,0.017,67,0.017,70,0.47,75,0.827,81,1.316,86,2.089,91,3.379,150,1.674,229,1.258,238,4.596,515,3.534,545,4.165,618,4.165,619,3.767,620,3.767,621,3.131,622,4.402,623,6.05,624,6.05,625,3.074,626,6.05,627,6.05,628,5.173]],["title/interceptors/ErrorInterceptor.html",[254,2.28,629,2.485]],["body/interceptors/ErrorInterceptor.html",[2,0.19,3,0.19,4,0.166,6,0.19,7,1.037,9,0.807,12,4.034,13,0.823,15,1.222,16,0.021,17,0.774,18,0.326,19,0.926,26,2.106,27,1.127,29,3.077,30,0.855,31,1.157,32,0.57,33,1.867,34,3.142,36,2.792,37,1.867,42,0.19,43,0.24,44,1.002,45,1.115,46,1.465,52,1.222,54,2.949,63,3.142,66,0.014,67,0.014,70,0.537,97,0.361,103,1.779,127,1.222,128,1.222,153,1.867,166,1.569,230,3.433,233,4.079,236,4.079,237,4.116,251,2.321,254,3.15,255,2.792,282,3.433,295,3.461,301,3.509,343,4.612,345,2.147,398,1.241,421,3.142,424,1.988,428,2.106,621,3.15,629,2.53,630,3.674,631,4.987,632,5.192,633,5.661,634,4.841,635,3.142,636,3.674,637,4.612,638,3.789,639,4.987,640,5.192,641,4.987,642,3.142,643,5.192,644,3.547,645,3.674,646,3.789,647,4.265,648,4.265,649,4.265,650,4.265,651,3.142,652,4.265,653,4.987,654,3.674,655,3.674,656,3.674,657,2.792,658,3.674,659,3.674,660,5.661,661,3.674,662,3.674,663,3.674,664,3.674,665,3.674,666,3.674,667,3.674,668,3.674,669,3.142,670,3.142,671,3.674,672,3.674,673,3.674,674,3.674]],["title/components/FavoritesComponent.html",[97,0.262,202,0.984]],["body/components/FavoritesComponent.html",[2,0.198,3,0.198,4,0.173,6,0.198,7,1.066,9,1.27,13,0.954,16,0.021,17,0.897,27,0.711,30,0.489,32,0.594,42,0.198,43,0.25,44,1.398,53,0.747,55,1.596,56,1.325,66,0.014,67,0.014,70,0.363,75,0.7,97,0.505,98,1.044,99,1.365,100,1.365,101,1.365,108,1.85,109,1.293,110,2.233,111,2.111,113,1.64,115,1.64,125,1.976,127,1.512,128,1.256,134,1.225,154,2.228,155,1.293,156,1.161,189,1.225,190,1.64,191,1.474,192,2.202,193,1.365,194,1.101,195,1.365,196,1.365,197,1.101,198,1.365,199,1.044,200,1.044,201,1.365,202,1.683,203,1.365,204,1.044,205,1.365,206,1.044,207,1.365,208,1.101,209,1.365,210,1.044,211,1.365,212,1.044,213,1.365,214,1.101,215,1.365,216,1.101,217,1.365,218,1.044,219,1.365,220,1.044,221,1.365,222,1.044,223,1.365,224,1.044,225,1.225,226,1.044,227,1.293,228,1.365,252,2.044,286,2.297,410,4.69,430,3.237,442,2.995,675,3.273,676,5.126,677,3.137,678,5.126,679,4.733,680,3.237,681,5.126,682,5.126,683,3.979,684,5.126,685,4.384,686,3.237,687,3.894,688,3.828,689,3.237,690,2.995,691,4.733,692,5.126,693,5.126,694,2.297,695,3.273]],["title/classes/Filter.html",[43,0.236,696,2.109]],["body/classes/Filter.html",[2,0.256,3,0.256,4,0.224,6,0.256,13,1.077,16,0.021,18,0.427,28,3.709,42,0.256,43,0.395,52,1.214,53,0.991,66,0.017,67,0.018,70,0.47,72,4.24,75,0.827,127,1.214,128,1.214,131,3.289,148,3.534,149,3.074,158,1.768,252,1.977,430,3.821,625,3.074,696,4.264,697,4.24,698,6.798,699,6.798,700,6.798,701,4.958,702,4.958,703,4.596,704,3.289,705,4.958,706,3.821]],["title/injectables/GeocodeService.html",[31,0.838,707,2.743]],["body/injectables/GeocodeService.html",[2,0.184,3,0.184,4,0.161,6,0.184,7,1.246,9,1.225,13,0.989,15,1.197,16,0.021,17,0.758,18,0.364,19,0.907,27,1.233,29,3.773,30,0.624,31,1.293,32,0.553,37,1.811,40,2.252,41,1.811,42,0.184,43,0.233,49,4.127,52,1.657,55,1.549,66,0.017,67,0.014,70,0.529,75,0.668,76,2.857,81,1.035,127,1.469,128,1.469,132,3.189,142,1.598,156,1.482,166,1.263,240,3.526,251,3.085,252,1.948,256,2.854,406,2.857,424,2.586,428,2.063,435,2.454,458,1.598,551,2.328,599,2.454,670,3.049,707,3.711,708,3.049,709,4.885,710,6.764,711,7.114,712,4.885,713,4.885,714,4.885,715,3.565,716,5.995,717,4.885,718,3.259,719,4.885,720,5.995,721,3.565,722,3.711,723,3.711,724,5.573,725,5.995,726,4.178,727,3.565,728,4.885,729,4.885,730,4.885,731,4.885,732,4.885,733,4.885,734,4.885,735,4.885,736,3.565,737,4.885,738,3.565,739,3.049,740,3.565]],["title/components/HowToComponent.html",[97,0.262,204,0.984]],["body/components/HowToComponent.html",[2,0.301,3,0.101,4,0.088,9,0.427,16,0.02,17,0.844,18,0.203,19,0.962,30,0.249,32,0.302,42,0.101,43,0.127,44,0.848,50,1.173,52,1.088,54,1.314,55,0.804,56,0.804,57,3.3,66,0.009,67,0.016,70,0.185,76,2.386,83,2.815,86,1.421,92,1.965,97,0.352,98,0.53,99,0.694,100,0.694,101,0.694,103,1.11,108,1.244,109,0.657,110,2.033,111,1.913,113,0.996,115,0.996,125,0.623,131,2.414,132,1.394,137,1.691,142,2.677,147,1.11,148,2.594,149,2.257,153,2.257,154,2.112,158,1.847,186,1.965,189,0.623,190,0.996,191,0.895,192,1.584,193,0.694,194,0.559,195,0.694,196,0.694,197,0.559,198,0.694,199,0.53,200,1.72,201,0.694,202,0.53,203,0.694,204,1.211,205,0.694,206,0.53,207,0.694,208,0.559,209,0.694,210,0.53,211,0.694,212,0.53,213,0.694,214,0.559,215,0.694,216,0.559,217,0.694,218,0.53,219,0.694,220,0.53,221,0.694,222,0.53,223,0.694,224,0.53,225,2.019,226,0.53,227,0.657,228,0.694,238,3.374,239,2.142,243,3.567,270,3.071,279,2.363,286,1.394,301,2.257,325,1.339,393,2.594,396,2.363,405,4.202,406,2.523,420,4.276,422,1.581,424,2.691,429,3.271,431,1.965,437,1.965,439,3.923,450,3.935,509,2.751,511,2.805,513,2.805,518,4.429,567,3.887,579,4.719,612,3.374,613,1.965,622,3.567,644,3.735,677,3.035,685,5.312,686,1.965,690,3.3,704,2.414,706,1.965,718,1.691,741,1.664,742,1.664,743,2.66,744,3.798,745,3.111,746,3.111,747,2.66,748,3.111,749,3.798,750,6.033,751,3.798,752,2.66,753,2.66,754,4.441,755,5.108,756,3.111,757,4.441,758,6.83,759,3.111,760,2.363,761,3.271,762,4.441,763,3.111,764,3.111,765,4.719,766,6.83,767,5.108,768,4.429,769,3.026,770,3.111,771,3.111,772,3.111,773,3.111,774,4.441,775,5.108,776,4.857,777,3.111,778,5.649,779,3.111,780,2.66,781,2.66,782,2.66,783,3.111,784,3.111,785,1.965,786,2.66,787,5.312,788,3.111,789,2.66,790,4.441,791,2.66,792,3.111,793,3.111,794,3.111,795,4.441,796,3.111,797,3.111,798,3.111,799,4.441,800,2.66,801,1.817,802,2.142,803,4.441,804,3.111,805,3.374,806,1.965,807,3.798,808,3.111,809,3.111,810,2.66,811,3.798,812,1.946,813,2.66,814,3.111,815,5.179,816,3.111,817,2.66,818,1.946,819,3.111,820,3.111,821,4.441,822,3.111,823,4.441,824,2.142,825,3.111,826,1.946,827,4.441,828,3.111,829,3.889,830,3.111,831,4.441,832,2.805,833,3.111,834,3.111,835,3.111,836,2.66,837,3.111,838,3.111,839,3.111,840,3.111,841,3.111,842,1.664,843,1.946,844,1.946,845,3.111,846,1.946,847,1.946]],["title/interceptors/JwtInterceptor.html",[296,2.485,629,2.485]],["body/interceptors/JwtInterceptor.html",[2,0.216,3,0.216,4,0.189,6,0.216,7,1.13,9,0.919,13,0.897,15,1.331,16,0.021,17,0.844,18,0.355,19,1.009,27,1.009,29,3.282,30,0.817,31,1.261,32,0.649,37,2.125,42,0.216,43,0.273,44,1.14,45,1.269,50,2.048,52,1.331,66,0.015,67,0.015,70,0.573,103,1.938,127,1.331,128,1.331,166,1.56,236,3.967,237,4.231,241,4.647,296,3.742,343,5.033,345,2.443,398,1.413,415,3.967,418,4.366,426,4.205,458,1.874,548,4.129,559,4.647,613,3.432,621,3.432,629,4.156,632,4.647,634,5.163,642,3.576,643,5.665,644,3.734,650,4.647,651,3.576,652,4.647,848,4.182,849,5.435,850,4.182,851,4.182,852,4.182,853,5.435,854,4.647,855,4.647,856,4.182,857,4.182,858,4.182,859,4.182,860,4.182,861,4.182,862,4.182]],["title/components/LandingComponent.html",[97,0.262,206,0.984]],["body/components/LandingComponent.html",[2,0.144,3,0.144,4,0.126,6,0.144,7,0.852,9,0.612,10,1.628,11,1.734,12,1.628,13,0.943,15,0.682,16,0.021,17,0.833,18,0.318,19,0.517,20,1.735,27,0.761,28,2.472,30,0.685,32,0.433,33,1.416,39,0.941,42,0.144,43,0.182,44,1.118,45,0.845,53,0.985,54,1.732,55,1.386,56,1.06,58,3.506,65,1.628,66,0.011,67,0.011,70,0.389,75,0.56,97,0.484,98,0.76,99,0.994,100,0.994,101,0.994,103,1.462,108,1.557,109,0.941,110,2.151,111,2.077,113,1.312,115,1.312,125,1.717,128,1.465,129,2.823,134,1.312,136,2.823,139,2.589,147,1.462,150,1.385,154,0.892,162,1.05,166,0.72,169,2.139,183,3.506,184,2.395,185,3.506,189,0.892,190,1.312,191,1.179,192,1.913,193,0.994,194,0.801,195,0.994,196,0.994,197,0.801,198,0.994,199,0.76,200,0.76,201,0.994,202,0.76,203,0.994,204,0.76,205,0.994,206,1.463,207,0.994,208,0.801,209,0.994,210,0.76,211,0.994,212,0.76,213,0.994,214,0.801,215,0.994,216,0.801,217,0.994,218,0.76,219,0.994,220,0.76,221,0.994,222,0.76,223,0.994,224,0.76,225,0.892,226,0.76,227,0.941,228,0.994,393,2.395,397,5.424,403,3.693,424,2.139,426,2.395,431,2.589,442,2.395,509,2.783,528,3.115,529,2.823,560,2.589,561,1.177,563,3.506,578,1.177,638,3.115,644,2.395,686,3.388,689,2.589,690,2.395,694,1.249,704,2.916,749,5.424,750,4.587,769,3.134,787,3.506,789,3.506,802,2.823,805,4.819,806,3.388,829,2.823,863,2.382,864,4.1,865,4.1,866,4.1,867,4.1,868,4.1,869,2.404,870,4.117,871,4.587,872,4.1,873,2.786,874,2.786,875,2.786,876,4.1,877,4.1,878,3.506,879,2.083,880,2.117,881,2.382,882,2.117,883,3.506,884,6.583,885,5.113,886,5.365,887,3.345,888,3.506,889,5.365,890,5.365,891,4.1,892,2.786,893,4.1,894,4.587,895,3.506,896,3.506,897,4.1,898,4.1,899,3.506,900,4.1,901,4.1,902,2.786,903,5.365,904,4.1,905,4.1,906,2.786,907,2.786]],["title/components/LikesComponent.html",[97,0.262,208,1.038]],["body/components/LikesComponent.html",[2,0.161,3,0.161,4,0.141,6,0.161,7,0.925,9,0.685,11,1.715,13,0.933,15,0.764,16,0.021,17,0.878,18,0.339,19,0.579,20,2.016,27,0.579,30,0.817,32,0.484,39,1.502,42,0.161,43,0.204,44,1.213,45,0.946,46,1.243,50,2.131,52,1.385,53,1.015,56,1.149,66,0.012,67,0.016,70,0.422,75,0.608,97,0.495,98,0.85,99,1.112,100,1.112,101,1.112,108,1.659,109,1.053,110,2.182,111,2.06,113,1.423,115,1.423,125,1.809,127,1.089,128,1.089,134,0.998,139,2.809,147,1.586,150,1.909,154,0.998,155,1.053,156,0.946,158,1.586,162,1.175,166,1.149,169,2.478,189,0.998,190,1.423,191,1.279,192,2.016,193,1.112,194,0.896,195,1.112,196,1.112,197,0.896,198,1.112,199,0.85,200,1.414,201,1.112,202,0.85,203,1.112,204,0.85,205,1.112,206,0.85,207,1.112,208,1.626,209,1.112,210,0.85,211,1.112,212,0.85,213,1.112,214,0.896,215,1.112,216,0.896,217,1.112,218,0.85,219,1.112,220,0.85,221,1.112,222,0.85,223,1.112,224,0.85,225,0.998,226,0.85,227,1.053,228,1.112,247,2.873,298,2.388,339,1.694,398,1.053,422,2.26,458,1.993,509,2.478,511,2.809,513,2.809,520,1.993,561,1.317,578,1.317,625,2.26,677,3.323,679,3.062,691,3.062,694,1.397,824,3.062,869,2.534,879,1.584,887,2.26,908,2.666,909,4.447,910,4.447,911,4.835,912,2.146,913,4.447,914,3.379,915,3.029,916,3.117,917,2.598,918,3.379,919,3.117,920,3.775,921,3.379,922,2.666,923,2.471,924,1.821,925,1.694,926,1.694,927,2.598,928,2.368,929,2.598,930,2.368,931,2.666,932,3.029,933,2.146,934,2.146,935,1.821,936,1.821,937,2.368,938,2.666,939,4.447,940,4.447,941,4.447,942,4.447,943,3.803,944,3.379,945,3.803,946,3.803,947,3.803,948,4.447]],["title/components/LikesmatchwebComponent.html",[97,0.262,210,0.984]],["body/components/LikesmatchwebComponent.html",[2,0.201,3,0.134,4,0.117,6,0.134,7,0.807,9,0.569,11,1.57,13,0.961,15,1.141,16,0.021,17,0.904,18,0.362,19,0.865,20,1.846,23,1.234,27,0.865,30,0.771,32,0.402,39,1.311,42,0.201,43,0.169,44,1.059,45,0.785,46,1.033,50,1.951,52,1.268,53,1.012,55,0.669,56,1.004,66,0.011,67,0.014,70,0.368,75,0.531,81,0.721,97,0.476,98,0.706,99,0.924,100,0.924,101,0.924,108,1.491,109,0.875,110,2.129,111,2.008,113,1.243,115,1.243,125,1.656,127,1.268,128,0.951,131,2.111,134,1.491,139,2.452,147,1.385,150,1.873,154,0.829,155,0.875,156,0.785,158,1.385,162,0.976,166,1.004,169,2.407,189,0.829,190,1.243,191,1.117,192,1.846,193,0.924,194,0.745,195,0.924,196,0.924,197,0.745,198,0.924,199,0.706,200,0.706,201,0.924,202,0.706,203,0.924,204,0.706,205,0.924,206,0.706,207,0.924,208,0.745,209,0.924,210,1.411,211,0.924,212,0.706,213,0.924,214,0.745,215,0.924,216,0.745,217,0.924,218,0.706,219,0.924,220,0.706,221,0.924,222,0.706,223,0.924,224,0.706,225,0.829,226,0.706,227,0.875,228,0.924,229,0.538,240,1.408,247,2.63,298,2.186,339,1.408,353,2.111,398,0.875,409,3.129,458,1.74,509,2.407,520,1.74,561,1.094,578,1.094,625,1.973,677,3.226,680,2.452,687,2.95,691,2.673,769,1.513,785,2.452,801,3.527,824,2.673,869,2.485,879,1.316,887,1.973,912,1.783,914,2.95,915,2.721,917,2.268,918,2.95,921,3.539,923,1.234,924,1.513,925,1.408,926,1.408,927,2.268,928,1.967,929,2.268,930,1.967,932,2.721,935,3.527,936,1.513,949,1.967,950,3.321,951,3.321,952,4.426,953,3.321,954,3.321,955,3.883,956,2.673,957,2.59,958,2.673,959,2.673,960,3.563,961,3.563,962,2.268,963,3.563,964,2.673,965,2.59,966,2.673,967,2.59,968,2.59,969,3.502,970,2.452,971,1.635,972,1.513,973,2.214,974,2.214,975,1.783,976,2.673,977,3.269,978,1.783,979,2.673,980,2.673,981,1.783,982,4.275,983,1.783,984,2.214,985,2.214,986,2.214,987,2.214,988,2.214,989,1.967,990,1.967,991,2.214,992,2.214,993,1.635,994,2.214,995,4.275,996,4.426,997,4.426,998,4.426,999,3.321,1000,3.321,1001,2.95,1002,3.321]],["title/interfaces/Location.html",[132,1.618,229,0.751]],["body/interfaces/Location.html",[2,0.274,3,0.274,4,0.239,6,0.274,16,0.021,18,0.411,42,0.274,66,0.018,67,0.018,70,0.502,71,1.994,75,0.86,86,2.304,132,3.26,156,2.108,229,1.308,256,3.091,722,5.279,723,5.279,1003,4.525,1004,5.291,1005,6.291,1006,6.291]],["title/components/LoginComponent.html",[97,0.262,212,0.984]],["body/components/LoginComponent.html",[2,0.158,3,0.158,4,0.138,6,0.158,7,0.911,9,0.671,11,1.799,12,3.465,13,1.019,15,1.256,16,0.021,17,0.87,18,0.366,19,0.567,20,1.998,26,2.366,27,0.952,30,0.758,31,1.017,32,0.474,33,1.552,39,1.032,42,0.158,43,0.2,44,1.195,45,0.927,46,1.748,53,1.037,54,2.608,56,1.133,66,0.012,67,0.012,70,0.416,75,0.599,81,1.181,97,0.43,98,0.833,99,1.09,100,1.09,101,1.09,108,1.641,109,1.032,110,2.177,111,2.055,113,1.403,115,1.403,125,1.793,127,1.074,128,1.372,134,1.403,147,1.563,154,0.978,155,1.481,162,1.151,166,1.325,189,0.978,190,1.403,191,1.261,192,1.998,193,1.09,194,0.878,195,1.09,196,1.09,197,0.878,198,1.09,199,0.833,200,0.833,201,1.09,202,0.833,203,1.09,204,0.833,205,1.09,206,0.833,207,1.09,208,0.878,209,1.09,210,0.833,211,1.09,212,1.527,213,1.09,214,0.878,215,1.09,216,0.878,217,1.09,218,0.833,219,1.09,220,0.833,221,1.09,222,0.833,223,1.09,224,0.833,225,0.978,226,0.833,227,1.032,228,1.09,233,2.561,235,3.749,239,3.857,243,3.538,252,2.594,257,3.749,270,3.356,286,1.965,295,3.306,403,3.857,405,4.342,415,2.561,416,2.561,429,2.768,439,2.768,448,3.749,529,3.018,561,1.29,567,2.561,578,1.29,599,3.018,635,2.612,657,2.321,689,2.768,690,2.561,744,3.749,761,2.768,869,2.511,882,2.321,885,4.79,1007,2.612,1008,5.28,1009,4.384,1010,4.384,1011,5.602,1012,5.602,1013,4.384,1014,4.384,1015,3.749,1016,3.749,1017,4.384,1018,3.055,1019,2.768,1020,4.384,1021,3.055,1022,4.384,1023,3.055,1024,3.055,1025,4.384,1026,3.055,1027,3.055,1028,3.055,1029,3.055,1030,3.055,1031,4.384]],["title/injectables/MapsControllerService.html",[31,0.838,297,2.28]],["body/injectables/MapsControllerService.html",[2,0.326,3,0.186,4,0.163,6,0.186,7,1.024,9,0.793,13,0.925,15,1.373,16,0.021,17,0.87,18,0.367,19,1.041,26,2.368,27,1.259,29,3.622,30,0.832,31,1.301,32,0.56,37,1.833,42,0.186,43,0.236,45,1.094,52,1.661,55,1.273,66,0.014,67,0.014,70,0.532,74,2.08,76,2.939,81,1.338,97,0.357,127,1.206,128,1.206,132,2.986,149,3.204,166,1.63,182,3.39,184,2.877,236,3.276,252,1.964,262,4.211,297,3.11,331,2.483,342,4.342,345,2.107,393,2.877,406,2.939,416,3.52,417,2.74,424,1.964,428,2.08,430,3.11,452,2.74,454,2.278,455,2.74,494,3.741,548,3.741,560,3.11,621,3.11,646,3.741,683,4.342,704,3.048,706,3.11,722,4.945,723,4.945,726,4.211,801,2.877,806,3.11,1032,5.152,1033,2.74,1034,4.925,1035,4.925,1036,3.607,1037,4.211,1038,4.925,1039,3.607,1040,4.925,1041,5.607,1042,3.39,1043,4.925,1044,3.085,1045,4.925,1046,4.925,1047,3.39,1048,2.483,1049,3.607,1050,3.085,1051,4.211]],["title/interfaces/Marker.html",[229,0.751,1042,2.485]],["body/interfaces/Marker.html",[2,0.234,3,0.234,4,0.204,6,0.234,16,0.021,18,0.453,19,1.344,28,3.449,42,0.234,53,0.96,55,1.478,66,0.016,67,0.016,70,0.429,71,2.559,75,0.781,76,2.928,81,1.352,86,2.005,104,4.889,132,3.107,229,1.189,256,3.34,406,2.647,425,3.116,431,2.858,438,4.343,522,3.61,551,2.157,585,5.629,767,4.889,1042,4.773,1052,3.87,1053,6.583,1054,6.583,1055,6.583,1056,5.717,1057,6.266,1058,5.717,1059,4.526,1060,4.526,1061,3.87]],["title/injectables/MatchingControllerService.html",[31,0.838,298,1.525]],["body/injectables/MatchingControllerService.html",[2,0.11,3,0.11,4,0.096,6,0.11,7,0.694,9,0.467,13,1.012,15,1.502,16,0.021,17,0.952,18,0.401,19,1.139,27,1.369,29,3.813,30,0.719,31,1.177,32,0.33,37,1.08,42,0.11,43,0.139,45,0.645,52,0.817,53,1.068,66,0.009,67,0.015,70,0.593,81,0.62,86,2.35,91,3.414,127,0.817,128,0.817,158,2.079,166,1.704,236,2.962,237,3.951,245,2.535,247,1.696,248,4.984,252,1.331,256,3.144,298,1.41,342,3.705,345,1.242,396,3.546,398,0.718,406,1.41,417,1.615,422,3.382,443,3.523,450,3.546,452,1.615,453,1.818,454,1.343,455,1.615,509,2.601,515,1.95,520,2.802,522,3.681,530,2.108,551,2.777,613,2.108,621,2.108,625,1.696,640,2.854,677,3.436,696,3.852,718,3.168,810,2.854,832,3.681,887,3.518,925,1.156,1033,1.615,1037,3.991,1044,1.818,1051,1.818,1062,5.346,1063,3.337,1064,3.337,1065,3.337,1066,3.337,1067,3.337,1068,3.337,1069,3.337,1070,3.337,1071,3.337,1072,2.126,1073,3.337,1074,6.656,1075,2.126,1076,3.337,1077,6.712,1078,4.667,1079,5.828,1080,3.337,1081,2.126,1082,3.337,1083,2.126,1084,4.667,1085,3.337,1086,3.337,1087,3.337,1088,2.126,1089,3.337,1090,3.337,1091,3.337,1092,3.337,1093,4.12,1094,3.337,1095,3.337,1096,2.126,1097,3.337,1098,3.337,1099,3.337,1100,2.126,1101,3.337,1102,2.126,1103,4.667,1104,3.337,1105,2.126,1106,1.615,1107,4.12,1108,2.126,1109,1.818,1110,2.126,1111,2.126,1112,2.126,1113,2.126,1114,3.337,1115,3.337,1116,3.337,1117,3.337,1118,2.126,1119,3.337]],["title/components/NavbarComponent.html",[97,0.262,216,1.038]],["body/components/NavbarComponent.html",[2,0.135,3,0.135,4,0.118,6,0.135,7,0.813,9,0.859,10,1.527,11,1.689,12,3.252,13,0.999,15,0.64,16,0.021,17,0.807,18,0.256,19,0.485,20,1.671,26,2.196,27,0.965,30,0.711,32,0.406,33,1.328,39,0.883,42,0.135,43,0.171,44,1.066,46,1.868,52,1.274,53,1.051,54,2.815,55,1.344,56,1.011,65,2.284,66,0.011,67,0.011,70,0.371,75,0.534,92,2.47,97,0.504,98,0.713,99,0.932,100,0.932,101,0.932,103,2.221,108,1.499,109,0.883,110,2.132,111,2.031,113,1.251,115,1.251,125,1.664,127,1.588,128,1.431,129,2.692,134,1.499,147,2.084,150,1.321,154,0.837,155,0.883,156,0.793,162,0.985,166,1.211,169,2.483,189,0.837,190,1.251,191,1.125,192,1.855,193,0.932,194,0.752,195,0.932,196,0.932,197,0.752,198,0.932,199,0.713,200,1.277,201,0.932,202,0.713,203,0.932,204,0.713,205,0.932,206,0.713,207,0.932,208,0.752,209,0.932,210,0.713,211,0.932,212,0.713,213,0.932,214,0.752,215,0.932,216,1.495,217,0.932,218,0.713,219,0.932,220,0.713,221,0.932,222,0.713,223,0.932,224,0.713,225,0.837,226,0.713,227,0.883,228,0.932,240,2.126,295,3.235,301,2.642,403,1.8,405,3.284,406,1.652,410,2.971,412,4.438,415,2.284,428,1.652,429,2.47,430,3.284,431,2.47,442,2.284,491,3.344,506,2.235,561,1.979,578,1.104,579,2.971,657,1.986,690,2.284,694,1.753,753,3.344,829,2.692,869,2.331,870,4.463,871,4.447,878,3.344,879,2.642,880,2.971,881,2.235,882,3.559,883,3.344,926,2.126,1016,3.344,1120,2.235,1121,3.911,1122,3.911,1123,3.911,1124,5.567,1125,4.685,1126,3.911,1127,3.911,1128,3.911,1129,3.911,1130,3.344,1131,3.911,1132,2.614,1133,2.614,1134,3.911,1135,3.911,1136,3.911,1137,3.344,1138,3.911,1139,2.614,1140,2.614,1141,3.344,1142,2.614,1143,3.911,1144,2.614,1145,2.614,1146,3.911,1147,2.614,1148,2.614,1149,2.614,1150,2.614,1151,3.911]],["title/interfaces/Office.html",[137,1.962,229,0.751]],["body/interfaces/Office.html",[2,0.263,3,0.263,4,0.229,6,0.263,16,0.021,17,1.107,18,0.432,42,0.263,53,0.741,66,0.017,67,0.017,70,0.482,71,1.917,75,0.84,76,2.896,81,1.324,86,2.113,91,3.4,132,2.754,137,3.985,150,1.718,229,1.277,515,3.589,1152,4.349,1153,6.144,1154,6.144,1155,6.144]],["title/directives/PlacesAutocompleteDirective.html",[56,0.933,226,0.984]],["body/directives/PlacesAutocompleteDirective.html",[2,0.226,3,0.226,4,0.197,6,0.226,7,1.163,9,0.961,13,1.109,15,1.37,16,0.021,17,0.869,18,0.403,19,1.039,27,1.145,30,0.788,32,0.679,42,0.226,43,0.286,44,1.525,45,1.327,46,2.592,56,1.594,66,0.016,67,0.016,75,0.764,108,1.974,109,1.478,110,1.697,125,2.08,134,1.4,142,2.508,191,1.87,226,1.525,227,1.89,277,3.741,331,3.012,347,5.221,372,4.784,398,1.89,1156,5.877,1157,3.741,1158,5.595,1159,6.501,1160,6.168,1161,4.375,1162,5.559,1163,6.986,1164,5.595,1165,5.595,1166,6.501,1167,5.595,1168,4.375,1169,4.375,1170,6.168,1171,4.375,1172,3.741,1173,4.375,1174,4.375,1175,4.375,1176,4.375,1177,4.375,1178,4.375,1179,4.375,1180,4.375]],["title/interfaces/Register.html",[229,0.751,567,2.109]],["body/interfaces/Register.html",[2,0.312,3,0.255,4,0.223,6,0.255,16,0.021,17,0.937,18,0.426,42,0.255,53,1.064,55,1.277,66,0.017,67,0.017,70,0.469,71,1.862,74,2.087,75,0.825,81,1.354,97,0.358,103,2.153,107,5.162,142,3.215,143,4.586,229,1.255,270,3.851,393,2.886,426,4.139,439,3.12,551,2.354,567,3.526,761,4.288,1181,4.224,1182,6.036,1183,6.036,1184,4.586]],["title/components/RideswipeComponent.html",[97,0.262,218,0.984]],["body/components/RideswipeComponent.html",[2,0.223,3,0.223,4,0.194,6,0.223,7,1.152,9,1.345,13,1.01,16,0.021,17,0.95,27,0.8,30,0.55,32,0.669,42,0.223,43,0.282,44,1.51,56,1.431,66,0.015,67,0.015,75,0.757,97,0.484,98,1.174,99,1.536,100,1.536,101,1.536,108,1.959,109,1.454,110,2.258,111,2.136,113,1.772,115,1.772,125,2.068,134,1.378,154,1.378,155,1.454,156,1.306,189,1.378,190,1.772,191,1.593,192,2.305,193,1.536,194,1.238,195,1.536,196,1.536,197,1.238,198,1.536,199,1.174,200,1.174,201,1.536,202,1.174,203,1.536,204,1.174,205,1.536,206,1.174,207,1.536,208,1.238,209,1.536,210,1.174,211,1.536,212,1.174,213,1.536,214,1.238,215,1.536,216,1.238,217,1.536,218,1.762,219,1.536,220,1.174,221,1.536,222,1.174,223,1.536,224,1.174,225,1.378,226,1.174,227,1.454,228,1.536,408,4.736,679,4.45,683,4.215,694,2.482,695,3.683,1185,3.683,1186,5.539,1187,5.539,1188,5.539,1189,4.307]],["title/interfaces/RouteInfo.html",[229,0.751,1048,2.485]],["body/interfaces/RouteInfo.html",[2,0.269,3,0.269,4,0.235,6,0.269,16,0.021,18,0.408,26,2.985,42,0.269,66,0.017,67,0.017,70,0.494,75,0.852,86,2.296,89,5.331,229,1.296,252,2.078,424,2.078,620,3.959,706,4.531,718,2.833,1047,4.292,1048,4.292,1190,4.456,1191,5.211,1192,6.913,1193,6.913,1194,6.234]],["title/classes/SwipecardModel.html",[43,0.236,920,2.28]],["body/classes/SwipecardModel.html",[2,0.265,3,0.265,4,0.232,6,0.265,13,1.02,16,0.021,18,0.336,30,0.656,42,0.265,43,0.404,53,1.085,66,0.017,67,0.017,70,0.487,71,2.329,75,0.844,155,1.734,156,1.557,158,2.204,190,1.977,524,4.39,551,2.944,694,2.769,718,3.359,920,3.902,937,5.431,1195,4.39,1196,6.879,1197,5.133,1198,5.133]],["title/injectables/TokenStorage.html",[31,0.838,418,2.28]],["body/injectables/TokenStorage.html",[2,0.231,3,0.231,4,0.202,6,0.231,7,1.362,9,0.982,13,0.936,15,1.094,16,0.021,17,0.693,18,0.292,19,0.829,27,1.216,30,0.571,31,1.445,32,0.693,40,2.821,41,2.27,42,0.231,43,0.292,50,2.348,55,1.61,66,0.016,67,0.016,70,0.538,81,1.303,134,1.43,136,3.903,147,2.337,153,2.881,166,1.155,252,2.612,282,3.903,398,1.509,415,4.189,418,3.581,425,4.51,426,4.306,449,3.394,683,4.757,747,3.82,870,4.832,1199,3.394,1200,6.551,1201,5.67,1202,4.467,1203,5.67,1204,4.467,1205,3.394,1206,3.82,1207,4.467,1208,4.467]],["title/injectables/UploadService.html",[31,0.838,1209,2.743]],["body/injectables/UploadService.html",[2,0.181,3,0.181,4,0.325,6,0.181,7,1.001,9,1.211,13,1.029,15,0.856,16,0.021,17,0.923,18,0.315,19,0.648,27,1.268,30,0.615,31,1.447,32,0.542,40,2.206,41,2.801,42,0.181,43,0.228,48,4.251,49,3.316,52,1.649,55,1.666,65,2.04,66,0.013,67,0.013,70,0.457,74,2.035,75,0.658,81,1.024,86,1.118,92,2.206,97,0.349,103,1.246,127,1.18,128,1.18,129,3.316,136,3.316,142,1.565,150,1.627,155,1.18,156,1.059,166,1.245,169,1.921,233,2.04,282,3.316,286,2.159,398,1.862,428,2.035,435,2.405,508,4.119,522,3.754,529,2.405,551,2.296,599,2.405,628,4.119,694,1.565,989,2.654,990,3.659,1109,2.987,1209,3.659,1210,2.987,1211,6.914,1212,5.083,1213,4.817,1214,7.238,1215,6.831,1216,5.943,1217,4.817,1218,6.446,1219,5.943,1220,4.817,1221,4.817,1222,3.493,1223,4.817,1224,3.493,1225,5.514,1226,3.493,1227,4.119,1228,2.987,1229,3.493,1230,3.493,1231,3.493,1232,3.493,1233,3.493,1234,3.493,1235,2.04,1236,3.493,1237,3.493,1238,3.493,1239,3.493,1240,3.493,1241,3.493,1242,3.493,1243,3.493,1244,3.493,1245,5.514,1246,3.493,1247,3.493,1248,3.493,1249,3.493,1250,4.817,1251,5.943,1252,3.493,1253,3.493,1254,3.493,1255,3.493]],["title/interfaces/User.html",[53,0.526,229,0.751]],["body/interfaces/User.html",[2,0.178,3,0.178,4,0.156,6,0.178,16,0.021,17,0.918,18,0.468,19,0.887,28,2.783,30,0.793,42,0.178,48,3.733,50,1.8,53,1.024,66,0.013,67,0.013,75,0.652,76,2.712,81,1.369,83,2.596,86,1.753,91,3.06,117,4.491,131,2.596,137,3.579,147,1.703,148,2.79,149,2.426,150,1.613,158,1.703,169,1.904,200,1.857,225,1.528,229,0.993,245,3.628,261,4.083,270,3.214,406,2.017,416,2.79,424,1.904,437,3.733,439,3.016,442,2.79,515,2.79,520,3.091,525,2.949,560,3.016,618,4.273,622,3.459,625,3.656,752,4.083,760,3.628,761,3.733,836,4.083,923,3.287,944,2.62,1001,4.491,1050,2.949,1256,2.949,1257,5.491,1258,5.055,1259,5.055,1260,5.912,1261,6.421,1262,4.775,1263,4.775,1264,4.775,1265,4.775,1266,4.083,1267,4.083,1268,4.775,1269,4.775,1270,4.775,1271,3.449,1272,3.449]],["title/interfaces/UserCard.html",[229,0.751,409,1.72]],["body/interfaces/UserCard.html",[2,0.277,3,0.171,4,0.149,6,0.171,11,1.407,16,0.021,18,0.35,20,1.654,23,1.577,30,0.832,32,0.514,39,1.567,42,0.24,43,0.216,44,0.902,45,1.003,46,1.319,50,1.748,52,1.136,53,1.048,55,1.199,66,0.013,67,0.015,70,0.314,75,0.634,81,1.177,97,0.443,108,1.484,110,1.003,111,0.951,113,1.059,115,1.059,125,1.059,127,1.136,128,0.81,139,2.089,147,1.18,150,1.961,158,1.18,162,1.247,166,1.199,169,2.527,210,0.902,229,0.964,240,2.521,247,2.357,298,1.959,339,1.798,353,2.521,398,1.117,409,3.02,458,2.079,509,2.438,520,2.079,561,1.397,578,1.397,625,1.681,677,3.106,680,2.089,687,2.513,691,2.277,769,2.71,785,3.861,801,3.802,824,2.277,869,2.079,879,1.681,887,1.681,914,2.513,915,2.71,917,1.933,918,2.513,921,4.069,923,1.577,924,1.933,925,1.798,926,1.798,927,2.71,928,2.513,929,2.71,930,2.513,932,3.129,935,3.129,936,1.933,949,2.513,950,2.829,951,2.829,952,2.829,956,2.277,958,2.277,959,2.277,960,3.193,961,3.193,962,1.933,963,4.363,964,2.277,966,2.277,969,3.861,970,2.929,971,2.089,972,1.933,973,3.966,974,3.966,975,2.277,976,3.193,977,3.667,978,2.277,979,3.193,980,3.193,981,2.277,982,4.572,983,2.277,984,2.829,985,2.829,986,2.829,987,2.829,988,2.829,989,2.513,990,2.513,991,2.829,992,2.829,993,2.089,994,2.829,995,4.572]],["title/interfaces/UserCard-1.html",[229,0.627,409,1.437,1235,1.761]],["body/interfaces/UserCard-1.html",[2,0.144,3,0.144,4,0.126,6,0.212,11,1.475,16,0.021,18,0.318,20,1.462,23,1.328,30,0.81,31,0.647,32,0.433,39,1.385,42,0.144,43,0.182,44,0.76,45,0.845,46,1.111,50,1.05,52,1.192,53,1.065,57,2.395,66,0.011,67,0.018,70,0.264,71,2.022,74,1.177,75,0.56,81,1.11,83,1.514,86,1.717,97,0.389,103,0.994,108,1.312,110,0.845,111,0.801,113,0.892,115,0.892,125,0.892,127,1.314,128,1.004,147,1.735,150,0.941,153,2.472,154,1.557,158,0.994,162,1.05,166,1.545,169,2.28,184,2.395,186,2.589,190,1.312,191,0.801,222,0.76,225,1.312,229,0.852,240,2.229,247,2.083,298,2.055,339,1.514,353,2.229,395,2.823,398,0.941,409,3.023,428,1.732,458,1.837,492,3.349,496,3.696,509,1.111,520,2.404,530,1.76,552,3.115,557,2.117,561,2.266,578,1.177,637,2.117,677,1.416,680,1.76,696,2.395,718,2.229,776,2.117,785,3.611,801,3.611,806,1.76,832,3.072,869,1.249,879,1.416,915,2.395,917,1.628,923,1.328,924,1.628,925,1.514,926,1.514,927,2.395,929,2.842,932,2.842,933,1.918,934,1.918,935,3.705,936,1.628,956,1.918,958,1.918,959,1.918,960,2.823,961,2.823,962,1.628,963,4.117,964,1.918,966,1.918,969,3.611,970,2.589,971,1.76,972,1.628,975,1.918,976,2.823,977,3.388,978,1.918,979,2.823,980,2.823,981,1.918,982,4.367,983,1.918,993,2.589,995,4.367,1019,3.072,1106,2.117,1235,2.842,1273,2.117,1274,2.823,1275,2.382,1276,2.382,1277,2.382,1278,2.117,1279,2.117,1280,2.117,1281,2.117,1282,2.382,1283,2.117,1284,2.117,1285,4.16,1286,2.382,1287,2.382,1288,4.543,1289,2.382,1290,2.382,1291,2.117,1292,2.382,1293,4.587,1294,3.115,1295,5.113,1296,2.117,1297,3.115,1298,2.117,1299,2.382,1300,2.382]],["title/components/UsercardComponent.html",[97,0.262,220,0.984]],["body/components/UsercardComponent.html",[2,0.202,3,0.101,4,0.176,6,0.202,7,0.651,9,0.431,11,1.479,13,1.081,15,0.958,16,0.021,17,0.88,18,0.407,19,0.726,20,1.592,23,1.863,27,0.905,28,1.986,30,0.746,31,0.727,32,0.305,39,1.058,42,0.101,43,0.128,44,0.854,45,0.595,46,0.782,50,1.181,52,1.093,53,1.007,56,0.81,66,0.009,67,0.016,68,1.351,70,0.297,71,1.682,74,1.323,75,0.428,76,1.323,81,0.965,83,1.067,86,1.002,97,0.423,98,0.535,99,0.7,100,0.7,101,0.7,103,1.117,108,1.251,109,0.663,110,2.037,111,1.916,113,1.002,115,1.002,125,1.428,127,1.195,128,1.093,132,1.404,134,1.561,138,3.343,147,2.083,150,1.058,153,2.267,154,1.746,155,1.843,156,1.655,158,1.592,162,0.74,166,1.01,169,2.073,189,0.628,190,1.002,191,1.569,192,1.592,193,0.7,194,0.564,195,0.7,196,0.7,197,0.564,198,0.7,199,0.535,200,1.066,201,0.7,202,0.535,203,0.7,204,0.535,205,0.7,206,0.535,207,0.7,208,0.564,209,0.7,210,0.535,211,0.7,212,0.535,213,0.7,214,0.564,215,0.7,216,0.564,217,0.7,218,0.535,219,0.7,220,1.217,221,0.7,222,0.535,223,0.7,224,0.535,225,0.628,226,0.535,227,0.663,228,0.7,247,1.591,298,2.06,339,1.067,353,3.175,398,0.663,409,1.493,428,1.885,437,1.978,458,1.404,520,1.404,530,1.978,551,1.493,561,2.393,578,0.829,644,1.146,679,2.156,686,1.978,690,1.83,694,0.879,755,1.678,786,1.678,802,1.351,805,2.38,807,3.343,817,2.678,869,2,879,0.997,880,1.491,887,1.591,911,4.446,912,1.351,915,2.284,917,1.83,920,3.578,922,1.678,923,0.935,924,1.146,925,1.067,926,1.067,927,1.83,929,2.284,931,1.678,932,2.284,933,1.351,934,1.351,935,2.607,936,1.146,937,1.491,938,1.678,943,2.678,944,2.38,945,2.678,946,2.678,947,2.678,969,3.283,970,1.978,971,2.469,972,1.146,977,3.08,1061,2.678,1162,4.666,1212,2.678,1235,2.607,1274,2.156,1278,2.38,1279,2.38,1280,1.491,1281,1.491,1283,4.924,1284,1.491,1294,1.491,1296,1.491,1297,1.491,1298,1.491,1301,1.678,1302,3.132,1303,3.132,1304,4.463,1305,4.463,1306,4.463,1307,4.463,1308,4.463,1309,4.463,1310,4.463,1311,4.463,1312,3.132,1313,3.909,1314,3.132,1315,3.132,1316,1.962,1317,4.877,1318,1.962,1319,3.132,1320,1.962,1321,5.456,1322,3.909,1323,1.962,1324,3.132,1325,1.962,1326,3.909,1327,4.463,1328,1.962,1329,3.816,1330,4.463,1331,1.962,1332,1.962,1333,1.962,1334,1.962,1335,5.456,1336,3.132,1337,5.456,1338,3.132,1339,1.962,1340,3.132,1341,3.132,1342,3.909,1343,4.463,1344,3.132,1345,1.962,1346,3.132,1347,1.962,1348,3.909,1349,1.962,1350,3.132,1351,1.962,1352,1.962,1353,1.962,1354,1.962,1355,1.962,1356,1.962,1357,1.962,1358,1.962,1359,1.962,1360,3.132,1361,1.962,1362,1.962,1363,1.962,1364,3.132,1365,1.962,1366,1.962,1367,1.962,1368,1.962,1369,1.962,1370,1.962,1371,1.962,1372,1.962,1373,1.962,1374,1.962,1375,1.962,1376,3.132,1377,1.962,1378,1.962,1379,1.962,1380,1.962,1381,1.962,1382,3.132,1383,5.199,1384,3.132,1385,1.962,1386,4.463,1387,1.962,1388,1.962,1389,1.962,1390,1.962,1391,4.463,1392,4.463,1393,3.132,1394,3.132,1395,3.132,1396,1.962,1397,3.132,1398,1.962]],["title/components/UsermatchwebComponent.html",[97,0.262,222,0.984]],["body/components/UsermatchwebComponent.html",[2,0.111,3,0.111,4,0.097,6,0.215,7,0.7,9,0.473,11,1.547,13,0.966,15,1.15,16,0.021,17,0.878,18,0.354,19,0.872,20,1.675,23,1.025,27,0.947,30,0.748,31,0.782,32,0.334,39,1.137,42,0.111,43,0.141,44,0.918,45,0.652,46,0.858,50,1.269,52,1.249,53,1.053,56,0.87,57,1.256,66,0.009,67,0.018,70,0.484,71,1.269,74,1.422,75,0.46,81,0.625,83,1.169,86,1.872,97,0.436,98,0.586,99,0.767,100,0.767,101,0.767,103,1.201,108,1.328,109,0.726,110,2.069,111,1.949,113,1.078,115,1.078,125,1.503,127,1.385,128,1.15,131,1.831,134,1.632,147,1.819,148,1.967,149,1.711,150,1.137,153,2.109,154,1.809,155,0.726,156,0.652,158,1.201,162,0.811,166,1.398,169,2.033,184,1.967,186,1.358,189,0.688,190,1.328,191,1.194,192,1.675,193,0.767,194,0.618,195,0.767,196,0.767,197,0.618,198,0.767,199,0.586,200,0.586,201,0.767,202,0.586,203,0.767,204,0.586,205,0.767,206,0.586,207,0.767,208,0.618,209,0.767,210,0.586,211,0.767,212,0.586,213,0.767,214,0.618,215,0.767,216,0.618,217,0.767,218,0.586,219,0.767,220,0.586,221,0.767,222,1.28,223,0.767,224,0.586,225,1.078,226,0.586,227,0.726,228,0.767,229,0.447,240,1.169,247,1.711,298,2.154,339,1.169,353,1.831,395,1.481,398,0.726,409,3.08,428,1.984,458,1.509,470,2.559,492,2.858,496,3.153,509,0.858,520,1.86,530,2.127,552,3.568,557,1.634,561,1.984,578,0.908,612,2.559,637,2.559,677,1.093,680,2.127,696,3.302,703,2.559,704,1.831,706,2.127,718,1.169,776,3.568,785,2.127,801,3.302,806,2.127,832,2.621,869,2.105,879,1.093,912,1.481,915,2.425,917,1.967,923,1.025,924,1.256,925,1.169,926,1.169,927,1.967,929,2.425,932,2.425,933,1.481,934,1.481,935,3.821,936,1.256,953,2.88,954,2.88,956,2.319,958,2.319,959,2.319,960,3.233,961,3.233,962,1.967,963,3.233,964,2.319,966,2.319,969,3.22,970,2.127,971,1.358,972,1.256,975,1.481,976,2.319,977,2.966,978,1.481,979,2.319,980,2.319,981,1.481,982,4.028,983,1.481,993,2.127,995,4.028,996,4.016,997,4.016,998,2.88,999,4.016,1000,2.88,1001,2.559,1002,2.88,1019,2.621,1047,2.319,1106,1.634,1235,2.425,1273,1.634,1274,1.481,1275,2.88,1276,2.88,1277,2.88,1278,1.634,1279,2.559,1280,1.634,1281,1.634,1282,1.839,1283,1.634,1284,1.634,1285,3.549,1286,2.88,1287,2.88,1288,4.445,1289,2.88,1290,2.88,1291,1.634,1292,1.839,1293,4.016,1294,2.559,1295,4.625,1296,1.634,1297,2.559,1298,1.634,1299,1.839,1300,1.839,1399,3.368,1400,2.151,1401,2.151,1402,2.151,1403,2.151,1404,2.151,1405,2.151,1406,3.368]],["title/components/ViewProfileComponent.html",[97,0.262,224,0.984]],["body/components/ViewProfileComponent.html",[2,0.186,3,0.089,4,0.078,6,0.089,7,0.588,9,0.38,10,1.01,11,1.257,13,1.105,15,0.424,16,0.021,17,1.052,18,0.406,19,0.321,20,1.28,23,1.348,27,0.961,30,0.53,31,0.656,32,0.268,39,0.584,42,0.089,43,0.113,44,0.771,45,0.525,52,1.015,53,1.062,54,1.195,55,1.071,56,0.731,57,1.652,66,0.008,67,0.014,70,0.268,71,1.066,74,2.282,75,0.386,76,2.282,77,3.545,81,1.27,83,2.937,91,1.348,97,0.405,98,0.471,99,0.617,100,0.617,101,0.617,103,1.75,108,1.148,109,0.584,110,1.988,111,1.869,112,1.947,113,0.905,115,0.905,117,3.149,119,3.545,120,3.545,123,3.545,125,1.327,127,1.324,128,1.324,131,0.94,134,1.657,137,3.422,142,0.775,147,1.927,148,2.422,149,2.106,150,0.955,153,2.106,154,1.885,155,0.955,156,0.858,158,1.75,162,0.652,163,1.479,166,0.447,167,1.479,169,2.397,174,2.419,179,1.479,180,1.479,186,2.618,187,2.419,189,0.553,190,1.988,191,0.813,192,1.478,193,0.617,194,0.497,195,0.617,196,0.617,197,0.497,198,0.617,199,0.471,200,0.978,201,0.617,202,0.471,203,0.617,204,0.471,205,0.617,206,0.471,207,0.617,208,0.497,209,0.617,210,0.471,211,0.617,212,0.471,213,0.617,214,0.497,215,0.617,216,0.497,217,0.617,218,0.471,219,0.617,220,0.471,221,0.617,222,0.471,223,0.617,224,1.13,225,1.789,226,0.471,227,0.584,228,0.617,243,1.786,246,4.919,269,3.545,270,3.591,279,3.728,301,1.437,362,4.638,395,4.139,422,2.745,424,1.128,425,1.947,428,1.195,437,3.413,442,1.652,470,1.314,477,1.479,479,1.479,483,3.068,485,1.479,487,1.479,489,1.479,509,2.155,511,1.786,513,1.786,515,1.652,555,5.558,560,1.786,578,0.73,622,2.618,625,2.841,644,1.652,649,2.419,689,1.786,694,1.268,703,3.149,704,1.537,760,4.105,761,2.618,765,2.149,768,2.419,769,3.157,791,2.419,802,2.854,813,3.545,854,2.419,869,1.858,887,2.745,923,2.575,962,2.422,993,1.786,1008,2.419,1019,1.786,1130,3.545,1141,4.196,1184,2.149,1257,4.196,1258,3.545,1259,3.545,1266,4.621,1267,2.419,1274,1.947,1407,5.761,1408,1.479,1409,6.012,1410,2.828,1411,2.828,1412,4.145,1413,4.145,1414,4.145,1415,4.145,1416,4.145,1417,4.145,1418,2.828,1419,1.729,1420,1.729,1421,1.729,1422,1.729,1423,1.729,1424,2.828,1425,1.729,1426,2.828,1427,2.828,1428,1.729,1429,1.729,1430,1.729,1431,6.012,1432,1.729,1433,1.729,1434,1.729,1435,2.828,1436,1.729,1437,1.729,1438,1.729,1439,1.729,1440,1.729,1441,2.828,1442,1.729,1443,1.729,1444,1.729,1445,2.828,1446,1.729,1447,2.828,1448,1.729,1449,2.828,1450,1.729,1451,2.828,1452,1.729,1453,1.729,1454,1.729,1455,3.588,1456,1.729,1457,1.729,1458,1.729,1459,1.729,1460,1.729,1461,1.729,1462,1.729,1463,1.729,1464,1.729,1465,1.729,1466,1.729,1467,2.828,1468,1.729,1469,1.729,1470,1.729,1471,2.828,1472,1.729,1473,1.729,1474,1.729,1475,3.588,1476,1.729,1477,1.729,1478,1.729,1479,5.403,1480,2.828,1481,2.828,1482,2.828,1483,2.828,1484,2.828,1485,1.729,1486,2.828,1487,2.828,1488,2.828,1489,1.729]],["title/coverage.html",[1490,4.213]],["body/coverage.html",[4,0.165,11,1.107,16,0.021,18,0.239,31,1.551,43,0.414,53,0.532,56,0.943,66,0.014,67,0.014,68,2.513,69,3.121,97,0.525,98,0.995,102,3.121,132,1.636,137,1.984,142,1.636,194,1.05,197,1.05,199,0.995,200,0.995,202,0.995,204,0.995,206,0.995,208,1.05,210,0.995,212,0.995,214,1.05,216,1.05,218,0.995,220,0.995,222,0.995,224,0.995,226,0.995,229,1.45,230,2.513,231,2.773,232,2.773,264,3.121,295,1.855,297,2.305,298,1.542,325,2.513,347,2.773,359,2.513,362,2.513,375,2.773,376,3.121,409,2.366,414,3.121,418,2.305,420,2.513,438,2.773,454,3.135,497,3.121,507,3.121,526,3.121,527,3.121,561,2.823,567,2.132,571,3.121,618,2.513,619,2.773,620,3.772,675,3.121,696,2.132,697,3.121,707,2.773,708,3.121,741,3.121,742,3.121,863,3.121,908,3.121,920,2.305,949,3.772,1003,3.121,1007,3.121,1032,3.121,1033,4.286,1042,2.513,1048,2.513,1052,3.121,1062,3.121,1120,3.121,1152,3.121,1156,3.121,1157,3.121,1181,3.121,1185,3.121,1190,3.121,1195,3.121,1199,3.772,1205,2.773,1209,2.773,1210,3.121,1256,3.121,1273,3.772,1301,3.121,1407,3.121,1408,3.121,1490,3.121,1491,3.65,1492,3.65,1493,7.494,1494,6.333,1495,3.65,1496,4.964,1497,3.65,1498,4.964,1499,3.65,1500,6.801,1501,4.964,1502,5.642,1503,6.055,1504,3.65,1505,3.65,1506,3.65,1507,3.65,1508,3.65,1509,3.65,1510,3.65,1511,3.65,1512,3.65,1513,3.65,1514,6.055,1515,3.65,1516,3.65,1517,3.65,1518,3.65,1519,4.811,1520,3.121,1521,6.055,1522,3.121,1523,4.245,1524,3.121,1525,3.65]],["title/dependencies.html",[286,1.946,1526,3.014]],["body/dependencies.html",[16,0.021,32,0.787,33,2.575,37,3.115,66,0.017,67,0.017,286,2.271,288,3.85,307,5.242,308,4.221,314,4.333,317,3.85,318,4.333,331,3.489,352,4.333,353,2.755,354,4.333,388,4.333,972,2.96,1172,4.333,1228,4.333,1527,5.067,1528,5.067,1529,7.326,1530,5.067,1531,6.13,1532,5.067,1533,5.067,1534,5.067,1535,5.067,1536,5.067,1537,5.067,1538,5.067,1539,5.067,1540,5.067,1541,5.067,1542,5.067,1543,5.067,1544,5.067,1545,5.067,1546,5.067,1547,5.067,1548,5.067,1549,5.067,1550,5.067,1551,5.067]],["title/miscellaneous/enumerations.html",[1552,1.761,1553,3.713]],["body/miscellaneous/enumerations.html",[2,0.252,6,0.184,16,0.021,18,0.364,23,2.852,27,0.659,53,0.71,66,0.014,67,0.014,71,2.096,74,1.5,91,1.692,112,3.354,150,1.199,156,2.311,231,2.698,232,3.702,233,2.075,251,2.243,255,3.702,256,2.075,259,3.037,260,3.037,263,4.166,424,1.416,509,1.943,545,2.445,619,2.698,622,2.243,751,3.037,780,4.166,781,4.166,782,4.166,832,3.077,887,2.476,899,3.037,923,2.322,1184,3.702,1288,4.225,1291,2.698,1552,2.075,1553,3.037,1554,3.551,1555,4.872,1556,3.551,1557,4.872,1558,3.551,1559,3.551,1560,3.551,1561,3.551,1562,3.551,1563,3.551,1564,3.551,1565,3.551,1566,3.037,1567,3.551,1568,4.872,1569,3.551,1570,3.551,1571,3.551,1572,3.551,1573,3.551,1574,3.551,1575,3.551,1576,3.551,1577,3.551,1578,3.551,1579,3.551,1580,3.551,1581,3.551,1582,3.551,1583,3.551,1584,3.551,1585,3.551,1586,3.551,1587,3.551,1588,3.551,1589,3.551,1590,3.551,1591,3.551,1592,3.551,1593,3.551,1594,3.551,1595,3.551,1596,3.551,1597,3.551,1598,3.551,1599,3.551,1600,3.551,1601,3.551,1602,3.551,1603,3.551,1604,3.551,1605,3.551,1606,3.551,1607,3.551,1608,3.551,1609,3.551,1610,3.551,1611,3.551,1612,3.551,1613,3.551,1614,3.551,1615,3.551,1616,3.551,1617,3.551,1618,3.551,1619,3.551,1620,3.551,1621,3.551,1622,3.551,1623,3.551,1624,3.551,1625,3.551,1626,3.551,1627,3.551,1628,3.551,1629,3.551,1630,3.551,1631,3.551,1632,3.551,1633,3.551,1634,3.551,1635,3.551,1636,3.551,1637,3.551,1638,3.551,1639,3.551,1640,3.551,1641,3.551,1642,3.551,1643,3.037,1644,3.551,1645,3.551,1646,3.551,1647,3.551,1648,3.551,1649,3.551,1650,3.551,1651,3.551,1652,3.551,1653,3.551,1654,3.551,1655,3.551,1656,3.551,1657,3.551,1658,3.551,1659,3.551,1660,3.551,1661,3.551,1662,3.551,1663,3.551,1664,3.551,1665,3.551,1666,3.551,1667,3.551]],["title/index.html",[6,0.156,704,1.639,1019,1.904]],["body/index.html",[3,0.205,4,0.179,16,0.02,17,0.616,41,2.018,55,1.619,56,1.026,66,0.015,67,0.015,70,0.498,96,3.396,97,0.427,111,1.142,142,2.808,149,3.183,182,4.313,237,3.069,239,3.617,265,3.017,276,3.396,301,2.018,304,5.034,305,4.492,317,5.187,381,3.396,416,3.069,422,3.469,424,1.583,429,2.508,435,2.734,441,5.572,444,3.396,550,3.396,613,3.318,638,3.017,646,3.017,647,4.492,648,5.724,669,3.396,686,2.508,689,2.508,739,3.396,743,3.396,765,3.017,769,3.069,775,3.396,800,3.396,811,3.396,842,3.396,855,3.396,888,3.396,895,5.034,896,3.396,962,3.989,1015,4.492,1047,2.734,1137,3.396,1227,3.396,1566,4.492,1643,3.396,1668,3.971,1669,5.887,1670,3.971,1671,5.253,1672,6.828,1673,3.971,1674,3.971,1675,3.971,1676,6.515,1677,3.971,1678,3.971,1679,5.253,1680,3.971,1681,3.971,1682,3.396,1683,7.187,1684,3.017,1685,3.971,1686,3.971,1687,5.887,1688,5.253,1689,7.083,1690,3.971,1691,3.971,1692,6.515,1693,5.253,1694,5.887,1695,3.971,1696,5.887,1697,3.971,1698,5.887,1699,3.971,1700,6.515,1701,3.971,1702,3.971,1703,3.971,1704,3.971,1705,3.971,1706,5.253,1707,3.971,1708,3.971,1709,3.971,1710,3.971,1711,3.971,1712,3.971,1713,5.253,1714,5.253,1715,3.971,1716,3.971,1717,3.971]],["title/modules.html",[284,2.678]],["body/modules.html",[16,0.018,66,0.018,67,0.018,284,3.135,285,3.971,294,3.643,308,3.971,528,4.382,545,3.971,829,4.555,1718,5.768,1719,5.768]],["title/overview.html",[1684,3.743]],["body/overview.html",[0,3.207,11,1.839,16,0.021,26,1.783,31,0.979,42,0.218,43,0.276,56,1.091,66,0.015,67,0.015,97,0.306,98,1.653,184,2.466,189,1.351,194,1.744,197,1.992,199,1.653,202,1.653,204,1.653,206,1.653,208,1.744,210,1.653,212,1.653,214,1.744,216,1.744,218,1.653,220,1.653,222,1.653,224,1.653,226,1.653,229,0.878,252,1.683,254,3.83,284,2.972,285,5.255,286,1.892,287,3.207,288,3.207,289,3.609,290,3.609,291,3.609,292,3.609,293,3.609,294,3.83,295,3.081,296,4.175,297,3.83,298,2.561,299,4.675,300,3.609,301,2.145,1235,3.194,1684,3.207,1720,4.221,1721,4.221,1722,4.221,1723,4.221,1724,4.221]],["title/routes.html",[26,2.081]],["body/routes.html",[16,0.019,26,2.483,66,0.019,67,0.019]],["title/miscellaneous/typealiases.html",[1552,1.761,1725,4.342]],["body/miscellaneous/typealiases.html",[6,0.286,16,0.018,18,0.422,48,3.489,55,1.428,66,0.018,67,0.018,75,0.755,81,1.198,406,2.334,428,2.334,494,4.197,520,3.064,522,3.489,894,4.724,1329,4.724,1552,3.227,1726,5.525,1727,5.525,1728,7.046,1729,5.525,1730,5.525,1731,5.525,1732,5.525,1733,5.525,1734,5.525,1735,5.525]],["title/miscellaneous/variables.html",[1519,3.299,1552,1.761]],["body/miscellaneous/variables.html",[6,0.255,16,0.021,18,0.444,50,1.862,55,1.277,65,3.526,66,0.017,67,0.017,81,1.121,155,2.293,156,2.059,415,2.886,420,4.488,426,2.886,449,3.753,454,4.474,551,3.236,694,2.214,870,3.401,1199,3.753,1205,4.952,1206,4.224,1519,3.753,1520,4.224,1522,4.224,1523,4.224,1524,5.574,1552,2.886,1682,5.162,1736,6.036,1737,4.94,1738,4.94,1739,4.94,1740,4.94,1741,4.94,1742,6.79,1743,6.036,1744,6.036,1745,6.036,1746,6.036,1747,6.036,1748,6.036,1749,4.94,1750,4.94]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":561,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1235,"title":{"interfaces/UserCard-1.html":{}},"body":{"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["1.0.11",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1670,"title":{},"body":{"index.html":{}}}],["1.amazonaws.com",{"_index":1252,"title":{},"body":{"injectables/UploadService.html":{}}}],["1.amazonaws.com/rydeforce/rydeforc",{"_index":991,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["1.amazonaws.com:2222",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1723,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["100000000000",{"_index":1238,"title":{},"body":{"injectables/UploadService.html":{}}}],["11/11",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1724,"title":{},"body":{"overview.html":{}}}],["14/15",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1479,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["153",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1720,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["174",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["2.321.0",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1357,"title":{},"body":{"components/UsercardComponent.html":{}}}],["23/23",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["234.comput",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":1268,"title":{},"body":{"interfaces/User.html":{}}}],["28",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{}}}],["3",{"_index":1292,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["3.2.2",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["30/30",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["43/48",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1722,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["56/60",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["6.1.8",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1721,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1367,"title":{},"body":{"components/UsercardComponent.html":{}}}],["8/8",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":960,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["93",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["abov",{"_index":814,"title":{},"body":{"components/HowToComponent.html":{}}}],["access",{"_index":50,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/variables.html":{}}}],["accessguard",{"_index":1,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{}}}],["accesskeyid",{"_index":1230,"title":{},"body":{"injectables/UploadService.html":{}}}],["accompani",{"_index":234,"title":{},"body":{"interfaces/ApiError.html":{}}}],["accordingli",{"_index":693,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["account",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["account'",{"_index":818,"title":{},"body":{"components/HowToComponent.html":{}}}],["account\\'",{"_index":844,"title":{},"body":{"components/HowToComponent.html":{}}}],["accountinfo",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accountinfo'},{'nam",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["accountinfocompon",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":1321,"title":{},"body":{"components/UsercardComponent.html":{}}}],["activ",{"_index":1257,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AccessGuard.html":{}}}],["actual",{"_index":522,"title":{},"body":{"classes/Car.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["actual_compon",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["add",{"_index":613,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MatchingControllerService.html":{},"index.html":{}}}],["addcartous",{"_index":540,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addit",{"_index":241,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/JwtInterceptor.html":{}}}],["address",{"_index":76,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["address2",{"_index":77,"title":{},"body":{"classes/AddressModel.html":{},"components/ViewProfileComponent.html":{}}}],["addressid",{"_index":78,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressmodel",{"_index":68,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["addressselect",{"_index":1160,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["admin",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["admin.component.css",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":98,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administr",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Register.html":{}}}],["adress",{"_index":73,"title":{},"body":{"classes/AddressModel.html":{}}}],["affect",{"_index":1078,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["again",{"_index":838,"title":{},"body":{"components/HowToComponent.html":{}}}],["agm/cor",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasybxwxgwzxhyvz9jyn9srhggozi7vcu5g3g",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["ak",{"_index":1574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["akiairzg4tk6eblzv7ga",{"_index":1231,"title":{},"body":{"injectables/UploadService.html":{}}}],["al",{"_index":1572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alabama",{"_index":1571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alaska",{"_index":1573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1726,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["alow",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["alreadi",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["amazon",{"_index":1216,"title":{},"body":{"injectables/UploadService.html":{}}}],["amobil",{"_index":692,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["amount",{"_index":1704,"title":{},"body":{"index.html":{}}}],["angular",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/anim",{"_index":972,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["angular/compil",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/source_map",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{}}}],["angular/cor",{"_index":32,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":33,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["animate(100",{"_index":1360,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(200",{"_index":1369,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(400",{"_index":983,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["animateonscrollmodul",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["animateonscrollmodule.forroot",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["animst",{"_index":1304,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animthumbst",{"_index":1305,"title":{},"body":{"components/UsercardComponent.html":{}}}],["anth",{"_index":1094,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["anyth",{"_index":1079,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["apart",{"_index":763,"title":{},"body":{"components/HowToComponent.html":{}}}],["api",{"_index":251,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"miscellaneous/enumerations.html":{}}}],["api/us",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["apierror",{"_index":230,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["apierror.statu",{"_index":667,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierror.typ",{"_index":671,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierrortyp",{"_index":255,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apierrortype.notloggedin",{"_index":672,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apikey",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["apiurl",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["app.compon",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/user.model",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["app/services/api/us",{"_index":38,"title":{},"body":{"guards/AccessGuard.html":{}}}],["app/services/auth.servic",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":197,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{}}}],["appmodul",{"_index":285,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":375,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appplacesautocomplet",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["appropri",{"_index":547,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["approutingmodul",{"_index":294,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approv",{"_index":905,"title":{},"body":{"components/LandingComponent.html":{}}}],["ar",{"_index":1576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":891,"title":{},"body":{"components/LandingComponent.html":{}}}],["arizona",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arkansa",{"_index":1575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["around",{"_index":1056,"title":{},"body":{"interfaces/Marker.html":{}}}],["array",{"_index":247,"title":{},"body":{"interfaces/ApiError.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["artifact",{"_index":1677,"title":{},"body":{"index.html":{}}}],["assets/icons/thumbsdown.png",{"_index":1348,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assets/icons/thumbsup.png",{"_index":1385,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assign",{"_index":1241,"title":{},"body":{"injectables/UploadService.html":{}}}],["associ",{"_index":257,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["assum",{"_index":1691,"title":{},"body":{"index.html":{}}}],["async",{"_index":1125,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attempt",{"_index":49,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{}}}],["attribut",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth",{"_index":51,"title":{},"body":{"guards/AccessGuard.html":{}}}],["authent",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(email",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator(email",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":860,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservic",{"_index":295,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1206,"title":{},"body":{"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["autocomplet",{"_index":1177,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1179,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.direct",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete.directive.t",{"_index":1157,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["autocomplete.directive.ts:10",{"_index":1171,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:13",{"_index":1164,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:19",{"_index":1168,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:24",{"_index":1169,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete/plac",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["automat",{"_index":669,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["avail",{"_index":545,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["avatar",{"_index":1382,"title":{},"body":{"components/UsercardComponent.html":{}}}],["avoid",{"_index":1135,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aw",{"_index":1228,"title":{},"body":{"injectables/UploadService.html":{},"dependencies.html":{}}}],["await",{"_index":1149,"title":{},"body":{"components/NavbarComponent.html":{}}}],["await/async",{"_index":1134,"title":{},"body":{"components/NavbarComponent.html":{}}}],["az",{"_index":1578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b",{"_index":1688,"title":{},"body":{"index.html":{}}}],["back",{"_index":801,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["backend",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"miscellaneous/typealiases.html":{}}}],["bar",{"_index":815,"title":{},"body":{"components/HowToComponent.html":{}}}],["barebon",{"_index":1191,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["base",{"_index":1711,"title":{},"body":{"index.html":{}}}],["basic",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["batch",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["batchend",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["batchendchang",{"_index":698,"title":{},"body":{"classes/Filter.html":{}}}],["be",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["bearer",{"_index":861,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["begin",{"_index":1242,"title":{},"body":{"injectables/UploadService.html":{}}}],["best",{"_index":1705,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{}}}],["big",{"_index":819,"title":{},"body":{"components/HowToComponent.html":{}}}],["bio",{"_index":1001,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{}}}],["biographi",{"_index":768,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["blablablabla",{"_index":1002,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["block",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["blue",{"_index":820,"title":{},"body":{"components/HowToComponent.html":{}}}],["bodi",{"_index":1109,"title":{},"body":{"injectables/MatchingControllerService.html":{},"injectables/UploadService.html":{}}}],["body).topromis",{"_index":1112,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"classes/Filter.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["bootstrap",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["both",{"_index":789,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["branch",{"_index":1689,"title":{},"body":{"index.html":{}}}],["brand",{"_index":792,"title":{},"body":{"components/HowToComponent.html":{}}}],["bring",{"_index":830,"title":{},"body":{"components/HowToComponent.html":{}}}],["brows",{"_index":829,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"modules.html":{}}}],["browser",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":382,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["btncarinfo",{"_index":533,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["btoa(this.officeobject",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{}}}],["bucket",{"_index":1215,"title":{},"body":{"injectables/UploadService.html":{}}}],["build",{"_index":1676,"title":{},"body":{"index.html":{}}}],["burden",{"_index":898,"title":{},"body":{"components/LandingComponent.html":{}}}],["button",{"_index":579,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["c.foreach(el",{"_index":588,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.id",{"_index":614,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.make",{"_index":615,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.model",{"_index":616,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.year",{"_index":617,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["ca",{"_index":1580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":47,"title":{},"body":{"guards/AccessGuard.html":{}}}],["calcul",{"_index":1045,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["california",{"_index":1579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["call",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/UsercardComponent.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canactivate(rout",{"_index":21,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canedit",{"_index":1412,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["car",{"_index":200,"title":{"classes/Car.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["car.id",{"_index":942,"title":{},"body":{"components/LikesComponent.html":{}}}],["car.mak",{"_index":943,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["car.model",{"_index":944,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["car.year",{"_index":945,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["card",{"_index":935,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["card.fac",{"_index":995,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["card.user.address",{"_index":940,"title":{},"body":{"components/LikesComponent.html":{}}}],["card.user.firstnam",{"_index":939,"title":{},"body":{"components/LikesComponent.html":{}}}],["card.user.rol",{"_index":941,"title":{},"body":{"components/LikesComponent.html":{}}}],["carmak",{"_index":534,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carmodel",{"_index":535,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carobject",{"_index":536,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carousel",{"_index":864,"title":{},"body":{"components/LandingComponent.html":{}}}],["carpool",{"_index":889,"title":{},"body":{"components/LandingComponent.html":{}}}],["carregistrationcompon",{"_index":199,"title":{"components/CarRegistrationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caryear",{"_index":537,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["catch",{"_index":632,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["catcherror",{"_index":34,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":659,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(_",{"_index":62,"title":{},"body":{"guards/AccessGuard.html":{}}}],["center",{"_index":1327,"title":{},"body":{"components/UsercardComponent.html":{}}}],["certain",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chang",{"_index":962,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["charact",{"_index":1266,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["check",{"_index":689,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["checkifloggedin",{"_index":1144,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checkout",{"_index":1687,"title":{},"body":{"index.html":{}}}],["cheifli",{"_index":508,"title":{},"body":{"classes/Car.html":{},"injectables/UploadService.html":{}}}],["choos",{"_index":785,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["chose",{"_index":793,"title":{},"body":{"components/HowToComponent.html":{}}}],["circl",{"_index":890,"title":{},"body":{"components/LandingComponent.html":{}}}],["circlemanag",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["citi",{"_index":79,"title":{},"body":{"classes/AddressModel.html":{}}}],["class",{"_index":43,"title":{"classes/AddressModel.html":{},"classes/AppPage.html":{},"classes/Car.html":{},"classes/Filter.html":{},"classes/SwipecardModel.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":557,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["cli",{"_index":1669,"title":{},"body":{"index.html":{}}}],["click",{"_index":750,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["client",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["closer",{"_index":837,"title":{},"body":{"components/HowToComponent.html":{}}}],["cluster_appmodul",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":1582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":96,"title":{},"body":{"classes/AddressModel.html":{},"index.html":{}}}],["collection/bas",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["colorado",{"_index":1581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["come",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":1061,"title":{},"body":{"interfaces/Marker.html":{},"components/UsercardComponent.html":{}}}],["commit",{"_index":1692,"title":{},"body":{"index.html":{}}}],["common",{"_index":1153,"title":{},"body":{"interfaces/Office.html":{}}}],["commonmodul",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["commun",{"_index":726,"title":{},"body":{"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{}}}],["compani",{"_index":563,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{}}}],["compat",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":1324,"title":{},"body":{"components/UsercardComponent.html":{}}}],["complex",{"_index":973,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["compnent",{"_index":1129,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compoennt",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["compon",{"_index":97,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["components/accountinfo/accountinfo.compon",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin/admin.compon",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/car",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/favorites/favorites.compon",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/how",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing/landing.compon",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/likes/likes.compon",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["components/likesmatchweb/likesmatchweb.compon",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map.compon",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.compon",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rideswipe/rideswipe.compon",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usercard/usercard.compon",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usermatchweb/usermatchweb.compon",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["components/view",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["confirmpassword",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/ViewProfileComponent.html":{}}}],["conflict",{"_index":1706,"title":{},"body":{"index.html":{}}}],["congratul",{"_index":808,"title":{},"body":{"components/HowToComponent.html":{}}}],["connecticut",{"_index":1583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.error('network",{"_index":665,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log",{"_index":738,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log(",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log(\"data2",{"_index":1281,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log('befor",{"_index":1255,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('car",{"_index":595,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('data",{"_index":1373,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log('error",{"_index":1285,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log('geocod",{"_index":736,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log('got",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('gotten",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('her",{"_index":987,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('in",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('loggeddata2",{"_index":988,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('nop",{"_index":1476,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log('print",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sav",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('successfulli",{"_index":1247,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('ther",{"_index":1246,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('thi",{"_index":984,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('upload",{"_index":1250,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(data",{"_index":986,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data2",{"_index":930,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3",{"_index":931,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["console.log(data3.photourl",{"_index":1375,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(e.messag",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(environment.apiurl",{"_index":1113,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["console.log(ev",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(param",{"_index":1248,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(this.currentus",{"_index":880,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{}}}],["console.log(this.currentuser.id",{"_index":1388,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.swipecards[this.currentindex].user.id",{"_index":1389,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(userlink",{"_index":1374,"title":{},"body":{"components/UsercardComponent.html":{}}}],["const",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constant",{"_index":1340,"title":{},"body":{"components/UsercardComponent.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(authservic",{"_index":635,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(elref",{"_index":1161,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(http",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["constructor(matchservic",{"_index":912,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(priv",{"_index":45,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(tokenstorag",{"_index":850,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(userservic",{"_index":10,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contact",{"_index":622,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contact.info",{"_index":947,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["contact.typ",{"_index":946,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["contactinfo",{"_index":618,"title":{"interfaces/ContactInfo.html":{}},"body":{"interfaces/ContactInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["contactinfotyp",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contain",{"_index":816,"title":{},"body":{"components/HowToComponent.html":{}}}],["content",{"_index":1427,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["context",{"_index":1524,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.servic",{"_index":39,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["controller.service.t",{"_index":1033,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["controller.service.ts:108",{"_index":1075,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:119",{"_index":1102,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:12",{"_index":1036,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:13",{"_index":1072,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:25",{"_index":1039,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:27",{"_index":1088,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:37",{"_index":1044,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:48",{"_index":1083,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:63",{"_index":1096,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:75",{"_index":1100,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:88",{"_index":1105,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:97",{"_index":1081,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["conveni",{"_index":253,"title":{},"body":{"interfaces/ApiError.html":{}}}],["core",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":250,"title":{},"body":{"interfaces/ApiError.html":{}}}],["coverag",{"_index":1490,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{}}}],["credenti",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["ct",{"_index":1584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["currentindex",{"_index":1306,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentrol",{"_index":1413,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["currentswipecard",{"_index":1307,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.address",{"_index":1393,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.email",{"_index":1394,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.firstnam",{"_index":1392,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.lastnam",{"_index":1395,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentus",{"_index":869,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["cuser",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["data2",{"_index":929,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3",{"_index":936,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3.photourl",{"_index":932,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["databas",{"_index":515,"title":{},"body":{"classes/Car.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["date().getfullyear",{"_index":611,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["date(sessionstorage.getitem(\"batchend\")).tolocaledatestr",{"_index":1453,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dateformatpip",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["datelocationencrypt",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{}}}],["day",{"_index":703,"title":{},"body":{"classes/Filter.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["daystartchang",{"_index":699,"title":{},"body":{"classes/Filter.html":{}}}],["dc",{"_index":1568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dd't'hh:mm:ss.sss'z",{"_index":1265,"title":{},"body":{"interfaces/User.html":{}}}],["de",{"_index":1586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decent",{"_index":1703,"title":{},"body":{"index.html":{}}}],["declar",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":1341,"title":{},"body":{"components/UsercardComponent.html":{}}}],["dedic",{"_index":1213,"title":{},"body":{"injectables/UploadService.html":{}}}],["default",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["degre",{"_index":961,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["delawar",{"_index":1585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demonstr",{"_index":914,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["depend",{"_index":286,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":70,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["deseri",{"_index":1089,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["desktop",{"_index":680,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["detail",{"_index":238,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{}}}],["detect",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["determin",{"_index":836,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["dev",{"_index":648,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["develop",{"_index":1671,"title":{},"body":{"index.html":{}}}],["devic",{"_index":691,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["devif",{"_index":1708,"title":{},"body":{"index.html":{}}}],["direct",{"_index":56,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/plac",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1675,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1679,"title":{},"body":{"index.html":{}}}],["discord",{"_index":783,"title":{},"body":{"components/HowToComponent.html":{}}}],["dislik",{"_index":832,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dislikedriv",{"_index":1063,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dislikedriver(riderid",{"_index":1073,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["display",{"_index":744,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["dist",{"_index":1678,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":706,"title":{},"body":{"classes/Filter.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsermatchwebComponent.html":{}}}],["distancechang",{"_index":700,"title":{},"body":{"classes/Filter.html":{}}}],["distinguish",{"_index":678,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["districtofcolumbia",{"_index":1587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":1343,"title":{},"body":{"components/UsercardComponent.html":{}}}],["document",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["document.getelementbyid(\"address\").removeattribute(\"dis",{"_index":1461,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").removeattribute(\"dis",{"_index":1462,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").setattribute(\"typ",{"_index":1464,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"confirmpassword\").removeattribute(\"dis",{"_index":1460,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"currentoffice\").style.display",{"_index":1465,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"daystart\").removeattribute(\"dis",{"_index":1463,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"edit\").style.display",{"_index":1468,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"email\").removeattribute(\"dis",{"_index":1458,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"errormessage\").removeattribute(\"hidden",{"_index":1470,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"firstname\").removeattribute(\"dis",{"_index":1456,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"lastname\").removeattribute(\"dis",{"_index":1457,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"password\").removeattribute(\"dis",{"_index":1459,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"profilepic\").setattribute(\"src\",this.currentuser.photourl",{"_index":1143,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid(\"selectoffice\").style.display",{"_index":1466,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"submit\").style.display",{"_index":1469,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessagelogin",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["done",{"_index":786,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["draggabl",{"_index":1053,"title":{},"body":{"interfaces/Marker.html":{}}}],["driver",{"_index":509,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["driver'",{"_index":825,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver/passeng",{"_index":828,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver\\'",{"_index":845,"title":{},"body":{"components/HowToComponent.html":{}}}],["driverid",{"_index":1074,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dropdown",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["due",{"_index":670,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{}}}],["dummi",{"_index":1278,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["durat",{"_index":1192,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["durrent",{"_index":1424,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dynam",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["e.g",{"_index":1154,"title":{},"body":{"interfaces/Office.html":{}}}],["e.messag",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2",{"_index":1716,"title":{},"body":{"index.html":{}}}],["e2e/app.po.t",{"_index":376,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":380,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":379,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":849,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["earli",{"_index":1707,"title":{},"body":{"index.html":{}}}],["earth",{"_index":1004,"title":{},"body":{"interfaces/Location.html":{}}}],["east",{"_index":990,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["east/west",{"_index":1006,"title":{},"body":{"interfaces/Location.html":{}}}],["edit",{"_index":1409,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["effort",{"_index":771,"title":{},"body":{"components/HowToComponent.html":{}}}],["element",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["element(by.css('app",{"_index":383,"title":{},"body":{"classes/AppPage.html":{}}}],["element.owner.substring(7",{"_index":590,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["elementref",{"_index":1162,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["elref",{"_index":1165,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["elref.nativeel",{"_index":1174,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["email",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["employe",{"_index":774,"title":{},"body":{"components/HowToComponent.html":{}}}],["employer'",{"_index":902,"title":{},"body":{"components/LandingComponent.html":{}}}],["employer\\'",{"_index":907,"title":{},"body":{"components/LandingComponent.html":{}}}],["empti",{"_index":246,"title":{},"body":{"interfaces/ApiError.html":{},"components/ViewProfileComponent.html":{}}}],["enabl",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["encrypt",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationd",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationdate}}{{registrationkey",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{}}}],["end",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["endflipcard",{"_index":953,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["endflipcard(card",{"_index":956,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["endpoint",{"_index":262,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MapsControllerService.html":{}}}],["enjoy",{"_index":893,"title":{},"body":{"components/LandingComponent.html":{}}}],["enough",{"_index":1086,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["ensur",{"_index":559,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["enter",{"_index":766,"title":{},"body":{"components/HowToComponent.html":{}}}],["entir",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["entri",{"_index":623,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["enum",{"_index":258,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enumer",{"_index":1553,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["err",{"_index":1245,"title":{},"body":{"injectables/UploadService.html":{}}}],["err.error",{"_index":660,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":668,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":233,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["error.model",{"_index":656,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.model.t",{"_index":232,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["errorev",{"_index":662,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":254,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["especi",{"_index":1701,"title":{},"body":{"index.html":{}}}],["evalu",{"_index":1287,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["event",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["eventemitt",{"_index":1166,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["examin",{"_index":649,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ViewProfileComponent.html":{}}}],["exampl",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["execut",{"_index":1713,"title":{},"body":{"index.html":{}}}],["exist",{"_index":743,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["expir",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["extra",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Marker.html":{}}}],["face",{"_index":963,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["fact",{"_index":877,"title":{},"body":{"components/LandingComponent.html":{}}}],["fail",{"_index":599,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["fals",{"_index":694,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":798,"title":{},"body":{"components/HowToComponent.html":{}}}],["favorit",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'nam",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["favorites.component.css",{"_index":681,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":682,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favoritescompon",{"_index":202,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["featur",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["fellow",{"_index":773,"title":{},"body":{"components/HowToComponent.html":{}}}],["fetch",{"_index":1092,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["field",{"_index":243,"title":{},"body":{"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["file.nam",{"_index":1239,"title":{},"body":{"injectables/UploadService.html":{}}}],["fill",{"_index":791,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["filter",{"_index":696,"title":{"classes/Filter.html":{}},"body":{"classes/Filter.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["final",{"_index":794,"title":{},"body":{"components/HowToComponent.html":{}}}],["find",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{}}}],["finish",{"_index":796,"title":{},"body":{"components/HowToComponent.html":{}}}],["first",{"_index":83,"title":{},"body":{"classes/AddressModel.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["firstnam",{"_index":1258,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["fit",{"_index":777,"title":{},"body":{"components/HowToComponent.html":{}}}],["fl",{"_index":1589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["flag",{"_index":1681,"title":{},"body":{"index.html":{}}}],["flipcard",{"_index":954,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["flipcard(card",{"_index":964,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["florida",{"_index":1588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focus",{"_index":822,"title":{},"body":{"components/HowToComponent.html":{}}}],["folder",{"_index":1218,"title":{},"body":{"injectables/UploadService.html":{}}}],["follow",{"_index":739,"title":{},"body":{"injectables/GeocodeService.html":{},"index.html":{}}}],["for(var",{"_index":1300,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["forc",{"_index":1136,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forgot",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":555,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["format",{"_index":245,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{}}}],["format.pip",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodul",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["front",{"_index":982,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["full",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":529,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["further",{"_index":888,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["ga",{"_index":899,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gener",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["geocod",{"_index":711,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode(address",{"_index":714,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":707,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["geograph",{"_index":1040,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["geoloc",{"_index":709,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["georgia",{"_index":1590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":1019,"title":{"index.html":{}},"body":{"components/LoginComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getcurrentus",{"_index":1124,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getdislikeddriv",{"_index":1064,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdislikeddrivers(riderid",{"_index":1080,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdist",{"_index":1034,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getdistance(address",{"_index":1038,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getfiltereddriv",{"_index":1065,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfiltereddrivers(riderid",{"_index":1082,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getformattedaddress",{"_index":1158,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getformattedaddress(plac",{"_index":1167,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getfromlink",{"_index":1066,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfromlink(uri",{"_index":1087,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddriv",{"_index":1067,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddrivers(riderid",{"_index":1095,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdriv",{"_index":1068,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdrivers(riderid",{"_index":1097,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getoffic",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getparagraphtext",{"_index":377,"title":{},"body":{"classes/AppPage.html":{}}}],["getregistrationkey",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["getrol",{"_index":1414,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getrout",{"_index":1035,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getroute(start",{"_index":1043,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["gets3bucket",{"_index":1219,"title":{},"body":{"injectables/UploadService.html":{}}}],["gettoken",{"_index":1200,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["getus",{"_index":1415,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getuser(email",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["git",{"_index":1683,"title":{},"body":{"index.html":{}}}],["github",{"_index":1710,"title":{},"body":{"index.html":{}}}],["give",{"_index":806,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["given",{"_index":718,"title":{},"body":{"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["go",{"_index":800,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["goe",{"_index":958,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["good",{"_index":775,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["googl",{"_index":710,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocod",{"_index":725,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderresult",{"_index":731,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatu",{"_index":732,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":733,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlng",{"_index":720,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlngliter",{"_index":1057,"title":{},"body":{"interfaces/Marker.html":{}}}],["google.maps.places.autocomplete(this.el",{"_index":1178,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["googlemap",{"_index":1172,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["googlemapsapiwrapp",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["gotten",{"_index":597,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["grab",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["grant",{"_index":1183,"title":{},"body":{"interfaces/Register.html":{}}}],["graph",{"_index":1719,"title":{},"body":{"modules.html":{}}}],["group",{"_index":903,"title":{},"body":{"components/LandingComponent.html":{}}}],["groupm",{"_index":784,"title":{},"body":{"components/HowToComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":384,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":637,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["have",{"_index":1091,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["haven't",{"_index":812,"title":{},"body":{"components/HowToComponent.html":{}}}],["haven\\'t",{"_index":843,"title":{},"body":{"components/HowToComponent.html":{}}}],["hawaii",{"_index":1591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["he/sh",{"_index":1426,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["header",{"_index":853,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["height=\"100",{"_index":1481,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["held",{"_index":1441,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["help",{"_index":895,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["here",{"_index":686,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"index.html":{}}}],["hi",{"_index":1592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":1196,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["hide",{"_index":1317,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimag",{"_index":1312,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimage(hid",{"_index":1315,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hold",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/ContactInfo.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["home",{"_index":752,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["home(curr",{"_index":1151,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hook",{"_index":1431,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["hopefulli",{"_index":841,"title":{},"body":{"components/HowToComponent.html":{}}}],["host",{"_index":1121,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hour",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["hous",{"_index":85,"title":{},"body":{"classes/AddressModel.html":{}}}],["howto",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["howtocompon",{"_index":204,"title":{"components/HowToComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["htmlinputel",{"_index":1170,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["http",{"_index":236,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["http://10.0.0.14:2222",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://e5a3040f.ngrok.io",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://ec2",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1673,"title":{},"body":{"index.html":{}}}],["http://semant",{"_index":933,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["http_interceptor",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpclientmodul",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httperrorrespons",{"_index":653,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":651,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheader",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpinterceptor",{"_index":652,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":643,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://s3.u",{"_index":989,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["https://stackoverflow.com/a/46941824",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ia",{"_index":1598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["icon",{"_index":1059,"title":{},"body":{"interfaces/Marker.html":{}}}],["id",{"_index":91,"title":{},"body":{"classes/AddressModel.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["idaho",{"_index":1593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1699,"title":{},"body":{"index.html":{}}}],["identif",{"_index":1058,"title":{},"body":{"interfaces/Marker.html":{}}}],["identifi",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["if(!this.userservice.isloggedin",{"_index":1147,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(document.getelementbyid(\"activest",{"_index":1472,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(this.userservice.isloggedin",{"_index":1145,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ignor",{"_index":747,"title":{},"body":{"components/HowToComponent.html":{},"injectables/TokenStorage.html":{}}}],["il",{"_index":1595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["illinoi",{"_index":1594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imag",{"_index":1212,"title":{},"body":{"injectables/UploadService.html":{},"components/UsercardComponent.html":{}}}],["immedi",{"_index":833,"title":{},"body":{"components/HowToComponent.html":{}}}],["implement",{"_index":44,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["incorrect",{"_index":799,"title":{},"body":{"components/HowToComponent.html":{}}}],["indend",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["indic",{"_index":248,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info.model",{"_index":1050,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["info.model.t",{"_index":620,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["inform",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["infowindow",{"_index":1060,"title":{},"body":{"interfaces/Marker.html":{}}}],["initi",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["initila",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{}}}],["inject",{"_index":31,"title":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1467,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["input",{"_index":755,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["instanceof",{"_index":661,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["instead",{"_index":1240,"title":{},"body":{"injectables/UploadService.html":{}}}],["instructor",{"_index":762,"title":{},"body":{"components/HowToComponent.html":{}}}],["interact",{"_index":1037,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["intercept",{"_index":634,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":642,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":629,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interest",{"_index":1288,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":229,"title":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["intro",{"_index":866,"title":{},"body":{"components/LandingComponent.html":{}}}],["invok",{"_index":729,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["iowa",{"_index":1597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["it'",{"_index":842,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["it\\'",{"_index":847,"title":{},"body":{"components/HowToComponent.html":{}}}],["item",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["js",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["judgment",{"_index":1289,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["jwtinterceptor",{"_index":296,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["kansa",{"_index":1599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1715,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1329,"title":{},"body":{"components/UsercardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kentucki",{"_index":1601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":92,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{}}}],["know",{"_index":1435,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["ks",{"_index":1600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ky",{"_index":1602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":1604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":1054,"title":{},"body":{"interfaces/Marker.html":{}}}],["land",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["landing'},{'nam",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["landing.component.css",{"_index":867,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":868,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":206,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":760,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["lastnam",{"_index":1259,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["latitud",{"_index":722,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["latlng",{"_index":724,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["latlngliter",{"_index":1041,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["left",{"_index":1335,"title":{},"body":{"components/UsercardComponent.html":{}}}],["legend",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["lessen",{"_index":897,"title":{},"body":{"components/LandingComponent.html":{}}}],["librari",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["like",{"_index":677,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["like(index",{"_index":1290,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["likecard",{"_index":952,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likedriv",{"_index":1069,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likedriver(riderid",{"_index":1099,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likes'},{'nam",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likes.component.css",{"_index":909,"title":{},"body":{"components/LikesComponent.html":{}}}],["likes.component.html",{"_index":910,"title":{},"body":{"components/LikesComponent.html":{}}}],["likescompon",{"_index":208,"title":{"components/LikesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["likesmatchweb",{"_index":687,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb'},{'nam",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likesmatchweb.component.css",{"_index":950,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb.component.html",{"_index":951,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchwebcompon",{"_index":210,"title":{"components/LikesmatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["limit",{"_index":1267,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["line",{"_index":84,"title":{},"body":{"classes/AddressModel.html":{}}}],["link",{"_index":520,"title":{},"body":{"classes/Car.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["link.model",{"_index":525,"title":{},"body":{"classes/Car.html":{},"interfaces/User.html":{}}}],["list",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["littl",{"_index":770,"title":{},"body":{"components/HowToComponent.html":{}}}],["live",{"_index":1262,"title":{},"body":{"interfaces/User.html":{}}}],["local",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":132,"title":{"interfaces/Location.html":{}},"body":{"components/AdminComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["location.reload(tru",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["location_obj",{"_index":1175,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["log",{"_index":54,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'nam",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login.component.css",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":212,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":1182,"title":{},"body":{"interfaces/Register.html":{}}}],["longitud",{"_index":723,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["look",{"_index":805,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["louisiana",{"_index":1603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":1693,"title":{},"body":{"index.html":{}}}],["ma",{"_index":1608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":751,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"injectables/MatchingControllerService.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["manag",{"_index":530,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["manual",{"_index":1138,"title":{},"body":{"components/NavbarComponent.html":{}}}],["manufactur",{"_index":564,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["map",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["map'},{'nam",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["map(token",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["mapcompon",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapsapiload",{"_index":1163,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["mapscontrollerservic",{"_index":297,"title":{"injectables/MapsControllerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"coverage.html":{},"overview.html":{}}}],["mapto",{"_index":35,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mapto(tru",{"_index":61,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mark",{"_index":716,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":1042,"title":{"interfaces/Marker.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["maryland",{"_index":1605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massachusett",{"_index":1607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1712,"title":{},"body":{"index.html":{}}}],["match",{"_index":67,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches/${riderid",{"_index":1108,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid",{"_index":1118,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid}/${driverid",{"_index":1119,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/filt",{"_index":1111,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid",{"_index":1114,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid}/${driverid",{"_index":1116,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matchingcontrollerservic",{"_index":298,"title":{"injectables/MatchingControllerService.html":{}},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":915,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["math.floor(math.random",{"_index":1237,"title":{},"body":{"injectables/UploadService.html":{}}}],["md",{"_index":1606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mean",{"_index":621,"title":{},"body":{"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["meant",{"_index":631,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["member",{"_index":904,"title":{},"body":{"components/LandingComponent.html":{}}}],["merg",{"_index":1700,"title":{},"body":{"index.html":{}}}],["messag",{"_index":239,"title":{},"body":{"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["messagelogin",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.innerhtml",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.style.display",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["meter",{"_index":1194,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["mi",{"_index":1610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["michigan",{"_index":1609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleencrypt",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{}}}],["middleencryption.length",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{}}}],["minnesota",{"_index":1611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":1552,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing/incorrect",{"_index":244,"title":{},"body":{"interfaces/ApiError.html":{}}}],["mississippi",{"_index":1613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["missouri",{"_index":1615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mm",{"_index":1264,"title":{},"body":{"interfaces/User.html":{}}}],["mn",{"_index":1612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mo",{"_index":1616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":679,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["mode",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["model",{"_index":511,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/address.model",{"_index":1351,"title":{},"body":{"components/UsercardComponent.html":{}}}],["models/api",{"_index":655,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["models/car.model",{"_index":577,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["models/filt",{"_index":1106,"title":{},"body":{"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["models/link.model",{"_index":925,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/office.model",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/role.model",{"_index":924,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/rout",{"_index":1049,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["models/swipecard.model",{"_index":922,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["models/user.model",{"_index":578,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["modifi",{"_index":854,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/ViewProfileComponent.html":{}}}],["modul",{"_index":284,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":1617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":769,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["move",{"_index":767,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/Marker.html":{}}}],["ms",{"_index":1614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":1618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multi",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["nav",{"_index":1128,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":753,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["navbar.component.css",{"_index":1122,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1123,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcompon",{"_index":216,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["navigateto",{"_index":378,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":1485,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["nc",{"_index":1632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nd",{"_index":1634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ne",{"_index":1620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearbi",{"_index":821,"title":{},"body":{"components/HowToComponent.html":{}}}],["nebraska",{"_index":1619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":638,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"index.html":{}}}],["network",{"_index":664,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nevada",{"_index":1621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["newhampshir",{"_index":1623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newjersey",{"_index":1625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newmexico",{"_index":1627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newyork",{"_index":1629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":644,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["next.handle(request",{"_index":862,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pip",{"_index":658,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodul",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["nh",{"_index":1624,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nj",{"_index":1626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nm",{"_index":1628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobodi",{"_index":1397,"title":{},"body":{"components/UsercardComponent.html":{}}}],["none",{"_index":993,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["north/west",{"_index":1005,"title":{},"body":{"interfaces/Location.html":{}}}],["northcarolina",{"_index":1631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northdakota",{"_index":1633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_logged_in",{"_index":260,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["notifi",{"_index":764,"title":{},"body":{"components/HowToComponent.html":{}}}],["notloggedin",{"_index":259,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["null",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["num",{"_index":591,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number",{"_index":86,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/RouteInfo.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["number.parseint(strnum",{"_index":592,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number/etc",{"_index":627,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["nv",{"_index":1622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ny",{"_index":1630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["o",{"_index":1406,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["object",{"_index":551,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["observable.create((observ",{"_index":728,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":735,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.error(statu",{"_index":737,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(result",{"_index":734,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obtain",{"_index":717,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["occur",{"_index":633,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["of(fals",{"_index":64,"title":{},"body":{"guards/AccessGuard.html":{}}}],["off=\"inact",{"_index":1482,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["offic",{"_index":137,"title":{"interfaces/Office.html":{}},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["office.model",{"_index":1271,"title":{},"body":{"interfaces/User.html":{}}}],["office.nam",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobject",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobjectarray",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["offstyle=\"dang",{"_index":1480,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["oh",{"_index":1636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ohio",{"_index":1635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":1638,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oklahoma",{"_index":1637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":1690,"title":{},"body":{"index.html":{}}}],["on",{"_index":807,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["onc",{"_index":765,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["oninit",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ontap",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["ontap(ev",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["opac",{"_index":1364,"title":{},"body":{"components/UsercardComponent.html":{}}}],["oper",{"_index":552,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["optintodr",{"_index":538,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["option",{"_index":19,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["order",{"_index":811,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oregon",{"_index":1639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["origin",{"_index":855,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["other",{"_index":894,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1159,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["over",{"_index":676,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["overview",{"_index":1684,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrit",{"_index":1728,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["own",{"_index":510,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["owner",{"_index":512,"title":{},"body":{"classes/Car.html":{}}}],["ownwer",{"_index":569,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["pa",{"_index":1641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":1526,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":57,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["param",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["paramet",{"_index":15,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["params.bucket",{"_index":1253,"title":{},"body":{"injectables/UploadService.html":{}}}],["params.key",{"_index":1254,"title":{},"body":{"injectables/UploadService.html":{}}}],["part",{"_index":756,"title":{},"body":{"components/HowToComponent.html":{}}}],["pass",{"_index":1084,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["passeng",{"_index":778,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger'",{"_index":826,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger\\'",{"_index":846,"title":{},"body":{"components/HowToComponent.html":{}}}],["password",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["password).then",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["past",{"_index":959,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["path",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pennsylvania",{"_index":1640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":261,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/User.html":{}}}],["phone",{"_index":780,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["photo",{"_index":1270,"title":{},"body":{"interfaces/User.html":{}}}],["photourl",{"_index":1260,"title":{},"body":{"interfaces/User.html":{}}}],["pictur",{"_index":1274,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["pin",{"_index":823,"title":{},"body":{"components/HowToComponent.html":{}}}],["pipe",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes/d",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["place",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["placeid",{"_index":1055,"title":{},"body":{"interfaces/Marker.html":{}}}],["placesautocompletedirect",{"_index":226,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plan",{"_index":790,"title":{},"body":{"components/HowToComponent.html":{}}}],["pleas",{"_index":813,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["plu",{"_index":1567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["popul",{"_index":917,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibel",{"_index":1279,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibl",{"_index":72,"title":{},"body":{"classes/AddressModel.html":{},"classes/Filter.html":{}}}],["post(environment.apiurl",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["potenti",{"_index":776,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["pr",{"_index":1643,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["present",{"_index":570,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["previou",{"_index":802,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["previous",{"_index":575,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["price",{"_index":900,"title":{},"body":{"components/LandingComponent.html":{}}}],["primari",{"_index":249,"title":{},"body":{"interfaces/ApiError.html":{}}}],["privat",{"_index":46,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["problem",{"_index":1686,"title":{},"body":{"index.html":{}}}],["proceed",{"_index":650,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["process",{"_index":757,"title":{},"body":{"components/HowToComponent.html":{}}}],["prod",{"_index":1680,"title":{},"body":{"index.html":{}}}],["produc",{"_index":517,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["product",{"_index":1682,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["profile.compon",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1410,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.html",{"_index":1411,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.t",{"_index":1408,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:100",{"_index":1428,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:115",{"_index":1420,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:121",{"_index":1436,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:125",{"_index":1421,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:130",{"_index":1444,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:132",{"_index":1422,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:16",{"_index":1418,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1437,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":1438,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1443,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1442,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":1434,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1430,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1432,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1433,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1440,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1439,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":1429,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1423,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:63",{"_index":1419,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:83",{"_index":1425,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile/view",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":876,"title":{},"body":{"components/LandingComponent.html":{}}}],["project",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["promis",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["properli",{"_index":639,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["properti",{"_index":75,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["protractor",{"_index":381,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":252,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"interfaces/RouteInfo.html":{},"injectables/TokenStorage.html":{},"overview.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["public",{"_index":683,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["puerto",{"_index":1569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["puertorico",{"_index":1642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pull",{"_index":1698,"title":{},"body":{"index.html":{}}}],["push",{"_index":1694,"title":{},"body":{"index.html":{}}}],["pushed.befor",{"_index":1697,"title":{},"body":{"index.html":{}}}],["put",{"_index":985,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["rc.0",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":804,"title":{},"body":{"components/HowToComponent.html":{}}}],["reach",{"_index":839,"title":{},"body":{"components/HowToComponent.html":{}}}],["reactiveformsmodul",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1717,"title":{},"body":{"index.html":{}}}],["reason",{"_index":740,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["redirect",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["refresh",{"_index":554,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["refreshfield",{"_index":541,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reg",{"_index":596,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["region",{"_index":1234,"title":{},"body":{"injectables/UploadService.html":{}}}],["regis",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["regist",{"_index":567,"title":{"interfaces/Register.html":{}},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"coverage.html":{}}}],["registr",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interfaces/Register.html":{}}}],["registration'},{'nam",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["registration.compon",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration.component.css",{"_index":531,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.html",{"_index":532,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.t",{"_index":527,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registration.component.ts:108",{"_index":546,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:129",{"_index":553,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:19",{"_index":576,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:25",{"_index":566,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:29",{"_index":562,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:34",{"_index":565,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:39",{"_index":572,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:44",{"_index":573,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:49",{"_index":568,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:52",{"_index":544,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:63",{"_index":549,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:70",{"_index":556,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:94",{"_index":558,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration/car",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registrationkey",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["relev",{"_index":1127,"title":{},"body":{"components/NavbarComponent.html":{}}}],["relic",{"_index":574,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reload",{"_index":1137,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["remov",{"_index":1103,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["repeat",{"_index":835,"title":{},"body":{"components/HowToComponent.html":{}}}],["repo",{"_index":1685,"title":{},"body":{"index.html":{}}}],["repres",{"_index":71,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["represent",{"_index":628,"title":{},"body":{"interfaces/ContactInfo.html":{},"injectables/UploadService.html":{}}}],["request",{"_index":237,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MatchingControllerService.html":{},"index.html":{}}}],["request.clon",{"_index":858,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requir",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resembl",{"_index":1085,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["reserv",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["reset",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetcar",{"_index":542,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resetus",{"_index":543,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resolv",{"_index":1709,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":1731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["respect",{"_index":803,"title":{},"body":{"components/HowToComponent.html":{}}}],["respons",{"_index":235,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["reston",{"_index":1155,"title":{},"body":{"interfaces/Office.html":{}}}],["result",{"_index":66,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["return",{"_index":27,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["revatur",{"_index":748,"title":{},"body":{"components/HowToComponent.html":{}}}],["reversegeocod",{"_index":712,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reversegeocode(latlng",{"_index":719,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["review",{"_index":795,"title":{},"body":{"components/HowToComponent.html":{}}}],["rhodeisland",{"_index":1644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ri",{"_index":1645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rico",{"_index":1570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ride",{"_index":884,"title":{},"body":{"components/LandingComponent.html":{}}}],["rideforc",{"_index":749,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["rider",{"_index":887,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riderid",{"_index":1077,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["rideshar",{"_index":810,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["ridesharecli",{"_index":1668,"title":{},"body":{"index.html":{}}}],["rideswip",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RideswipeComponent.html":{}}}],["rideswipe'},{'nam",{"_index":219,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rideswipe.component.css",{"_index":1186,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipe.component.html",{"_index":1187,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipecompon",{"_index":218,"title":{"components/RideswipeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1337,"title":{},"body":{"components/UsercardComponent.html":{}}}],["role",{"_index":923,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role.model",{"_index":1272,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":41,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rotat",{"_index":966,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(0deg",{"_index":978,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(180deg",{"_index":981,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(90deg",{"_index":979,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rout",{"_index":26,"title":{"routes.html":{}},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"overview.html":{},"routes.html":{}}}],["route.data.requireslogin",{"_index":59,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routeinfo",{"_index":1048,"title":{"interfaces/RouteInfo.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routerlink",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routing.modul",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["run",{"_index":1672,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":36,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["rydeforc",{"_index":1225,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3",{"_index":1214,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3/65600312303b.png",{"_index":992,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["safe",{"_index":901,"title":{},"body":{"components/LandingComponent.html":{}}}],["save",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"injectables/TokenStorage.html":{},"components/ViewProfileComponent.html":{}}}],["savetoken",{"_index":1201,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["savetoken(token",{"_index":1203,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sc",{"_index":1647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffold",{"_index":1674,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1363,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scale(1.2",{"_index":1366,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scroll",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sd",{"_index":1649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1229,"title":{},"body":{"injectables/UploadService.html":{}}}],["second",{"_index":89,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/RouteInfo.html":{}}}],["secretaccesskey",{"_index":1232,"title":{},"body":{"injectables/UploadService.html":{}}}],["section",{"_index":758,"title":{},"body":{"components/HowToComponent.html":{}}}],["see",{"_index":690,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{}}}],["select",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["send",{"_index":548,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{}}}],["sent",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["serv",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["server",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"index.html":{}}}],["servic",{"_index":52,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/api/map",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/match",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/us",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/auth.servic",{"_index":657,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["servier",{"_index":640,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/MatchingControllerService.html":{}}}],["session",{"_index":870,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["sessioncheck",{"_index":871,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorag",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.clear",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.getitem(\"address",{"_index":1452,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"firstnam",{"_index":1446,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"lastnam",{"_index":1448,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"useremail",{"_index":1450,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('rol",{"_index":1475,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1208,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.length",{"_index":882,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.setitem('act",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('address",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('batchend",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('firstnam",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('id",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('lastnam",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('rol",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('useremail",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('userpassword",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem(token_key",{"_index":1207,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["set",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sethead",{"_index":859,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["seven",{"_index":779,"title":{},"body":{"components/HowToComponent.html":{}}}],["show",{"_index":824,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["shown",{"_index":834,"title":{},"body":{"components/HowToComponent.html":{}}}],["side",{"_index":663,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sign",{"_index":885,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["simpli",{"_index":685,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{}}}],["site",{"_index":865,"title":{},"body":{"components/LandingComponent.html":{}}}],["skype",{"_index":782,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slack",{"_index":781,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["someth",{"_index":1284,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["southcarolina",{"_index":1646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southdakota",{"_index":1648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spec\\.t",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":256,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"miscellaneous/enumerations.html":{}}}],["specifi",{"_index":624,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["spent",{"_index":1702,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.model.t",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../link.model.t",{"_index":1727,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.model.t",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.model.t",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.t",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.storage.t",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":1729,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/accountinfo/accountinfo.component.t",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:17",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:19",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:21",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:23",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:26",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:35",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:40",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:50",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:61",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/car",{"_index":526,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.t",{"_index":675,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:12",{"_index":684,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/favorites/favorites.component.ts:20",{"_index":688,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/how",{"_index":741,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.t",{"_index":863,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.ts:16",{"_index":875,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:18",{"_index":872,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:29",{"_index":873,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:48",{"_index":874,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/likes/likes.component.t",{"_index":908,"title":{},"body":{"components/LikesComponent.html":{},"coverage.html":{}}}],["src/app/components/likes/likes.component.ts:22",{"_index":913,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:34",{"_index":919,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:39",{"_index":916,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.t",{"_index":949,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:104",{"_index":965,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:115",{"_index":957,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:45",{"_index":955,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:57",{"_index":968,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:62",{"_index":967,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:43",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/map/map.component.t",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":1120,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1142,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1126,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1139,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":1140,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:70",{"_index":1132,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:98",{"_index":1133,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.t",{"_index":1185,"title":{},"body":{"components/RideswipeComponent.html":{},"coverage.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:10",{"_index":1188,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:14",{"_index":1189,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/usercard/usercard.component.t",{"_index":1301,"title":{},"body":{"components/UsercardComponent.html":{},"coverage.html":{}}}],["src/app/components/usercard/usercard.component.ts:122",{"_index":1316,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:133",{"_index":1320,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:164",{"_index":1323,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:188",{"_index":1325,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:37",{"_index":1339,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:39",{"_index":1347,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:45",{"_index":1333,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:47",{"_index":1332,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:49",{"_index":1328,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:51",{"_index":1331,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:53",{"_index":1349,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:56",{"_index":1345,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:58",{"_index":1314,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:68",{"_index":1334,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:73",{"_index":1318,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.t",{"_index":1273,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:104",{"_index":1403,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:143",{"_index":1402,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:155",{"_index":1400,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:163",{"_index":1401,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:40",{"_index":1399,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:50",{"_index":1405,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:55",{"_index":1404,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/view",{"_index":1407,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["src/app/directives/plac",{"_index":1156,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["src/app/guards/access.guard.t",{"_index":5,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:16",{"_index":14,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:21",{"_index":25,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/models/address.model.t",{"_index":69,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/app/models/address.model.ts:10",{"_index":93,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:12",{"_index":94,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:14",{"_index":95,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:4",{"_index":90,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:6",{"_index":82,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:8",{"_index":88,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/api",{"_index":231,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/car.model.t",{"_index":507,"title":{},"body":{"classes/Car.html":{},"coverage.html":{}}}],["src/app/models/car.model.ts:13",{"_index":521,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:15",{"_index":516,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:17",{"_index":519,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:19",{"_index":523,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:9",{"_index":514,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/contact",{"_index":619,"title":{},"body":{"interfaces/ContactInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/filter.t",{"_index":697,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["src/app/models/filter.ts:10",{"_index":705,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:6",{"_index":701,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:8",{"_index":702,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/interest.model.t",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/link.model.t",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/models/location.model.t",{"_index":1003,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/models/marker.model.t",{"_index":1052,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["src/app/models/office.model.t",{"_index":1152,"title":{},"body":{"interfaces/Office.html":{},"coverage.html":{}}}],["src/app/models/register.model.t",{"_index":1181,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/role.model.t",{"_index":1564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/rout",{"_index":1190,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/models/state.model.t",{"_index":1565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/swipecard.model.t",{"_index":1195,"title":{},"body":{"classes/SwipecardModel.html":{},"coverage.html":{}}}],["src/app/models/swipecard.model.ts:6",{"_index":1197,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/swipecard.model.ts:8",{"_index":1198,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/user.model.t",{"_index":1256,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/api/map",{"_index":1032,"title":{},"body":{"injectables/MapsControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/match",{"_index":1062,"title":{},"body":{"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/us",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:101",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:40",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:59",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/geocode.service.t",{"_index":708,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["src/app/services/geocode.service.ts:15",{"_index":713,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:29",{"_index":721,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:51",{"_index":715,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/upload.service.t",{"_index":1210,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:13",{"_index":1226,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:15",{"_index":1221,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:26",{"_index":1222,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:42",{"_index":1224,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/utils/error.interceptor.t",{"_index":630,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:20",{"_index":636,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:33",{"_index":645,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.t",{"_index":848,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:15",{"_index":851,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:28",{"_index":852,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/token.storage.t",{"_index":1199,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/token.storage.ts:20",{"_index":1204,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:28",{"_index":1202,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/types.t",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.t",{"_index":1520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1522,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":704,"title":{"index.html":{}},"body":{"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state('back",{"_index":980,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('cent",{"_index":1353,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('front",{"_index":976,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('left",{"_index":1355,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('on",{"_index":1362,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('right",{"_index":1358,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('two",{"_index":1365,"title":{},"body":{"components/UsercardComponent.html":{}}}],["statement",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":240,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["step",{"_index":647,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["stick",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["storag",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1227,"title":{},"body":{"injectables/UploadService.html":{},"index.html":{}}}],["street",{"_index":87,"title":{},"body":{"classes/AddressModel.html":{}}}],["string",{"_index":81,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strnum",{"_index":589,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["structur",{"_index":921,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["style",{"_index":969,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["styleurl",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sub",{"_index":1131,"title":{},"body":{"components/NavbarComponent.html":{}}}],["submit",{"_index":612,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["submitchang",{"_index":1416,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["success",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["successfuli",{"_index":809,"title":{},"body":{"components/HowToComponent.html":{}}}],["such",{"_index":242,"title":{},"body":{"interfaces/ApiError.html":{}}}],["support",{"_index":528,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"modules.html":{}}}],["sure",{"_index":550,"title":{},"body":{"components/CarRegistrationComponent.html":{},"index.html":{}}}],["svg",{"_index":1718,"title":{},"body":{"modules.html":{}}}],["swipcard",{"_index":918,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["swipe",{"_index":1283,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["swipe(act",{"_index":1319,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipe_act",{"_index":1308,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipebio",{"_index":1344,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecard",{"_index":911,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["swipecardbio",{"_index":1309,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmain",{"_index":1310,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmodel",{"_index":920,"title":{"classes/SwipecardModel.html":{}},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["swipeleft",{"_index":1336,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipemain",{"_index":1346,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swiperight",{"_index":1338,"title":{},"body":{"components/UsercardComponent.html":{}}}],["switch",{"_index":1130,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["switchrol",{"_index":1417,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["system",{"_index":74,"title":{},"body":{"classes/AddressModel.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tabl",{"_index":571,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":646,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["tap",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["templat",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["tennesse",{"_index":1650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["texa",{"_index":1652,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["th",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["thank",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["themselv",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["there'",{"_index":1396,"title":{},"body":{"components/UsercardComponent.html":{}}}],["there\\'",{"_index":1398,"title":{},"body":{"components/UsercardComponent.html":{}}}],["think",{"_index":831,"title":{},"body":{"components/HowToComponent.html":{}}}],["this.address2",{"_index":1451,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.addressselect.emit(this.getformattedaddress(autocomplete.getplac",{"_index":1180,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.animst",{"_index":1383,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.animthumbst",{"_index":1381,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.authenticator(email",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.authenticate(this.useremail",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":673,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.batchend",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.car",{"_index":581,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmak",{"_index":602,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmodel",{"_index":604,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject",{"_index":580,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.id",{"_index":600,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.mak",{"_index":601,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.model",{"_index":603,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.own",{"_index":605,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.year",{"_index":607,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.length",{"_index":583,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.push(el",{"_index":593,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.caryear",{"_index":608,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.currentindex",{"_index":1391,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentrol",{"_index":1471,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentswipecard",{"_index":1377,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentus",{"_index":879,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.datelocationencrypt",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.el",{"_index":1173,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.encryptedlocationd",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.firstnam",{"_index":1445,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.fold",{"_index":1236,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.geocod",{"_index":727,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocoder.geocod",{"_index":730,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.getoffic",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.getrol",{"_index":1455,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.gets3bucket().upload(param",{"_index":1244,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.getus",{"_index":1454,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.http",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete[]>(environment.apiurl",{"_index":1117,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.get(environment.apiurl",{"_index":1051,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["this.http.get[]>(environment.apiurl",{"_index":1107,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.post(environment.apiurl",{"_index":1110,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.put[]>(environment.apiurl",{"_index":1115,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.isloggedin",{"_index":1146,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.lastnam",{"_index":1447,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.likecards.push(card",{"_index":994,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.mapsapiloader.load().then",{"_index":1176,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.matchservice.dislikedriver(this.currentuser.id",{"_index":1298,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getlikeddrivers(this.currentuser.id).subscrib",{"_index":928,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.matchservice.getmatchingdrivers(this.currentuser.id).subscrib",{"_index":1280,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.likedriver(this.currentuser.id",{"_index":1296,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.undislikedriver(this.currentuser.id",{"_index":1294,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.unlikedriver(this.currentuser.id",{"_index":1297,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.officeobject",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.officeobjectarray",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.registrationkey",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.resetus",{"_index":584,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.route.navigate([\"/land",{"_index":1150,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.route.navigate(['/land",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.url",{"_index":1148,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":63,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.sess",{"_index":883,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.sessioncheck",{"_index":881,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.swipe_action.left",{"_index":1387,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipe_action.right",{"_index":1322,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.add('hidden",{"_index":1379,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.remove('hidden",{"_index":1380,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.length",{"_index":1376,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.push(card",{"_index":938,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["this.swipecards.splice(this.currentindex",{"_index":1390,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[0",{"_index":1378,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[this.currentindex].user.id).subscrib",{"_index":1386,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.thumbimg",{"_index":1384,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":857,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.tokenstorage.savetoken(token",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.url",{"_index":1251,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.us",{"_index":1478,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.usernam",{"_index":1449,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userobject",{"_index":598,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.cars.push(this.carobject",{"_index":609,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id",{"_index":586,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id.tostr",{"_index":606,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userpass",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users.push(card",{"_index":1282,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users.splice(index",{"_index":1299,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].choos",{"_index":1293,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].user.id).subscrib",{"_index":1295,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.createcar(this.carobject).subscribe(car",{"_index":610,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getallcars().subscribe(c",{"_index":587,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getalloffices().subscribe(data",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getallusers().subscribe((x",{"_index":1477,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getcurrentuser().pip",{"_index":60,"title":{},"body":{"guards/AccessGuard.html":{}}}],["this.userservice.getcurrentuser().subscrib",{"_index":926,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(us",{"_index":594,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getcurrentuserobservable().subscrib",{"_index":878,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.getregistrationkey().subscrib",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getuserbyemail(email).subscrib",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuserbyemail(email).then((x",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update().subscrib",{"_index":1473,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["those",{"_index":1269,"title":{},"body":{"interfaces/User.html":{}}}],["thrash",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["three",{"_index":788,"title":{},"body":{"components/HowToComponent.html":{}}}],["throwerror",{"_index":654,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(apierror",{"_index":674,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err.error",{"_index":666,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thu",{"_index":797,"title":{},"body":{"components/HowToComponent.html":{}}}],["thumb",{"_index":1326,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbanimdon",{"_index":1313,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbimg",{"_index":1311,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbnail",{"_index":1350,"title":{},"body":{"components/UsercardComponent.html":{}}}],["time",{"_index":1047,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["titl",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["tn",{"_index":1651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to'},{'nam",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["to.compon",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["to.component.css",{"_index":745,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.html",{"_index":746,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.t",{"_index":742,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["to/how",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"coverage.html":{}}}],["tobase64str",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{}}}],["today",{"_index":886,"title":{},"body":{"components/LandingComponent.html":{}}}],["token",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["token.storag",{"_index":856,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["token_key",{"_index":1205,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorag",{"_index":418,"title":{"injectables/TokenStorage.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/TokenStorage.html":{},"coverage.html":{}}}],["topromis",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1193,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["track",{"_index":1330,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trainer",{"_index":1184,"title":{},"body":{"interfaces/Register.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":977,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transit",{"_index":970,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transition('on",{"_index":1368,"title":{},"body":{"components/UsercardComponent.html":{}}}],["transition('two",{"_index":1370,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex",{"_index":1356,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(0",{"_index":1354,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(200",{"_index":1359,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trash",{"_index":1291,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["travel",{"_index":1046,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["tree",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["trigger",{"_index":971,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('flip",{"_index":975,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('pop",{"_index":1361,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trigger('slid",{"_index":1352,"title":{},"body":{"components/UsercardComponent.html":{}}}],["true",{"_index":65,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":817,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["tx",{"_index":1653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.model.t",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":1725,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1695,"title":{},"body":{"index.html":{}}}],["ui.com/images/avatar/large/chris.jpg",{"_index":934,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["unauthor",{"_index":263,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["unavail",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefin",{"_index":582,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["under",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["underneath",{"_index":754,"title":{},"body":{"components/HowToComponent.html":{}}}],["underth",{"_index":948,"title":{},"body":{"components/LikesComponent.html":{}}}],["undislikedriv",{"_index":1070,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["undislikedriver(riderid",{"_index":1101,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unit",{"_index":1566,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["unknown",{"_index":974,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["unlik",{"_index":1076,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriv",{"_index":1071,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriver(riderid",{"_index":1104,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unus",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["up",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["updat",{"_index":1141,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["upload",{"_index":1211,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfil",{"_index":1220,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(fil",{"_index":1223,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservic",{"_index":1209,"title":{"injectables/UploadService.html":{}},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["upresult",{"_index":1243,"title":{},"body":{"injectables/UploadService.html":{}}}],["upresult.fail",{"_index":1249,"title":{},"body":{"injectables/UploadService.html":{}}}],["uri",{"_index":1093,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["url",{"_index":48,"title":{},"body":{"guards/AccessGuard.html":{},"classes/Car.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["us",{"_index":55,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["usepromis",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":53,"title":{"interfaces/User.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'",{"_index":625,"title":{},"body":{"interfaces/ContactInfo.html":{},"classes/Filter.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{}}}],["user.email",{"_index":1487,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.firstnam",{"_index":1484,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.id",{"_index":1483,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.lastnam",{"_index":1486,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.model",{"_index":524,"title":{},"body":{"classes/Car.html":{},"classes/SwipecardModel.html":{}}}],["user.rol",{"_index":1488,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.user.address",{"_index":999,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.batchend",{"_index":1000,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.email",{"_index":998,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.firstnam",{"_index":996,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.lastnam",{"_index":997,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user\\'",{"_index":1489,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["usercard",{"_index":409,"title":{"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["usercard'},{'nam",{"_index":221,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usercard.component.css",{"_index":1302,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercard.component.html",{"_index":1303,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercardcompon",{"_index":220,"title":{"components/UsercardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercontrollerservic",{"_index":11,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":585,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{}}}],["userlink",{"_index":927,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb",{"_index":1275,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb'},{'nam",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usermatchweb.component.css",{"_index":1277,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.html",{"_index":1276,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchwebcompon",{"_index":222,"title":{"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":761,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["username/phon",{"_index":626,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["userobject",{"_index":539,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["userpass",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofil",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/{userid",{"_index":1098,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["userservic",{"_index":20,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ut",{"_index":1655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utah",{"_index":1654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{}}}],["utils/error.interceptor",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/jwt.interceptor",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/token.storag",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["va",{"_index":1659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valu",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["variabl",{"_index":1519,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":759,"title":{},"body":{"components/HowToComponent.html":{}}}],["vehicl",{"_index":518,"title":{},"body":{"classes/Car.html":{},"components/HowToComponent.html":{}}}],["venmo",{"_index":1261,"title":{},"body":{"interfaces/User.html":{}}}],["verdict",{"_index":1286,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["vermont",{"_index":1656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["via",{"_index":1714,"title":{},"body":{"index.html":{}}}],["view",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["viewchild",{"_index":1342,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipebio",{"_index":1372,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipemain",{"_index":1371,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewprofilecompon",{"_index":224,"title":{"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virginia",{"_index":1658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":937,"title":{},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{}}}],["void",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["vt",{"_index":1657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wa",{"_index":1661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["want",{"_index":58,"title":{},"body":{"guards/AccessGuard.html":{},"components/LandingComponent.html":{}}}],["washington",{"_index":1660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["way",{"_index":896,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["we'r",{"_index":641,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["web",{"_index":1217,"title":{},"body":{"injectables/UploadService.html":{}}}],["westvirginia",{"_index":1662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["whichev",{"_index":840,"title":{},"body":{"components/HowToComponent.html":{}}}],["wi",{"_index":1665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window.location.reload(tru",{"_index":1474,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["window.screen.width",{"_index":695,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["wisconsin",{"_index":1664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wish",{"_index":827,"title":{},"body":{"components/HowToComponent.html":{}}}],["within",{"_index":787,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["without",{"_index":1090,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["work",{"_index":560,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["wv",{"_index":1663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wy",{"_index":1667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wyom",{"_index":1666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["x.active.tostr",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.address",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.batchend",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.firstnam",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.id.tostr",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.lastnam",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.role",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["xcvf",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{}}}],["ye",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["year",{"_index":513,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/ViewProfileComponent.html":{}}}],["you'r",{"_index":892,"title":{},"body":{"components/LandingComponent.html":{}}}],["you'v",{"_index":1696,"title":{},"body":{"index.html":{}}}],["you\\'r",{"_index":906,"title":{},"body":{"components/LandingComponent.html":{}}}],["yourself",{"_index":772,"title":{},"body":{"components/HowToComponent.html":{}}}],["ype",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yyyi",{"_index":1263,"title":{},"body":{"interfaces/User.html":{}}}],["zip",{"_index":80,"title":{},"body":{"classes/AddressModel.html":{}}}],["zone.j",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zxcjhd5+grqjenpwbs31mtoy1gsetewyuhsm5h6p",{"_index":1233,"title":{},"body":{"injectables/UploadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessGuard.html":{"url":"guards/AccessGuard.html","title":"guard - AccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/access.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/access.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/access.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { UserControllerService } from '../../app/services/api/user-controller.service';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class AccessGuard implements CanActivate {\n    constructor(private userService: UserControllerService, private router: Router) {}\n  \n    // RouterStateSnapshot to cache the url attempted to be accessed on the auth service\n    // after user logs in, use this url to direct them to the page they want\n    canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): boolean | Observable {\n      if (route.data.requiresLogin) {\n        return this.userService.getCurrentUser().pipe(\n          mapTo(true),\n          catchError(_ => {\n            this.router.navigate(['login']);\n            return of(false);\n          })\n        );\n      }\n      return true;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents possible adress of Users of the system \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Optional\n                                address2\n                            \n                            \n                                addressID\n                            \n                            \n                                city\n                            \n                            \n                                state\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:6\n                            \n                        \n\n                \n                    \n                        First line of the address (house number, Street name) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:8\n                            \n                        \n\n                \n                    \n                        Second line of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addressID:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:4\n                            \n                        \n\n                \n                    \n                        The id (and possible key) of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:10\n                            \n                        \n\n                \n                    \n                        THe City of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:12\n                            \n                        \n\n                \n                    \n                        The State the address is in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:14\n                            \n                        \n\n                \n                    \n                        Represents the zip-code \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressModel {\n    /** The id (and possible key) of the address */\n    addressID: number;\n    /** First line of the address (house number, Street name) */\n    address: string;\n    /** Second line of the address */\n    address2?: string;\n    /** THe City of the address */\n    city: string;\n    /** The State the address is in */\n    state: string;\n    /** Represents the zip-code */\n    zip: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Allows extra features reserved for Administrators\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEnd\n                            \n                            \n                                encryptedLocationDate\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                registrationKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateLocationEncryption\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRegistrationKey\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                            Sets up Component with User Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows User Services to be utilized\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateLocationEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \ndateLocationEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Sets up a date and location encryption key \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Retrieves all offices, called on component initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRegistrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRegistrationKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Alows a New registration key to be used for New User Registration \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initilaizes the Component with the offices \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:21\n                            \n                        \n\n                \n                    \n                        When the current batch ends \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encryptedLocationDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encryptedLocationDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                        Holds the office and batch end \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Holds th current office being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds a list of offices \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registrationKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:17\n                            \n                        \n\n                \n                    \n                        Holds a registration key that new users can use to regiser themselves \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Office } from '../../models/office.model';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n/**\n * Allows extra features reserved for Administrators\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  /** Holds a registration key that new users can use to regiser themselves */\n  registrationKey: string;\n  /** Holds a list of offices */\n  officeObjectArray: Office[] = [];\n  /** When the current batch ends */\n  batchEnd: string;\n  /** Holds th current office being viewed */\n  officeObject;\n\n  /** Holds the office and batch end */\n  encryptedLocationDate: string;\n\n  /**\n   * Sets up Component with User Service\n   * @param {UserControllerService} userService - Allows User Services to be utilized\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /** Initilaizes the Component with the offices */\n  ngOnInit() {\n    this.getOffices();\n  }\n\n  /** Alows a New registration key to be used for New User Registration */\n  getRegistrationKey() {\n    this.userService.getRegistrationKey().subscribe(\n      data => {\n        this.registrationKey = data;\n        this.dateLocationEncryption();\n      }\n    );\n  }\n\n  /** Sets up a date and location encryption key */\n  dateLocationEncryption() {\n    let middleEncryption = btoa(this.officeObject + '~' + this.batchEnd);\n    if (middleEncryption.length != 28) {\n      middleEncryption = 'XcvF' + middleEncryption;\n    }\n    this.encryptedLocationDate = middleEncryption;\n  }\n\n  /**\n   * Retrieves all offices, called on component initialization\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n      this.officeObject = '';\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Generate Key\n      This key expires after 2 hours\n      \n        \n          Batch End\n        \n        \n      \n      \n        \n          Office Address\n        \n        \n          \n            Select Office\n            {{office.name}}\n          \n        \n      \n      Get Key\n      \n      \n      \n      \n        {{encryptedLocationDate}}{{registrationKey}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Generate Key      This key expires after 2 hours                        Batch End                                              Office Address                                      Select Office            {{office.name}}                              Get Key                                {{encryptedLocationDate}}{{registrationKey}}            '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api-error.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an error that accompanied the response to an HTTP request\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Any additional details, such which fields were missing/incorrect in a\nrequest format error. An empty array indicates that there are no such\ndetails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary message corresponding to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP status that accompanied the error. This is not returned by the\nAPI, but is provided as a convenience by the ErrorInterceptor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ApiErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiErrorType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the error, if a specific type can be associated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n    /**\n     * The primary message corresponding to the error.\n     */\n    message: String;\n    /**\n     * Any additional details, such which fields were missing/incorrect in a\n     * request format error. An empty array indicates that there are no such\n     * details.\n     */\n    details: String[];\n    /**\n   * The HTTP status that accompanied the error. This is not returned by the\n   * API, but is provided as a convenience by the ErrorInterceptor.\n   */\n    status: number;\n    /**\n    * The type of the error, if a specific type can be associated.\n    */\n    type?: ApiErrorType;\n}\n\n/**\n * A specific type of error which can be returned by the API.\n */\nexport enum ApiErrorType {\n    /**\n     * The user is not logged in.\n     */\n    NotLoggedIn = 'NOT_LOGGED_IN',\n    /**\n     * The user is logged in, but does not have permission to access an endpoint.\n     */\n    Unauthorized = 'UNAUTHORIZED',\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Serves as the root component for the entire page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonTap(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            Log any tap that the system detects \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                        Confirms the user password \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                        Provides a password for the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                        Provides a basic title \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * Serves as the root component for the entire page\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /** Provides a basic title */\n  title = 'app';\n  /** Provides a password for the user */\n  password: string;\n  /** Confirms the user password */\n  confirmPassword: string;\n\n  /** Log any tap that the system detects */\n  onTap(event) {\n    console.log(event);\n  }\n\n\n}\n\n\n\n    \n\n    \n        \n\n\n \n \n -->\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Serves as the collection/base for the entire Angular Project\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountinfoComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CarRegistrationComponent\n                            \n                            \n                                FavoritesComponent\n                            \n                            \n                                HowToComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                LikesComponent\n                            \n                            \n                                LikesmatchwebComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                PlacesAutocompleteDirective\n                            \n                            \n                                RideswipeComponent\n                            \n                            \n                                UsercardComponent\n                            \n                            \n                                UsermatchwebComponent\n                            \n                            \n                                ViewProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                            \n                                     MapsControllerService\n                            \n                            \n                                     MatchingControllerService\n                            \n                            \n                                     UserControllerService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RideswipeComponent } from './components/rideswipe/rideswipe.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UsercardComponent } from './components/usercard/usercard.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { MapComponent } from './components/map/map.component';\nimport { AgmCoreModule, GoogleMapsAPIWrapper, CircleManager } from '@agm/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { UsermatchwebComponent } from './components/usermatchweb/usermatchweb.component';\nimport { LikesmatchwebComponent } from './components/likesmatchweb/likesmatchweb.component';\nimport { UserControllerService } from './services/api/user-controller.service';\nimport { MapsControllerService } from './services/api/maps-controller.service';\nimport { MatchingControllerService } from './services/api/matching-controller.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { HttpClientModule, HttpClient, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PlacesAutocompleteDirective } from './directives/places-autocomplete/places-autocomplete.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AccountinfoComponent } from './components/accountinfo/accountinfo.component';\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\nimport { JwtInterceptor } from './utils/jwt.interceptor';\nimport { ErrorInterceptor } from './utils/error.interceptor';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CarRegistrationComponent } from './components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from './components/view-profile/view-profile.component';\n// import { DateFormatPipe } from './pipes/date-format.pipe';\n\n/**\n * Serves as the collection/base for the entire Angular Project\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    RideswipeComponent,\n    LandingComponent,\n    UsercardComponent,\n    HowToComponent,\n    MapComponent,\n    NavbarComponent,\n    LoginComponent,\n    LikesComponent,\n    UsermatchwebComponent,\n    LikesmatchwebComponent,\n    PlacesAutocompleteDirective,\n    FavoritesComponent,\n    AccountinfoComponent,\n    AdminComponent,\n    CarRegistrationComponent,\n    ViewProfileComponent,\n    // DateFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AnimateOnScrollModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBXWXgWzxhyvz9JyN9SrHgGOzi7VcU5G3g',\n      libraries: ['places'],\n    }),\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    NgbActiveModal,\n    MapsControllerService,\n    UserControllerService,\n    AuthService,\n    MatchingControllerService,\n    GoogleMapsAPIWrapper,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from '../components/how-to/how-to.component';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { MapComponent } from '../components/map/map.component';\nimport { RideswipeComponent } from '../components/rideswipe/rideswipe.component';\nimport { UsercardComponent } from '../components/usercard/usercard.component';\nimport { FavoritesComponent } from '../components/favorites/favorites.component';\nimport { AccountinfoComponent } from '../components/accountinfo/accountinfo.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CarRegistrationComponent } from '../components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from '../components/view-profile/view-profile.component';\n\n/**\n * This is where we set our routerLink attribute.\n * For example...\n * About\n * creates an  element of class \"dropdown-item\" that will \n * refer to these routes to find which component to route to.\n */\nexport const routes: Routes = [\n  { path: '',  pathMatch: 'full', redirectTo: 'landing' },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'landing', component: LandingComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent },\n  { path: 'accountInfo', component: AccountinfoComponent},\n  { path: 'rideswipe', component: RideswipeComponent },\n  { path: 'userCard', component: UsercardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'cars', component: CarRegistrationComponent },\n  { path: 'userProfile', component: ViewProfileComponent}\n  //{ path: 'logout', redirectTo: 'landing' }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows Users to authenticate themselves with the server\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                authenticator\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserControllerService, tokenStorage: TokenStorage, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            Sets up the Authentication service with the required dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nOur http client dependency for making http requests\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService used to grab any user information from the API\n\n\n                                                        \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to save our generated token locally\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nenables navigation between components (does not appear to be used)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticate(email: string, password: string, usePromise?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in and if successful, sets the sessionStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe user identifier\n\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe password of the account\n\n\n                                                        \n                                                \n                                                \n                                                        usePromise\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                \n(TESTING) whether to use the promise version or stick with observable\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticator\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticator(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The email address to be sent from the view to the API\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The password to be sent from the view to the API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nUser mapped to token storage now\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Logs the user out of the service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap, map } from 'rxjs/operators';\nimport { UserControllerService } from './api/user-controller.service';\nimport { TokenStorage } from './../utils/token.storage';\nimport { Router } from '@angular/router';\n\n/**\n * Allows Users to authenticate themselves with the server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * Sets up the Authentication service with the required dependencies\n   * @param {HttpClient} http - Our http client dependency for making http requests\n   * @param {UserControllerService} userService - Service used to grab any user information from the API\n   * @param {TokenStorage} tokenStorage - Used to save our generated token locally\n   * @param {Router} route - enables navigation between components (does not appear to be used)\n   */\n  constructor(\n    private http: HttpClient,\n    private userService: UserControllerService,\n    private tokenStorage: TokenStorage,\n    private route: Router\n  ) { }\n\n  /**\n   * Attempts to log the user in\n   * @param email The email address to be sent from the view to the API\n   * @param password The password to be sent from the view to the API\n   * @returns {null} - User mapped to token storage now\n   */\n  authenticator(email: string, password: string) {\n    const credentials = { email, password };\n    console.log('in authenticate');\n    return this.http\n      .post(environment.apiUrl + '/login', credentials)\n      .pipe(\n        map(token => {\n          console.log('Saving token');\n          this.tokenStorage.saveToken(token);\n        })\n      ).toPromise();\n  }\n\n  /**\n   * Attempts to log the user in and if successful, sets the sessionStorage\n   * @param email - the user identifier\n   * @param password - the password of the account\n   * @param {boolean} usePromise - (TESTING) whether to use the promise version or stick with observable\n   */\n  authenticate(email: string, password: string, usePromise?: boolean) {\n    this.authenticator(email, password).then(\n      (x) => {\n        console.log('Got user from Authenticate (Promise mode)');\n        this.userService.getUserByEmail(email).then((x) => {\n          console.log('Gotten email of user');\n          sessionStorage.setItem('id', x.id.toString());\n          sessionStorage.setItem('firstName', x.firstName);\n          sessionStorage.setItem('lastName', x.lastName);\n          sessionStorage.setItem('active', x.active.toString());\n          sessionStorage.setItem('role', x.role);\n          sessionStorage.setItem('address', x.address);\n          sessionStorage.setItem('batchEnd', x.batchEnd);\n          sessionStorage.setItem('userEmail', email);\n          sessionStorage.setItem('userPassword', password);\n        });\n        location.reload(true);\n      },\n      (e) => {\n        // error coming from the backend\n        console.log('Printing Login error (Promise Mode)!');\n        console.log(e);\n        if (document) {\n          const messageLogin = document.getElementById('errorMessageLogin');\n          if (messageLogin) {\n            messageLogin.style.display = 'block';\n            console.log(e.message);\n            if (e.message == 'GENERAL') {\n              messageLogin.innerHTML = 'Server unavailable';\n            } else {\n              messageLogin.innerHTML = e.message;\n            }\n          }\n        }\n        return e.message;\n      }\n    );\n  }\n\n  /**\n   * Logs the user out of the service\n   */\n  logout() {\n    sessionStorage.clear();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Car.html":{"url":"classes/Car.html","title":"class - Car","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/car.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the Car a User (cheifly a Driver) owns \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                model\n                            \n                            \n                                owner\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:9\n                            \n                        \n\n                \n                    \n                        The ID of the car in the database.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        make:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:15\n                            \n                        \n\n                \n                    \n                        The Producer of the Vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:17\n                            \n                        \n\n                \n                    \n                        THe model of the vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     Link\n\n                    \n                \n                    \n                        \n                            Type :     Link\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:13\n                            \n                        \n\n                \n                    \n                        The owner of this car. Represents the URL mapping to the actual user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        year:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:19\n                            \n                        \n\n                \n                    \n                        THe year the car was produced \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\nimport { Link } from './link.model';\n\n/** Represents the Car a User (cheifly a Driver) owns */\nexport class Car {\n  /**\n   * The ID of the car in the database.\n   */\n  id: number;\n  /**\n   * The owner of this car. Represents the URL mapping to the actual user\n   */\n  owner: Link;\n  /** The Producer of the Vehicle */\n  make: string;\n  /** THe model of the vehicle */\n  model: string;\n  /** THe year the car was produced */\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarRegistrationComponent.html":{"url":"components/CarRegistrationComponent.html","title":"component - CarRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/car-registration/car-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the functionality of car registration and management\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car-registration\n            \n\n            \n                styleUrls\n                car-registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car-registration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnCarInfo\n                            \n                            \n                                carMake\n                            \n                            \n                                carModel\n                            \n                            \n                                carObject\n                            \n                            \n                                cars\n                            \n                            \n                                carYear\n                            \n                            \n                                optInToDrive\n                            \n                            \n                                userObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshFields\n                            \n                            \n                                resetCars\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n                \n                    \n                            Sets up the Car Registration component with dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to manager the user AND the cars available on the system\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCarToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCarToUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Sets the car with appropriate values and sends it to the server using the User Service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Makes sure there is a car object available to operate on\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Refreshes the fields in the Car form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCars\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCars()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Clears the fields in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Ensures that the component is working with the logged on user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnCarInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        btnCarInfo:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carMake\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carMake:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:29\n                            \n                        \n\n                \n                    \n                        The company that manufactured it\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carModel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model of the car\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carObject:     Car\n\n                    \n                \n                    \n                        \n                            Type :     Car\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:25\n                            \n                        \n\n                \n                    \n                        The car to create and register\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cars:     Car[]\n\n                    \n                \n                    \n                        \n                            Type :     Car[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:49\n                            \n                        \n\n                \n                    \n                        List of cars owned by the ownwer to present in a table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:39\n                            \n                        \n\n                \n                    \n                        When the car was produced\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optInToDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optInToDrive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:44\n                            \n                        \n\n                \n                    \n                        Relic from the AccountInfoComponent that previously managed cars\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userObject:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:19\n                            \n                        \n\n                \n                    \n                        The User that owns the car\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Car } from '../../models/car.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Supports the functionality of car registration and management\n */\n@Component({\n  selector: 'app-car-registration',\n  templateUrl: './car-registration.component.html',\n  styleUrls: ['./car-registration.component.css']\n})\nexport class CarRegistrationComponent implements OnInit {\n\n  /**\n   * The User that owns the car\n   */\n  userObject: User;\n\n  // for drivers\n  /**\n   * The car to create and register\n   */\n  carObject: Car;\n  /**\n   * The company that manufactured it\n   */\n  carMake: string;\n\n  /**\n   * Model of the car\n   */\n  carModel: string;\n\n  /**\n   * When the car was produced\n   */\n  carYear: number;\n\n  /**\n   * Relic from the AccountInfoComponent that previously managed cars\n   */\n  optInToDrive: boolean;\n\n  /**\n   * List of cars owned by the ownwer to present in a table\n   */\n  cars: Car[];\n\n  // booleans for car information buttons\n  btnCarInfo: Number = 0;\n\n  /**\n   * Sets up the Car Registration component with dependencies\n   * @param {UserControllerService} userService - the Service that allows us to manager the user AND the cars available on the system\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Makes sure there is a car object available to operate on\n   */\n  ngOnInit() {\n    this.carObject = new Car();\n  }\n\n  /**\n   * Clears the fields in the form\n   */\n  resetCars() {\n\n    if (this.cars !== undefined && this.cars != null && this.cars.length !== 0) {\n      return;\n    }\n    this.resetUser();\n    const userId = this.userObject.id;\n    this.cars = [];\n    this.userService.getAllCars().subscribe(c => {\n\n      c.forEach(element => {\n        const strNum = element.owner.substring(7);\n        const num = Number.parseInt(strNum);\n        if (num === userId) {\n          this.cars.push(element);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Ensures that the component is working with the logged on user\n   */\n  resetUser() {\n    this.userService.getCurrentUser().subscribe(user => {\n      console.log('Car reg: Gotten User: ' + user);\n      this.userObject = user;\n    },\n    e => {\n      console.log('Car reg: Failed to get user: ' + e);\n    });\n\n  }\n\n  /**\n   * Sets the car with appropriate values and sends it to the server using the User Service\n   */\n  addCarToUser() {\n\n    this.resetUser();\n\n    this.carObject.id = 0;\n    this.carObject.make = this.carMake;\n    this.carObject.model = this.carModel;\n\n    this.carObject.owner = '/users/' + this.userObject.id.toString();\n    this.carObject.year = this.carYear;\n    // this.userObject.cars.push(this.carObject);\n\n    this.userService.createCar(this.carObject).subscribe(car => {\n      this.carObject = car;\n    });\n\n  }\n\n  /**\n   * Refreshes the fields in the Car form\n   */\n  refreshFields() {\n    this.carMake = '';\n    this.carModel = '';\n    this.carYear = new Date().getFullYear();\n  }\n\n}\n\n    \n\n    \n        \n  \n  Car Information:\n  \n  \n  \n  \n    \n      \n        Make\n      \n      \n    \n\n    \n      \n        Model\n      \n      \n    \n\n    \n      \n        Year\n      \n      \n    \n    \n      \n        Submit\n      \n      Add Car\n      Clear Fields\n    \n    \n       0\">\n        \n          ID\n          Make\n          Model\n          Year\n        \n        \n          {{c.id}}\n          {{c.make}}\n          {{c.model}}\n          {{c.year}}\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Car Information:                          Make                                  Model                                  Year                                  Submit            Add Car      Clear Fields               0\">                  ID          Make          Model          Year                          {{c.id}}          {{c.make}}          {{c.model}}          {{c.year}}                                '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactInfo.html":{"url":"interfaces/ContactInfo.html","title":"interface - ContactInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contact-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Holds a means of contacting a user \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this contact info entry in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The details specifying the user's username/phone number/etc. on the\nservice.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represente the type of contact info available \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ContactInfo {\n    /**\n     * The ID of this contact info entry in the database.\n     */\n    id: Number;\n    /** Represente the type of contact info available */\n    type: String;\n    /**\n     * The details specifying the user's username/phone number/etc. on the\n     * service.\n     */\n    info: String;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Meant to catch any error occuring in an HTTP request\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/error.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            Sets up our HTTP error handling with the services needed to handle them properly\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows us to log out if the servier says we're not logged on\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nenables component routing\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/error.interceptor.ts:33\n                            \n                        \n\n\n                \n                    \n                            Catches HTTP requests for errors and takes basic steps to inform devs about it (logs out if the servier says to log out)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe HTTP request to examine\n\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe means of proceeding with out HTTP request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError, ApiErrorType } from '../models/api-error.model';\nimport { AuthService } from './../services/auth.service';\n\n/**\n * Meant to catch any error occuring in an HTTP request\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  /**\n   * Sets up our HTTP error handling with the services needed to handle them properly\n   * @param {AuthService} authService - allows us to log out if the servier says we're not logged on\n   * @param {Router} router - enables component routing\n   */\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Catches HTTP requests for errors and takes basic steps to inform devs about it (logs out if the servier says to log out)\n   * @param request - the HTTP request to examine\n   * @param next - the means of proceeding with out HTTP request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred.\n          console.error('Network error:', err.error);\n          return throwError(err.error);\n        } else {\n          // API error.\n          const apiError = err.error;\n          apiError.status = err.status;\n          // Automatically log out if the error was due to being not logged in.\n          if (apiError.type === ApiErrorType.NotLoggedIn) {\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          return throwError(apiError);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n    \n        Description\n    \n    \n        Provides an over view of User Likes, distinguishing between the mobile view and desktop view \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                            Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the device is amobile device and sets view accordingly \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                        Whether or not the Device is a mobile device \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Provides an over view of User Likes, distinguishing between the mobile view and desktop view */\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n\n  /** Whether or not the Device is a mobile device */\n  public mobile = false;\n\n  /**\n   * Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n   */\n  constructor() { }\n\n  /** Checks to see if the device is amobile device and sets view accordingly */\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n    \n  \n  \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/filter.ts\n        \n\n            \n                Description\n            \n            \n                Provides a list of possible filters set up for the matching service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEndChange\n                            \n                            \n                                dayStartChange\n                            \n                            \n                                distanceChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEndChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEndChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:6\n                            \n                        \n\n                \n                    \n                        Filter by the user's batch end date \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayStartChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dayStartChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:8\n                            \n                        \n\n                \n                    \n                        Filter by the day the user started \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            distanceChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distanceChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:10\n                            \n                        \n\n                \n                    \n                        Filter by the distance between the users \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Filter {\n    /** Filter by the user's batch end date */\n    batchEndChange: boolean;\n    /** Filter by the day the user started */\n    dayStartChange: boolean;\n    /** Filter by the distance between the users */\n    distanceChange: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides Specific geolocation services from Google maps\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geocode\n                            \n                            \n                                reverseGeocode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the Service with a Google Maps object\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocode(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using an address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe address of a location to obtain information about\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverseGeocode\n                            \n                            \n                        \n                    \n                \n                \n                    \nreverseGeocode(latLng: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using a latitude and longitude value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe location to set up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                        Enables communication with Google Map services\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * Provides Specific geolocation services from Google maps\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodeService {\n\n  /**\n   * Enables communication with Google Map services\n   */\n  geocoder: google.maps.Geocoder;\n\n  /**\n   * Sets up the Service with a Google Maps object\n   */\n  constructor() {\n    this.geocoder = new google.maps.Geocoder();\n  }\n\n  /**\n   * Attempts to mark a location using a latitude and longitude value\n   * @param {google.maps.LatLng} latLng - the location to set up\n   * @returns {Observable} - information about your given location\n   */\n  reverseGeocode(latLng: google.maps.LatLng): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ location: latLng }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log('Geocoding service: geocoder failed due to: ' + status);\n            observer.error(status);\n          }\n        })\n      );\n    });\n  }\n\n  /**\n   * Attempts to mark a location using an address\n   * @param address - the address of a location to obtain information about\n   * @returns {Observable} - information about your given location\n   */\n  geocode(address: string): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ address: address }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log(\n              'Geocoding service: geocode was not successful for the following reason: '\n              + status\n            );\n            observer.error(status);\n          }\n        })\n      );\n    });\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowToComponent.html":{"url":"components/HowToComponent.html","title":"component - HowToComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowToComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/how-to/how-to.component.ts\n\n\n    \n        Description\n    \n    \n        Exists for Displaying a How-to page \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to\n            \n\n            \n                styleUrls\n                how-to.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Exists for Displaying a How-to page */\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      How to Use Revature RideForce\n    \n      \n      Registering an Account:\n      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.\n      \n      \n      Create Profile:\n      Creating your profile is the first part of the process for registering a new account.\n      \n      This section requires you to input a variety of information:\n      \n        Your first name\n        Last name\n        Username\n        Password\n        Confirm Password\n        Key: Allows access to RideForce given to you by your instructor\n        Office Address\n        Apartment Address\n        Batch End Date: Instructor should also notify you on your batch end date\n      \n      Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.\n        Biography:\n        The \"Biography\" section requires some more information from you with a little more effort on detail:\n        \n          About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential\n            fit as a passenger or driver.\n          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,\n            Discord, GroupMe, and other potential services of your choosing.\n        \n        When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking\n          on the \"Next\" button.\n        Car Info:\n        Within this section there are three options: Car, Passenger, or Both.\n        \n        If you do not have a car and plan on only being passenger, simply click next and move on to the next section.\n        \n        If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:\n        \n          Make: Enter the brand of your vehicle.\n          Model: Enter model of your vehicle.\n          Year: Enter year of your vehicle.\n        \n        Once all required information is entered depending on the option chose, move on to the final section by clicking the\n          \"Next\" button.\n        Review and Submit:\n        You are now finished entering all required information and may review what you have entered thus far within this section.\n        \n        If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.\n        \n        Once the information looks good, give it one more look and then click \"Submit\".\n        \n        Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!\n        \n        \n        Login:\n        In order to login, you must have a registered account. If you haven't registered one yet, please refer to the \"Registering Account\" section above.\n        \n        To login, simply click \"Login\" on the navigation bar.\n        \n        You should now see the login view, which contains two input fields: \"Username\" and \"Password\".\n        \n        Simply enter in your registered account's username and password into the respective input fields and click the big blue \"Login\" button underneath them.\n        \n        \n        Map:\n        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.\n        \n        After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver's and passenger's addresses.\n        \n        If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.\n        \n        \n        Browse:\n        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.\n        \n        This will bring you to a view displaying a potential driver.\n        \n        After viewing the potential driver's profile, if you think they are a good match, then \"like\" them as a potential driver.\n        \n        If you think they are not a good match, simply \"dislike\" them and move on to the next.\n        \n        \n        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.\n        \n        The order of drivers is determined by distance, so closer drivers will appear first on your browse page.\n        \n        You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"\n        \n        Within this \"liked list\" you can once again view your \"liked\" drivers profiles.\n        \n        Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it's a good match!\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              How to Use Revature RideForce                Registering an Account:      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.                  Create Profile:      Creating your profile is the first part of the process for registering a new account.            This section requires you to input a variety of information:              Your first name        Last name        Username        Password        Confirm Password        Key: Allows access to RideForce given to you by your instructor        Office Address        Apartment Address        Batch End Date: Instructor should also notify you on your batch end date            Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.        Biography:        The \"Biography\" section requires some more information from you with a little more effort on detail:                  About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential            fit as a passenger or driver.          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,            Discord, GroupMe, and other potential services of your choosing.                When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking          on the \"Next\" button.        Car Info:        Within this section there are three options: Car, Passenger, or Both.                If you do not have a car and plan on only being passenger, simply click next and move on to the next section.                If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:                  Make: Enter the brand of your vehicle.          Model: Enter model of your vehicle.          Year: Enter year of your vehicle.                Once all required information is entered depending on the option chose, move on to the final section by clicking the          \"Next\" button.        Review and Submit:        You are now finished entering all required information and may review what you have entered thus far within this section.                If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.                Once the information looks good, give it one more look and then click \"Submit\".                Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!                        Login:        In order to login, you must have a registered account. If you haven\\'t registered one yet, please refer to the \"Registering Account\" section above.                To login, simply click \"Login\" on the navigation bar.                You should now see the login view, which contains two input fields: \"Username\" and \"Password\".                Simply enter in your registered account\\'s username and password into the respective input fields and click the big blue \"Login\" button underneath them.                        Map:        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.                After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver\\'s and passenger\\'s addresses.                If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.                        Browse:        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.                This will bring you to a view displaying a potential driver.                After viewing the potential driver\\'s profile, if you think they are a good match, then \"like\" them as a potential driver.                If you think they are not a good match, simply \"dislike\" them and move on to the next.                        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.                The order of drivers is determined by distance, so closer drivers will appear first on your browse page.                You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"                Within this \"liked list\" you can once again view your \"liked\" drivers profiles.                Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it\\'s a good match!      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'HowToComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/jwt.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Ensures that each HTTP request we send has our authentication token\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/jwt.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up our interceptor for token addition\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to access our authentication token\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/jwt.interceptor.ts:28\n                            \n                        \n\n\n                \n                    \n                            Catches HTTP requests and adds the authentication token to its header\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe HTTP request to modify\n\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe means of proceeding with the original request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorage } from './token.storage';\n\n/**\n * Ensures that each HTTP request we send has our authentication token\n */\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  /**\n   * Sets up our interceptor for token addition\n   * @param tokenStorage - the Service that allows us to access our authentication token\n   */\n  constructor(private tokenStorage: TokenStorage) {}\n\n  /**\n   * Catches HTTP requests and adds the authentication token to its header\n   * @param {HttpRequest} request - the HTTP request to modify\n   * @param {HttpHandler} next - the means of proceeding with the original request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.tokenStorage.getToken();\n    if (token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing/landing.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the Carousel Appearence as a Site Intro\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates the Landing Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Component to utilize User Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Initializes the component by retrieving the User\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Checks to see if there is a session or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:16\n                            \n                        \n\n                \n                    \n                        Holds the current user of the program \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                        Whether a User is, in fact, logged on \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n// import { Router } from '@angular/router';\n\n/**\n * Supports the Carousel Appearence as a Site Intro\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n  /** Holds the current user of the program */\n  currentUser: User;\n  /** Whether a User is, in fact, logged on */\n  session: boolean;\n\n  /**\n   * Creates the Landing Component\n   * @param {UserControllerService} userService - Allows Component to utilize User Functionality\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Initializes the component by retrieving the User\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  //   this.userService.getCurrentUserObservable().subscribe(\n  //   data => {\n  //     this.currentUser = data;\n  //     console.log(this.currentUser)\n  //   }\n  // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Checks to see if there is a session or not\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n        \n      \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n\n\n    \n   -->\n\n    \n        RideForce\n        Looking for a ride? Sign up today to be a driver or a rider\n        Get\n            Started\n        Browse\n        \n          For more information,\n          click here\n        \n      \n\n      \n      RideForce\n      Looking for a ride? Sign up today to be a driver or a rider\n      Get\n          Started\n\n      \n        For more information,\n        click here\n      \n     -->\n\n\n      \n\n          Need a ride? Look no further than RideForce!\n          Use the App to find drivers to carpool in your\n          circle or area!\n\n\n       -->\n    \n      \n      \n        \n\n          Rider\n          If you're looking to carpool to and from work, then RideForce is the app for you. Use\n            the app to find and like drivers who you enjoy riding with.\n        \n        \n\n          Driver\n          Want to give others a ride? Sign up to be a driver to help others find a way and lessen\n            the burden of gas prices.\n        \n        \n\n          Safe\n          Find drivers and riders within your employer's company, circle, or group. Members are\n            give a token that will expire in 2 hours so both riders and drivers are approved by the group\n        \n      \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Previous            Next         -->            RideForce        Looking for a ride? Sign up today to be a driver or a rider        Get            Started        Browse                  For more information,          click here                          RideForce      Looking for a ride? Sign up today to be a driver or a rider      Get          Started              For more information,        click here           -->                Need a ride? Look no further than RideForce!          Use the App to find drivers to carpool in your          circle or area!       -->                                  Rider          If you\\'re looking to carpool to and from work, then RideForce is the app for you. Use            the app to find and like drivers who you enjoy riding with.                          Driver          Want to give others a ride? Sign up to be a driver to help others find a way and lessen            the burden of gas prices.                          Safe          Find drivers and riders within your employer\\'s company, circle, or group. Members are            give a token that will expire in 2 hours so both riders and drivers are approved by the group              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesComponent.html":{"url":"components/LikesComponent.html","title":"component - LikesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likes/likes.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a mobile device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likes\n            \n\n            \n                styleUrls\n                likes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                swipecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:34\n                            \n                        \n\n                \n                    \n                        Hold current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { User } from '../../models/user.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Component that shows User Likes on a mobile device\n */\n@Component({\n    selector: 'app-likes',\n    templateUrl: './likes.component.html',\n    styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    swipecards: SwipecardModel[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(data2);\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n   \n      \n        \n        \n          {{card.user.firstName}}\n          {{card.user.address}}\n          Role: {{card.user.role}}\n          \n            user has a car\n              {{car.id}}\n              Make: {{car.make}}\n              Model: {{car.model}}\n              Year: {{car.year}}\n          \n          {{contact.type}}: {{contact.info}}\n          underthings\n          Like\n        \n      \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{card.user.firstName}}          {{card.user.address}}          Role: {{card.user.role}}                      user has a car              {{car.id}}              Make: {{car.make}}              Model: {{car.model}}              Year: {{car.year}}                    {{contact.type}}: {{contact.info}}          underthings          Like                  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesmatchwebComponent.html":{"url":"components/LikesmatchwebComponent.html","title":"component - LikesmatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesmatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likesmatchweb/likesmatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a desktop device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likesmatchweb\n            \n\n            \n                styleUrls\n                likesmatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likesmatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                likecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:57\n                            \n                        \n\n                \n                    \n                        Hold the current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        likecards:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n    \n        \n  Your Likes\n  \n    \n      \n        \n          \n            \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n               {{user.user.email}} \n              Like\n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd | date}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your Likes                                                                                {{user.user.firstName}} {{user.user.lastName}}               {{user.user.email}}               Like                                                          {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd | date}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesmatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/location.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a specific location on Earth \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the North/West value of the location \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The East/West value of the location \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n    /** the North/West value of the location */\n    latitude: number;\n    /** The East/West value of the location */\n    longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Responsible for providing a user the ability to log in\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                userEmail\n                            \n                            \n                                userPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Sets up the Login compoennt with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides the ability to authenticate the user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the ability to navigate to landing if user is already logged on\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(Unused) Provides cUser Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Gets the parameters from the login fields.\nIf the login fails, displays the error message sent by the server under the password field.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checking to see if there is a current user, and if there is, redirects to landing.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        The User to log on to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        The \"username\" of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        The password associated with the indended account\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Responsible for providing a user the ability to log in\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * The \"username\" of the user\n   */\n  userEmail: string;\n\n  /**\n   * The password associated with the indended account\n   */\n  userPass: string;\n\n  /**\n   * The User to log on to\n   */\n  currentUser: User;\n\n  /**\n   * Sets up the Login compoennt with dependency injection\n   * @param { AuthService} authService - Provides the ability to authenticate the user\n   * @param {Router} route - provides the ability to navigate to landing if user is already logged on\n   * @param {UserControllerService} userService - (Unused) Provides cUser Functionality\n   */\n  constructor(private authService: AuthService, private route: Router, private userService: UserControllerService) { }\n\n  /**\n   * Checking to see if there is a current user, and if there is, redirects to landing.\n   */\n  ngOnInit() {\n      if (sessionStorage.length > 0){\n        this.route.navigate(['/landing']);\n      }\n    }\n\n\n  // getUser(email: string) {\n  //   let user;\n  //   return this.userService.getUserByEmail(email).subscribe();\n  // }\n\n  /**\n   * Gets the parameters from the login fields.\n   * If the login fails, displays the error message sent by the server under the password field.\n   */\n  login() {\n    this.authService.authenticate(this.userEmail, this.userPass);\n  }\n}\n\n    \n\n    \n         -->\n\n\n  \n    \n    \n     Sign In \n    Sign Up \n   -->\n    \n    \n\n       \n       -->\n    \n\n    \n    \n    \n      \n      \n      Default Message\n      \n    \n  \n\n    \n    \n      Register\n      |\n      Forgot Password? \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->               Sign In     Sign Up    -->                      -->                                  Default Message                          Register      |      Forgot Password?       '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsControllerService.html":{"url":"injectables/MapsControllerService.html","title":"injectable - MapsControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/maps-controller.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables Components to work with the Mapping Service on the backend\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistance\n                            \n                            \n                                    Public\n                                getRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/maps-controller.service.ts:12\n                            \n                        \n\n                \n                    \n                            Sets up the mapping service to interact with the server\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the Means of communicating with the Server\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistance(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Sends address as string to location endpoint in Map Service. Map Service returns geographic location\nin latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nLocation info with latitude and longitude information\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoute(start: string, end: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Takes in 2 addresses and calculates the distance and travel time between them\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe Route info generated by the system\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { LatLngLiteral } from '@agm/core';\nimport { RouteInfo } from '../../models/route-info.model';\n\n/**\n * Enables Components to work with the Mapping Service on the backend\n */\n@Injectable()\nexport class MapsControllerService {\n\n  /**\n   * Sets up the mapping service to interact with the server\n   * @param {HttpClient} http - provides the Means of communicating with the Server\n   */\n public constructor(private http: HttpClient) { }\n\n  /**\n  * Sends address as string to location endpoint in Map Service. Map Service returns geographic location\n  * in latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n  * @returns {Observable} - Location info with latitude and longitude information\n  */\n  getDistance(address: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/location', {\n      params: { address },\n    });\n  }\n\n  /**\n   * Takes in 2 addresses and calculates the distance and travel time between them\n   * @param start string address\n   * @param end string address\n   * @returns {Observable} - the Route info generated by the system\n   */\n  public getRoute(start: string, end: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/route', {\n      params: { start, end },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/marker.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an object that could appear on a map \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        placeId\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The address the marker represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can it move around \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any Identifier a User might use \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the actual location on the map \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeId\n                                    \n                                \n                                \n                                    \n                                        placeId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra identification for the marker \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Does it represent any specific user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Marker {\n    /** the actual location on the map */\n    location: google.maps.LatLngLiteral;\n    /** The address the marker represents */\n    address?: string;\n    /** Any Identifier a User might use */\n    label?: string;\n    /** Does it represent any specific user */\n    userId?: number;\n    /** Can it move around */\n    draggable?: boolean;\n    /** Extra identification for the marker */\n    placeId?: string;\n    // icon?: string;\n    // infoWindow?: boolean;\n    // comments?: string[];\n    // saved?: boolean;\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchingControllerService.html":{"url":"injectables/MatchingControllerService.html","title":"injectable - MatchingControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchingControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/matching-controller.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages User's interactions with other users on Rideshare\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dislikeDriver\n                            \n                            \n                                getDislikedDrivers\n                            \n                            \n                                getFilteredDrivers\n                            \n                            \n                                getFromLink\n                            \n                            \n                                getLikedDrivers\n                            \n                            \n                                getMatchingDrivers\n                            \n                            \n                                likeDriver\n                            \n                            \n                                unDislikeDriver\n                            \n                            \n                                unlikeDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/matching-controller.service.ts:13\n                            \n                        \n\n                \n                    \n                            Sets up the Service with an HTTPClient injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the means of interacting with the HTTP servier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \ndislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:108\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id unliked the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver to affect\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDislikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDislikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Returns all users disliked by the user with the given ID\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe list of drivers the user disliked\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilteredDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFilteredDrivers(riderId: number, filter: Filter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns Users who have passed the given filter and resemble the User enough to be returned\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Filter\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe specific filters to add to the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \nthe list of Users that pass the filter specifications\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromLink(uri: Link)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            will deserialize the link object. returns the object reference from the link\na link is a reference to the object without having to fetch the object from the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    Link\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe mapping to a specific user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nanthing that might be returned\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns all users liked by the user with the given ID.\nReturns this as an array of strings in the format\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of Users the User 'liked'\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Returns all drivers who match the rider with the given user ID.\n\"/users/{userid}\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe id of the rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe list of drivers that \"match\" the user\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id likes the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver the rider now likes\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unDislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunDislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id disliked the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver to affect\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:88\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id likes the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver the rider now dislikes\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Link } from '../../models/link.model';\nimport { Filter } from '../../models/filter';\n\n/**\n * Manages User's interactions with other users on Rideshare\n */\n@Injectable()\nexport class MatchingControllerService {\n\n  /**\n   * Sets up the Service with an HTTPClient injection\n   * @param http - provides the means of interacting with the HTTP servier\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * will deserialize the link object. returns the object reference from the link\n   * a link is a reference to the object without having to fetch the object from the database\n   * @param {Link} uri - the mapping to a specific user\n   * @returns {Observable} - anthing that might be returned\n   */\n  getFromLink(uri: Link): Observable {\n    return this.http.get(environment.apiUrl + uri);\n  }\n  /**\n   * Returns all drivers who match the rider with the given user ID.\n   * \"/users/{userid}\"\n   *\n   * @param {number} riderId - the id of the rider making the request\n   * @returns {Observable[]>} - the list of drivers that \"match\" the user\n   */\n  getMatchingDrivers(riderId: number): Observable[]> {\n\n    return this.http.get[]>(environment.apiUrl + `/matches/${riderId}`);\n  }\n\n  /**\n   * Returns Users who have passed the given filter and resemble the User enough to be returned\n   * @param riderId - the rider making the request\n   * @param filter - the specific filters to add to the request\n   * @returns {Promise} - the list of Users that pass the filter specifications\n   */\n  getFilteredDrivers(riderId: number, filter: Filter): Promise {\n    const body = {\n      filter,\n      riderId\n    };\n    return this.http.post(environment.apiUrl + `matches/filtered`, body).toPromise();\n  }\n\n  /**\n   * Returns all users liked by the user with the given ID.\n   * Returns this as an array of strings in the format\n   *\n   * @param {number} riderId - the rider making the request\n   * @returns {Observable[]>} - list of Users the User 'liked'\n   */\n  getLikedDrivers(riderId: number): Observable[]> {\n    console.log(environment.apiUrl + `/matches/likes/${riderId}`);\n    return this.http.get[]>(environment.apiUrl + `/matches/likes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id likes the user with ID :liked.\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver the rider now likes\n   * @returns {Observable} - Does not actually return anything\n   */\n  likeDriver(riderId: number, driverId: number): Observable {\n\n    return this.http.put[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`, '');\n\n  }\n\n  /**\n   * Removes any indication that the user with ID :id likes the user with ID :liked\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver the rider now dislikes\n   * @returns {Observable} - Does not actually return anything\n   */\n  unlikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`);\n  }\n\n  /**\n   * Returns all users disliked by the user with the given ID\n   * @param {number} riderId - the rider making the request\n   * @returns {Observable[]>} - the list of drivers the user disliked\n   */\n  getDislikedDrivers(riderId: number): Observable[]> {\n    return this.http.get[]>(environment.apiUrl + `/matches/dislikes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id unliked the user with ID :liked.\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver to affect\n   * @returns {Observable} - Does not actually return anything\n   */\n  dislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.put[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`, '');\n  }\n\n  /**\n   *  Removes any indication that the user with ID :id disliked the user with ID :liked\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver to affect\n   * @returns {Observable} - Does not actually return anything\n   */\n  unDislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Hosts the Component that allows users to navigate between components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the component with relevent services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows User Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(unused, should be used by Login component) Enables component to authenticate user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Sets up the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Allows User to log out of their session\nuses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Sets up the Log in Session appearence\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Updates the status of our session ( is the user currently logged on?)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the current user of the app \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     \n\n                    \n                \n                    \n                        \n                            Default value : sessionStorage.length > 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether the User is logged on or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n/**\n * Hosts the Component that allows users to navigate between components\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  /** Holds the current user of the app */\n  currentUser: User;\n  /**\n   * Whether the User is logged on or not\n   */\n  session = sessionStorage.length > 0;\n\n  /**\n   * Sets up the component with relevent services\n   * @param {UserControllerService} userService - allows User Services to be utilized\n   * @param {AuthService} authService - (unused, should be used by Login component) Enables component to authenticate user\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private userService: UserControllerService,\n    private authService: AuthService,\n    private route: Router) { }\n\n  /**\n   * Sets up the Log in Session appearence\n   */\n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Updates the status of our session ( is the user currently logged on?)\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n  /**\n   * Sets up the current user\n   */\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  }\n  // checkIfLoggedIn(){\n  //   if(this.userService.isLoggedIn){\n  //     this.isLoggedIn = true;\n  //   } \n  //   else if(!this.userService.isLoggedIn) {\n  //     this.isLoggedIn = false;\n  //   }\n  // }\n\n  // getCurrentUser(){\n  //   this.userService.getCurrentUser().subscribe(\n  //     data => {\n  //       this.currentUser = data;\n  //     }\n  //   )\n  // }\n\n  /**\n   * Allows User to log out of their session\n   * uses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n   */\n  async logout() {\n    sessionStorage.clear();\n    if (this.route.url === \"/landing\") {\n      location.reload(true);\n    } else {\n      await this.route.navigate([\"/landing\"]);\n      location.reload(true);\n    }\n  }\n}\n\n    \n\n    \n        \n   -->\n    \n     -->\n    \n      \n    \n    \n        \n          \n        \n        \n          About\n          User Settings\n        \n      \n    \n      \n        Home(current)\n        Login\n        Get Key\n        Map\n        Browse\n        Favorites\n        Car\n        Logout\n      \n  \n  \n      \n        \n      \n      \n      \n        About\n        User Settings\n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->         -->                                                              About          User Settings                                Home(current)        Login        Get Key        Map        Browse        Favorites        Car        Logout                                                  About        User Settings          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Office.html":{"url":"interfaces/Office.html","title":"interface - Office","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Office\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/office.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents Offices a User might hold \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Where the office is located \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the office in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The common name of the office (e.g. \"Reston\").\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Office {\n\n  /**\n   * The ID of the office in the database.\n   */\n  id: number;\n  /**\n   * The common name of the office (e.g. \"Reston\").\n   */\n  name: string;\n  /** Where the office is located */\n  address: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlacesAutocompleteDirective.html":{"url":"directives/PlacesAutocompleteDirective.html","title":"directive - PlacesAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlacesAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlacesAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedAddress\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressSelect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, mapsAPILoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressSelect\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormattedAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormattedAddress(place: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        place\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     HTMLInputElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\n@Directive({\n  selector: '[appPlacesAutocomplete]'\n})\nexport class PlacesAutocompleteDirective implements OnInit {\n\n  private element: HTMLInputElement;\n\n  @Output()\n  addressSelect: EventEmitter = new EventEmitter();\n\n  constructor(private elRef: ElementRef, private mapsAPILoader: MapsAPILoader) {\n    this.element = elRef.nativeElement;\n  }\n\n  getFormattedAddress(place) {\n    const location_obj = {};\n    return place;\n  }\n\n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.element);\n      autocomplete.addListener('place_changed', () => {\n        this.addressSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the object the Account Info component would use when creating a new user in the system \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    THe password of the new user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The long token granted by an administrator (or trainer) to allow new User registration \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User name of the new user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n  /** The User name of the new user */\n  username: string;\n  /** THe password of the new user */\n  password: string;\n  /** The long token granted by an administrator (or trainer) to allow new User registration */\n  token: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RideswipeComponent.html":{"url":"components/RideswipeComponent.html","title":"component - RideswipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RideswipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rideswipe/rideswipe.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rideswipe\n            \n\n            \n                styleUrls\n                rideswipe.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rideswipe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rideswipe',\n  templateUrl: './rideswipe.component.html',\n  styleUrls: ['./rideswipe.component.css']\n})\nexport class RideswipeComponent implements OnInit {\n\n  public mobile = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'RideswipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"interfaces/RouteInfo.html","title":"interface - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Provides the barebones information about a given route \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route distance, in meters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route time, in seconds.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteInfo {\n    /**\n * The total route distance, in meters.\n */\n    distance: number;\n    /**\n     * The total route time, in seconds.\n     */\n    duration: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwipecardModel.html":{"url":"classes/SwipecardModel.html","title":"class - SwipecardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwipecardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/swipecard.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a User object that could be hidden in an HTML list \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:6\n                            \n                        \n\n                \n                    \n                        The Given User \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:8\n                            \n                        \n\n                \n                    \n                        Is is visible or hidden? \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\n\n/** Represents a User object that could be hidden in an HTML list */\nexport class SwipecardModel {\n    /** The Given User */\n    user: User;\n    /** Is is visible or hidden? */\n    visible = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorage.html":{"url":"injectables/TokenStorage.html","title":"injectable - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/token.storage.ts\n        \n\n            \n                Description\n            \n            \n                Provides basic methods for accessing the session token \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:28\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current authentication token being used\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nthe authentication token of the current session\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:20\n                            \n                        \n\n\n                \n                    \n                            Saves the provided authentication token to the session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe authentication token to save\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/** Used to access the Authentication token in our session storage */\nconst TOKEN_KEY = 'authToken';\n\n/** Provides basic methods for accessing the session token */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorage {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * Saves the provided authentication token to the session\n   * @param {string} token - the authentication token to save\n   */\n  public saveToken(token: string) {\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  /**\n   * Retrieves the current authentication token being used\n   * @returns {string} - the authentication token of the current session\n   */\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FOLDER\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getS3Bucket\n                            \n                            \n                                uploadfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                            Basic set up of the Service - it uses no dependency injection\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3Bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetS3Bucket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe S3 representation to utillize\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadfile(file: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Attempts to actually upload a file to the S3 Service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe file to upload to the S3 service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe url used for the file\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOLDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FOLDER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rydeforce-s3/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:13\n                            \n                        \n\n                \n                    \n                        The Root folder name used by this system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                        Holds the url where the image will be stored\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as S3 from 'aws-sdk/clients/s3';\n\n/**\n * Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  /** The Root folder name used by this system */\n  FOLDER = 'rydeforce-s3/';\n  /** Holds the url where the image will be stored*/\n  url: any;\n\n  /**\n   * Basic set up of the Service - it uses no dependency injection\n   */\n  constructor() { }\n\n  /**\n   * Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n   * @returns {S3} - the S3 representation to utillize\n   */\n  getS3Bucket(): any {\n    const bucket = new S3 (\n    {\n    accessKeyId: 'AKIAIRZG4TK6EBLZV7GA',\n    secretAccessKey: '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',\n    region: 'us-east-1'\n    }\n    );\n    return bucket;\n  }\n\n  /**\n   * Attempts to actually upload a file to the S3 Service\n   * @param file - the file to upload to the S3 service\n   * @returns {string} - the url used for the file\n   */\n  uploadfile(file) {\n   const params = {\n      Bucket: 'rydeforce',\n      Key: this.FOLDER + Math.floor(Math.random() * 100000000000) + file.name ,\n      Body: file\n       // allow that and instead assign numbers on the beginning of the name.\n    };\n\n    const upResult = this.getS3Bucket().upload(params, function (err, data) {\n      if (err) {\n        console.log('There was an error uploading your file: ', err);\n        return false;\n      }\n      console.log('Successfully uploaded file.', data);\n      console.log(params);\n\n      return true;\n    });\n    if (!upResult.failed) {\n      console.log('upload successful');\n      this.url = 'https://s3.us-east-1.amazonaws.com/' + params.Bucket + '/' + params.Key;\n    } else {\n      console.log('upload failed');\n    }\n\n    console.log('BEFORE RETURNING, this.url is: ' + this.url);\n    return this.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        address\n                                \n                                \n                                        batchEnd\n                                \n                                \n                                        bio\n                                \n                                \n                                        cars\n                                \n                                \n                                        contactInfo\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        office\n                                \n                                \n                                        password\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        role\n                                \n                                \n                                            Optional\n                                        venmo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user's account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's home address (where they currently live).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchEnd\n                                    \n                                \n                                \n                                    \n                                        batchEnd:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's about me that has a character limit of 255\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cars\n                                    \n                                \n                                \n                                    \n                                        cars:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of cars the User might own (holds the URL mapping to those cars) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactInfo\n                                    \n                                \n                                \n                                    \n                                        contactInfo:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's contact information.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        office\n                                    \n                                \n                                \n                                    \n                                        office:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's office (where they work).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL to the user's profile photo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's role, determining what permissions they have to access data on\nthe server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venmo\n                                    \n                                \n                                \n                                    \n                                        venmo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user's Venmo username.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from './link.model';\nimport { Office } from './office.model';\nimport { Car } from './car.model';\nimport { ContactInfo } from './contact-info.model';\nimport { Role } from './role.model';\n\nexport interface User {\n  /**\n   * The ID of the user in the database.\n   */\n  id: number;\n  /** The first name of a user */\n  firstName: string;\n  /** The last name of a user */\n  lastName: string;\n  /** The username of a user */\n  email: string;\n  /**\n   * The URL to the user's profile photo.\n   */\n  password: string;\n  photoUrl: string;\n  /**\n   * The user's home address (where they currently live).\n   */\n  address: string;\n  /**\n   * The user's office (where they work).\n   */\n  office: Link;\n  /**\n   * The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n   */\n  batchEnd: any;\n  /**\n   *  The user's about me that has a character limit of 255\n   */\n  bio: string;\n  /** List of cars the User might own (holds the URL mapping to those cars) */\n  cars: Link[];\n  /**\n   * The user's Venmo username.\n   */\n  venmo?: string;\n  /**\n   * The user's contact information.\n   */\n  contactInfo: Link[];\n  /**\n   * Whether the user's account is active.\n   */\n  active: boolean;\n  /**\n   * The user's role, determining what permissions they have to access data on\n   * the server.\n   */\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard.html":{"url":"interfaces/UserCard.html","title":"interface - UserCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/likesmatchweb/likesmatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Used as a more complex data structure for holding info on liked users\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    (Unknown) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status of the User \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Driver that they like \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard-1.html":{"url":"interfaces/UserCard-1.html","title":"interface - UserCard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/usermatchweb/usermatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents the User selection item in the html page \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the given user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to profile picture of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User being represented \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Filter } from '../../models/filter';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                },\n                e => {\n                   console.log('error getting match user!');\n                   console.log(e);\n                }\n              );\n            }\n          },\n          e => {\n            console.log('error getting match Drivers!');\n            console.log(e);\n          }\n        );\n      },\n      e => {\n        console.log('error getting user (matching service)!');\n        console.log(e);\n     }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n  filter() {\n    for(var i = 0; i \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsercardComponent.html":{"url":"components/UsercardComponent.html","title":"component - UsercardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsercardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usercard/usercard.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a mobile view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usercard\n            \n\n            \n                styleUrls\n                usercard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usercard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animState\n                            \n                            \n                                animThumbState\n                            \n                            \n                                currentIndex\n                            \n                            \n                                currentSwipeCard\n                            \n                            \n                                currentUser\n                            \n                            \n                                SWIPE_ACTION\n                            \n                            \n                                swipeCardBio\n                            \n                            \n                                swipeCardMain\n                            \n                            \n                                swipecards\n                            \n                            \n                                thumbImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                swipe\n                            \n                            \n                                swiped\n                            \n                            \n                                thumbAnimDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideImage(hide: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Hides the card picture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hide\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipe\n                            \n                            \n                        \n                    \n                \n                \n                    \nswipe(action: , user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            action triggered when user swipes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.SWIPE_ACTION.RIGHT\n                                                        \n\n                                                \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swiped\n                            \n                            \n                        \n                    \n                \n                \n                    \nswiped()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Called when the swipe animation has completed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbAnimDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nthumbAnimDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Called when the Thumb Animation is done\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:49\n                            \n                        \n\n                \n                    \n                        Keeps track of the Animation state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animThumbState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animThumbState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'one'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:51\n                            \n                        \n\n                \n                    \n                        Keeps track of the Thumb animation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:47\n                            \n                        \n\n                \n                    \n                        Index of the Current User being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSwipeCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSwipeCard:     SwipecardModel\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:45\n                            \n                        \n\n                \n                    \n                        User currently being looked at \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:68\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWIPE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SWIPE_ACTION:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { LEFT: 'swipeleft', RIGHT: 'swiperight' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:37\n                            \n                        \n\n                \n                    \n                        constant for swipe action: left or right \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardBio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardBio:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeBio' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardMain:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:56\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeMain' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:39\n                            \n                        \n\n                \n                    \n                        our list of swipecards: DUMMY DATA \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icons/thumbsDown.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:53\n                            \n                        \n\n                \n                    \n                        Location of the thumbnail image files \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { AddressModel } from '../../models/address.model';\nimport { Link } from '../../models/link.model';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Allows Views for Other Users in a mobile view\n */\n@Component({\n    selector: 'app-usercard',\n    templateUrl: './usercard.component.html',\n    styleUrls: ['./usercard.component.css'],\n    animations: [\n        trigger('slide', [\n            state('center', style({ transform: 'translateX(0)' })),\n            state('left', style({ transform: 'translateX(-200%)' })),\n            state('right', style({ transform: 'translateX(200%)' })),\n            transition('* => *', animate(100))\n        ]),\n        trigger('pop', [\n            state('one', style({ transform: 'scale(1)', opacity: 0 })),\n            state('two', style({ transform: 'scale(1.2)', opacity: .8 })),\n            transition('one => two', animate(200)),\n            transition('two => one', animate(100))\n        ])\n    ]\n})\nexport class UsercardComponent implements OnInit {\n\n    /** constant for swipe action: left or right */\n    SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n    /** our list of swipecards: DUMMY DATA */\n    swipecards: SwipecardModel[] = [\n\n    ];\n\n\n    /** User currently being looked at */\n    currentSwipeCard: SwipecardModel;\n    /** Index of the Current User being viewed */\n    currentIndex = 0;\n    /** Keeps track of the Animation state */\n    animState = 'center';\n    /** Keeps track of the Thumb animation */\n    animThumbState = 'one';\n    /** Location of the thumbnail image files */\n    thumbImg = 'assets/icons/thumbsDown.png';\n\n    /** Represents the div element 'swipeMain' */\n    @ViewChild('swipeMain') swipeCardMain: ElementRef;\n    /** Represents the div element 'swipeBio' */\n    @ViewChild('swipeBio') swipeCardBio: ElementRef;\n\n    /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /** Holds the current user of the system */\n    currentUser: User;\n\n    /**\n     * Sets up the component by populating the list of possibel matches for the current user\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('data');\n                this.currentUser = data;\n                console.log(this.currentUser);\n                let userLinks: Link[] = null;\n                this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        // console.log(\"data2 is \" + data2);\n                        userLinks = data2;\n                        console.log(userLinks);\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        console.log(data3.photoUrl);\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                    // Sets the current swipe card to the first element of the array if the array has something in it.\n                                    if (this.swipecards.length > 0) {\n                                        this.currentSwipeCard = this.swipecards[0];\n                                    }\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        );\n\n\n\n    }\n\n    /**\n     * Hides the card picture\n     *\n     * @param hide\n     */\n    hideImage(hide: boolean) {\n        if (hide) {\n            this.swipeCardMain.nativeElement.classList.add('hidden');\n        } else {\n            this.swipeCardMain.nativeElement.classList.remove('hidden');\n        }\n    }\n\n    /**\n     *  action triggered when user swipes\n     */\n     swipe(action = this.SWIPE_ACTION.RIGHT, user) {\n        this.animThumbState = 'two';\n        // swipe right, next avatar\n        if (action === this.SWIPE_ACTION.RIGHT) {\n            this.animState = 'right';\n            this.thumbImg = 'assets/icons/thumbsUp.png';\n            this.matchService.unDislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.likeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n\n        // swipe left, previous avatar\n        if (action === this.SWIPE_ACTION.LEFT) {\n            this.animState = 'left';\n            this.thumbImg = 'assets/icons/thumbsDown.png';\n            console.log(this.currentUser.id);\n            console.log(this.swipecards[this.currentIndex].user.id);\n            this.matchService.unlikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.dislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n        this.swipecards.splice(this.currentIndex, 1);\n    }\n\n    /**\n     * Called when the swipe animation has completed\n     */\n    swiped() {\n        if (this.animState === 'left') {\n            this.animState = 'center';\n            if (this.currentIndex + 1 > this.swipecards.length - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n        } else if (this.animState === 'right') {\n            this.animState = 'center';\n            if (this.currentIndex - 1 \n    \n\n    \n        \n    \n     0\">\n        \n            \n                \n                \n                     -->\n                    \n                \n\n                \n                    \n                        {{currentSwipeCard.user.firstName}} \n                    \n                    Address: {{currentSwipeCard.user.address}}\n                    Email: {{currentSwipeCard.user.email}}\n                    \n                    see comment\n                \n                \n                \n                \n                \n                \n            \n            \n                \n                    \n                        Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}\n                    \n                    {{contact.type}}: {{contact.info}}\n                    \n                        \n                            Car info:\n                            {{car.make}}, {{car.model}}, {{car.year}}\n                        \n                    \n                    \n                    RIDER\n                \n            \n        \n    \n    \n        There's nobody here.\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\">                                                                         -->                                                                                                {{currentSwipeCard.user.firstName}}                                         Address: {{currentSwipeCard.user.address}}                    Email: {{currentSwipeCard.user.email}}                                        see comment                                                                                                                                                                                    Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}                                        {{contact.type}}: {{contact.info}}                                                                        Car info:                            {{car.make}}, {{car.model}}, {{car.year}}                                                                                    RIDER                                                    There\\'s nobody here.    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsercardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsermatchwebComponent.html":{"url":"components/UsermatchwebComponent.html","title":"component - UsermatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsermatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usermatchweb/usermatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a desktop view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usermatchweb\n            \n\n            \n                styleUrls\n                usermatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usermatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                filter\n                            \n                            \n                                flipCard\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usermatchweb/usermatchweb.component.ts:40\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            like\n                            \n                            \n                        \n                    \n                \n                \n                    \nlike(index: number, interest: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Handles verdict a user gives on a potential match\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe user being evaluated\n\n\n                                                        \n                                                \n                                                \n                                                        interest\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe judgment on the viewed user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:50\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Filter } from '../../models/filter';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                },\n                e => {\n                   console.log('error getting match user!');\n                   console.log(e);\n                }\n              );\n            }\n          },\n          e => {\n            console.log('error getting match Drivers!');\n            console.log(e);\n          }\n        );\n      },\n      e => {\n        console.log('error getting user (matching service)!');\n        console.log(e);\n     }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n  filter() {\n    for(var i = 0; i \n    \n\n    \n        \n  \n    \n      Filter \n    \n    \n    \n       Batch End Date \n       Day Start Time \n       Distance \n      Submit\n    \n  \n  Potential Matches \n  \n    \n      \n        \n          \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              \n                X -->\n                \n                \n                \n                O -->\n                 \n\n              \n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter                    Batch End Date        Day Start Time        Distance       Submit        Potential Matches                                                                     {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}                              X -->                                                                O -->                                                                                         {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsermatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewProfileComponent.html":{"url":"components/ViewProfileComponent.html","title":"component - ViewProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/view-profile/view-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Represents the page that allows users to view (and edit) their profile\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-profile\n            \n\n            \n                styleUrls\n                view-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address2\n                            \n                            \n                                batchEnd\n                            \n                            \n                                canEdit\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                currentRole\n                            \n                            \n                                currentUser\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRole\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitChanges\n                            \n                            \n                                switchRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/view-profile/view-profile.component.ts:16\n                            \n                        \n\n                \n                    \n                            Sets up the component with the User Service injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows the component to work with the user service (for updating)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Allows the form to be edited\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Gets the list of offices from the database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Sets up the User's current role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Sets up all users in the system \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Sets up the form with data about the durrent user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Updates the user once he/she is content with the updates\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Enables limited ability to modify the User's role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:44\n                            \n                        \n\n                \n                    \n                        User's active state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        The address of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:35\n                            \n                        \n\n                \n                    \n                        The day the User's batch ends\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canEdit:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:38\n                            \n                        \n\n                \n                    \n                        Whether the user can make changes (Currently not used) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:31\n                            \n                        \n\n                \n                    \n                        The password of the user, used to confirm User knows the password (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:121\n                            \n                        \n\n                \n                    \n                        The current role of the logged on user in string form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:16\n                            \n                        \n\n                \n                    \n                        The User being selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:23\n                            \n                        \n\n                \n                    \n                        The first name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:25\n                            \n                        \n\n                \n                    \n                        The last name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     Office\n\n                    \n                \n                    \n                        \n                            Type :     Office\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:42\n                            \n                        \n\n                \n                    \n                        Current office being examined \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:40\n                            \n                        \n\n                \n                    \n                        List of offices held by the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        The password of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:27\n                            \n                        \n\n                \n                    \n                        The user name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:130\n                            \n                        \n\n                \n                    \n                        Holds the list of all users in the system \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\nimport { Office } from '../../models/office.model';\n\n/**\n * Represents the page that allows users to view (and edit) their profile\n */\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  /** The User being selected */\n  currentUser: User;\n  /**\n   * Sets up the component with the User Service injected\n   * @param userService - Allows the component to work with the user service (for updating)\n   */\n  constructor(private userService: UserControllerService) { }\n  /** The first name of the user (hooked to form item in html) */\n  firstName: string;\n  /** The last name of the user (hooked to form item in html) */\n  lastName: string;\n  /** The user name of the user (hooked to form item in html) */\n  username: string;\n  /** The password of the user (hooked to form item in html) */\n  password: string;\n  /** The password of the user, used to confirm User knows the password (hooked to form item in html) */\n  confirmPassword: string;\n  /** The address of the user (hooked to form item in html) */\n  address2: string;\n  /** The day the User's batch ends*/\n  batchEnd: any;\n\n  /** Whether the user can make changes (Currently not used) */\n  canEdit = false;\n  /** List of offices held by the user */\n  officeObjectArray: Office[] = [];\n  /** Current office being examined */\n  officeObject: Office;\n  /** User's active state */\n  active: string;\n\n   /**\n   * Sets up the form with data about the durrent user\n   */\n  ngOnInit() {\n    this.firstName = sessionStorage.getItem(\"firstName\");\n    this.lastName = sessionStorage.getItem(\"lastName\");\n    this.username = sessionStorage.getItem(\"userEmail\");\n    this.address2 = sessionStorage.getItem(\"address\");\n    this.batchEnd = new Date(sessionStorage.getItem(\"batchEnd\")).toLocaleDateString();\n    this.getOffices();\n    this.getUsers();\n    this.getRole();\n  }\n\n  /**\n   * Allows the form to be edited\n   */\n  edit() {\n    document.getElementById(\"firstName\").removeAttribute(\"disabled\");\n    document.getElementById(\"lastName\").removeAttribute(\"disabled\");\n    document.getElementById(\"email\").removeAttribute(\"disabled\");\n    document.getElementById(\"password\").removeAttribute(\"disabled\");\n    document.getElementById(\"confirmPassword\").removeAttribute(\"disabled\");\n    document.getElementById(\"address\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").removeAttribute(\"disabled\");\n    document.getElementById(\"dayStart\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").setAttribute(\"type\", \"date\");\n    document.getElementById(\"currentOffice\").style.display = \"none\";\n    document.getElementById(\"selectOffice\").style.display = \"inline\";\n    document.getElementById(\"edit\").style.display = \"none\";\n    document.getElementById(\"submit\").style.display = \"inline\";\n    document.getElementById(\"errorMessage\").removeAttribute(\"hidden\");\n  }\n\n  /**\n   * Updates the user once he/she is content with the updates\n   */\n  submitChanges() {\n\n    sessionStorage.setItem('firstName', this.firstName);\n    sessionStorage.setItem('lastName', this.lastName);\n    sessionStorage.setItem('userEmail', this.username);\n    sessionStorage.setItem('address', this.address2);\n    sessionStorage.setItem('batchEnd', this.batchEnd);\n    sessionStorage.setItem('role', this.currentRole);\n    if(document.getElementById(\"activeState\"))\n    this.userService.update().subscribe();\n    window.location.reload(true);\n  }\n\n  /**\n   * Enables limited ability to modify the User's role in the system\n   */\n\n  switchRole() {\n    if (sessionStorage.getItem('role') === 'DRIVER') {\n      sessionStorage.setItem('role', 'RIDER');\n      this.getRole();\n    } else if (sessionStorage.getItem('role') === 'RIDER') {\n      sessionStorage.setItem('role', 'DRIVER');\n      this.getRole();\n    } else {\n      console.log('nope');\n    }\n  }\n\n  /**\n   * Gets the list of offices from the database\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n    });\n  }\n  /** The current role of the logged on user in string form */\n  currentRole: string;\n  /**\n   * Sets up the User's current role in the system\n   */\n  getRole() {\n    this.currentRole = sessionStorage.getItem('role');\n  }\n\n  /** Holds the list of all users in the system */\n  users: any[];\n  /** Sets up all users in the system */\n  getUsers() {\n    let data;\n    this.userService.getAllUsers().subscribe((x) => { data = x; this.users = data });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n              \n              Your Profile:\n              \n              \n                \n                  First Name\n                \n                \n              \n              \n                \n                  First name cannot be empty\n                \n                \n                  ;\n                  First name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Last Name\n                \n                \n              \n              \n                \n                  Last name cannot be empty\n                \n                \n                  ;\n                  Last name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Email\n                \n                \n              \n              \n                \n                  Email cannot be empty\n                \n                \n                  Email cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Password\n                \n                \n              \n              \n                \n                  Password cannot be empty\n                \n                \n                  Password cannot be more than 15 characters\n                \n              \n              \n                \n                  Confirm\n                \n                \n              \n              \n                \n                  Passwords do not match.\n                \n              \n\n\n              \n                \n                  Office Address\n                \n                \n                \n                \n                  \n                    {{office.name}}\n                  \n                \n              \n\n\n              \n                \n                  Address\n                \n                \n              \n              \n                \n                  Address cannot be empty\n                \n              \n\n              \n                \n                  Batch End\n                \n                \n              \n              \n                \n                  Day Start\n                \n                \n              \n              \n                Switch to Rider \n              \n              \n                Switch to Driver \n              \n              \n              \n                \" data-offstyle=\"danger\" data-height=\"100%\" data-off=\"Inactive \" checked>\n              \n              \n              \n                Edit \n              \n              Save Changes \n              \n                \n                  Please fill out ALL fields and confirm your passwords match\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Biography:\n              \n              \n                \n                  About You\n                \n              \n              \n              \n\n              \n                Profile Picture\n                \n              \n              \n                \n                  Contact Info\n                \n                \n                 -->\n                \n                  \n                    \n                  \n                \n              \n\n              \n                \n                  \n                    \n                      {{contact}}\n                    \n                  \n                  \n                  -\n                \n              \n              \n                Previous\n                 Next\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Car Information:\n              \n              \n                \n                  Driver\n                  Rider\n                \n              \n              \n              \n                \n                  \n                    Make\n                  \n                  \n                \n\n                \n                  \n                    Model\n                  \n                  \n                \n\n                \n                  \n                    Year\n                  \n                  \n                \n              \n              \n                Previous\n                 Edit\n              \n              \n                \n                  Please select Driver or Rider\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n            \n            View Users\n            \n              \n                \n                  User ID\n                  User's Name\n                  User Email\n                  User Role\n                   \n                \n              \n              \n                \n                  {{ user.id }}\n                  {{ user.firstName }}&nbsp;{{ user.lastName }}\n                  {{ user.email }}\n                  {{ user.role }}\n                  Make Admin\n                    Make Trainer\n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Your Profile:                                                              First Name                                                                                              First name cannot be empty                                                  ;                  First name cannot be more than 15 characters                                                                              Last Name                                                                                              Last name cannot be empty                                                  ;                  Last name cannot be more than 15 characters                                                                              Email                                                                                              Email cannot be empty                                                  Email cannot be more than 15 characters                                                                              Password                                                                                              Password cannot be empty                                                  Password cannot be more than 15 characters                                                                              Confirm                                                                                              Passwords do not match.                                                                              Office Address                                                                                                      {{office.name}}                                                                                                Address                                                                                              Address cannot be empty                                                                              Batch End                                                                                              Day Start                                                                            Switch to Rider                                             Switch to Driver                                                           \" data-offstyle=\"danger\" data-height=\"100%\" data-off=\"Inactive \" checked>                                                          Edit                             Save Changes                                                 Please fill out ALL fields and confirm your passwords match                                                                                                                                  Biography:                                                              About You                                                                                        Profile Picture                                                                              Contact Info                                                 -->                                                                                                                                                                                                {{contact}}                                                                          -                                                            Previous                 Next                                                                                                                  Car Information:                                                              Driver                  Rider                                                                                                                Make                                                                                                          Model                                                                                                          Year                                                                                                Previous                 Edit                                                              Please select Driver or Rider                                                                                                                              View Users                                                            User ID                  User\\'s Name                  User Email                  User Role                                                                                                 {{ user.id }}                  {{ user.firstName }} {{ user.lastName }}                  {{ user.email }}                  {{ user.role }}                  Make Admin                    Make Trainer                                                                                                      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/accountinfo/accountinfo.component.ts\n            \n            \n                component\n            \n            \n                AccountinfoComponent\n            \n            \n                93 %\n                (56/60)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/car-registration/car-registration.component.ts\n            \n            \n                component\n            \n            \n                CarRegistrationComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            \n                component\n            \n            \n                FavoritesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/how-to/how-to.component.ts\n            \n            \n                component\n            \n            \n                HowToComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/likes/likes.component.ts\n            \n            \n                component\n            \n            \n                LikesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                component\n            \n            \n                LikesmatchwebComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                89 %\n                (43/48)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/rideswipe/rideswipe.component.ts\n            \n            \n                component\n            \n            \n                RideswipeComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/usercard/usercard.component.ts\n            \n            \n                component\n            \n            \n                UsercardComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                component\n            \n            \n                UsermatchwebComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/view-profile/view-profile.component.ts\n            \n            \n                component\n            \n            \n                ViewProfileComponent\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n            \n            \n                directive\n            \n            \n                PlacesAutocompleteDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/address.model.ts\n            \n            \n                class\n            \n            \n                AddressModel\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/api-error.model.ts\n            \n            \n                interface\n            \n            \n                ApiError\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/car.model.ts\n            \n            \n                class\n            \n            \n                Car\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/contact-info.model.ts\n            \n            \n                interface\n            \n            \n                ContactInfo\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/filter.ts\n            \n            \n                class\n            \n            \n                Filter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/location.model.ts\n            \n            \n                interface\n            \n            \n                Location\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/marker.model.ts\n            \n            \n                interface\n            \n            \n                Marker\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/office.model.ts\n            \n            \n                interface\n            \n            \n                Office\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/register.model.ts\n            \n            \n                interface\n            \n            \n                Register\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/route-info.model.ts\n            \n            \n                interface\n            \n            \n                RouteInfo\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/swipecard.model.ts\n            \n            \n                class\n            \n            \n                SwipecardModel\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/services/api/maps-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MapsControllerService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/api/matching-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MatchingControllerService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/services/api/user-controller.service.ts\n            \n            \n                injectable\n            \n            \n                UserControllerService\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                injectable\n            \n            \n                TokenStorage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                variable\n            \n            \n                TOKEN_KEY\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.4\n        \n            @angular/animations : ^6.1.8\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.8\n        \n            @angular/compiler : ^6.1.8\n        \n            @angular/core : ^6.1.8\n        \n            @angular/forms : ^6.1.8\n        \n            @angular/http : ^6.1.8\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.8\n        \n            @angular/platform-browser-dynamic : ^6.1.8\n        \n            @angular/router : ^6.1.8\n        \n            @ng-bootstrap/ng-bootstrap : ^3.2.2\n        \n            aws-sdk : ^2.321.0\n        \n            core-js : ^2.4.1\n        \n            googlemaps : ^1.12.0\n        \n            hammerjs : ^2.0.8\n        \n            ng2-animate-on-scroll : ^1.0.11\n        \n            rxjs : ^6.3.2\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorType   (src/.../api-error.model.ts)\n                        \n                        \n                            ContactInfoType   (src/.../contact-info-type.model.ts)\n                        \n                        \n                            Interest   (src/.../interest.model.ts)\n                        \n                        \n                            Role   (src/.../role.model.ts)\n                        \n                        \n                            State   (src/.../state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/api-error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorType\n                    \n                \n                    \n                        \n                            A specific type of error which can be returned by the API.\n\n                        \n                    \n                        \n                            \n                                 NotLoggedIn\n                            \n                        \n                        \n                            \n                                Value : NOT_LOGGED_IN\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : UNAUTHORIZED\n                            \n                        \n            \n        \n\n    src/app/models/contact-info-type.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactInfoType\n                    \n                \n                    \n                        \n                            Represents the ype of contact information available for a user \n\n                        \n                    \n                        \n                            \n                                 Phone\n                            \n                        \n                        \n                            \n                                Value : PHONE\n                            \n                        \n                        \n                            \n                                 Slack\n                            \n                        \n                        \n                            \n                                Value : SLACK\n                            \n                        \n                        \n                            \n                                 Skype\n                            \n                        \n                        \n                            \n                                Value : SKYPE\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/models/interest.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                    \n                        \n                            Holds the Interest type \n\n                        \n                    \n                        \n                            \n                                 like\n                            \n                        \n                        \n                            \n                                Value : LIKE\n                            \n                        \n                        \n                            \n                                 dislike\n                            \n                        \n                        \n                            \n                                Value : DISLIKE\n                            \n                        \n                        \n                            \n                                 thrash\n                            \n                        \n                        \n                            \n                                Value : TRASH\n                            \n                        \n            \n        \n\n    src/app/models/role.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                    \n                        \n                            Represents the type of user in the system \n\n                        \n                    \n                        \n                            \n                                 Driver\n                            \n                        \n                        \n                            \n                                Value : DRIVER\n                            \n                        \n                        \n                            \n                                 Rider\n                            \n                        \n                        \n                            \n                                Value : RIDER\n                            \n                        \n                        \n                            \n                                 Trainer\n                            \n                        \n                        \n                            \n                                Value : TRAINER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/models/state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                    \n                        \n                            Represents a State in the United States (Plus DC and Puerto Rico) \n\n                        \n                    \n                        \n                            \n                                 Alabama\n                            \n                        \n                        \n                            \n                                Value : AL\n                            \n                        \n                        \n                            \n                                 Alaska\n                            \n                        \n                        \n                            \n                                Value : AK\n                            \n                        \n                        \n                            \n                                 Arkansas\n                            \n                        \n                        \n                            \n                                Value : AR\n                            \n                        \n                        \n                            \n                                 Arizona\n                            \n                        \n                        \n                            \n                                Value : AZ\n                            \n                        \n                        \n                            \n                                 California\n                            \n                        \n                        \n                            \n                                Value : CA\n                            \n                        \n                        \n                            \n                                 Colorado\n                            \n                        \n                        \n                            \n                                Value : CO\n                            \n                        \n                        \n                            \n                                 Connecticut\n                            \n                        \n                        \n                            \n                                Value : CT\n                            \n                        \n                        \n                            \n                                 Delaware\n                            \n                        \n                        \n                            \n                                Value : DE\n                            \n                        \n                        \n                            \n                                 DistrictOfColumbia\n                            \n                        \n                        \n                            \n                                Value : DC\n                            \n                        \n                        \n                            \n                                 Florida\n                            \n                        \n                        \n                            \n                                Value : FL\n                            \n                        \n                        \n                            \n                                 Georgia\n                            \n                        \n                        \n                            \n                                Value : GA\n                            \n                        \n                        \n                            \n                                 Hawaii\n                            \n                        \n                        \n                            \n                                Value : HI\n                            \n                        \n                        \n                            \n                                 Idaho\n                            \n                        \n                        \n                            \n                                Value : ID\n                            \n                        \n                        \n                            \n                                 Illinois\n                            \n                        \n                        \n                            \n                                Value : IL\n                            \n                        \n                        \n                            \n                                 Indiana\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 Iowa\n                            \n                        \n                        \n                            \n                                Value : IA\n                            \n                        \n                        \n                            \n                                 Kansas\n                            \n                        \n                        \n                            \n                                Value : KS\n                            \n                        \n                        \n                            \n                                 Kentucky\n                            \n                        \n                        \n                            \n                                Value : KY\n                            \n                        \n                        \n                            \n                                 Louisiana\n                            \n                        \n                        \n                            \n                                Value : LA\n                            \n                        \n                        \n                            \n                                 Maine\n                            \n                        \n                        \n                            \n                                Value : ME\n                            \n                        \n                        \n                            \n                                 Maryland\n                            \n                        \n                        \n                            \n                                Value : MD\n                            \n                        \n                        \n                            \n                                 Massachusetts\n                            \n                        \n                        \n                            \n                                Value : MA\n                            \n                        \n                        \n                            \n                                 Michigan\n                            \n                        \n                        \n                            \n                                Value : MI\n                            \n                        \n                        \n                            \n                                 Minnesota\n                            \n                        \n                        \n                            \n                                Value : MN\n                            \n                        \n                        \n                            \n                                 Mississippi\n                            \n                        \n                        \n                            \n                                Value : MS\n                            \n                        \n                        \n                            \n                                 Missouri\n                            \n                        \n                        \n                            \n                                Value : MO\n                            \n                        \n                        \n                            \n                                 Montana\n                            \n                        \n                        \n                            \n                                Value : MT\n                            \n                        \n                        \n                            \n                                 Nebraska\n                            \n                        \n                        \n                            \n                                Value : NE\n                            \n                        \n                        \n                            \n                                 Nevada\n                            \n                        \n                        \n                            \n                                Value : NV\n                            \n                        \n                        \n                            \n                                 NewHampshire\n                            \n                        \n                        \n                            \n                                Value : NH\n                            \n                        \n                        \n                            \n                                 NewJersey\n                            \n                        \n                        \n                            \n                                Value : NJ\n                            \n                        \n                        \n                            \n                                 NewMexico\n                            \n                        \n                        \n                            \n                                Value : NM\n                            \n                        \n                        \n                            \n                                 NewYork\n                            \n                        \n                        \n                            \n                                Value : NY\n                            \n                        \n                        \n                            \n                                 NorthCarolina\n                            \n                        \n                        \n                            \n                                Value : NC\n                            \n                        \n                        \n                            \n                                 NorthDakota\n                            \n                        \n                        \n                            \n                                Value : ND\n                            \n                        \n                        \n                            \n                                 Ohio\n                            \n                        \n                        \n                            \n                                Value : OH\n                            \n                        \n                        \n                            \n                                 Oklahoma\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 Oregon\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n                        \n                            \n                                 Pennsylvania\n                            \n                        \n                        \n                            \n                                Value : PA\n                            \n                        \n                        \n                            \n                                 PuertoRico\n                            \n                        \n                        \n                            \n                                Value : PR\n                            \n                        \n                        \n                            \n                                 RhodeIsland\n                            \n                        \n                        \n                            \n                                Value : RI\n                            \n                        \n                        \n                            \n                                 SouthCarolina\n                            \n                        \n                        \n                            \n                                Value : SC\n                            \n                        \n                        \n                            \n                                 SouthDakota\n                            \n                        \n                        \n                            \n                                Value : SD\n                            \n                        \n                        \n                            \n                                 Tennessee\n                            \n                        \n                        \n                            \n                                Value : TN\n                            \n                        \n                        \n                            \n                                 Texas\n                            \n                        \n                        \n                            \n                                Value : TX\n                            \n                        \n                        \n                            \n                                 Utah\n                            \n                        \n                        \n                            \n                                Value : UT\n                            \n                        \n                        \n                            \n                                 Vermont\n                            \n                        \n                        \n                            \n                                Value : VT\n                            \n                        \n                        \n                            \n                                 Virginia\n                            \n                        \n                        \n                            \n                                Value : VA\n                            \n                        \n                        \n                            \n                                 Washington\n                            \n                        \n                        \n                            \n                                Value : WA\n                            \n                        \n                        \n                            \n                                 WestVirginia\n                            \n                        \n                        \n                            \n                                Value : WV\n                            \n                        \n                        \n                            \n                                 Wisconsin\n                            \n                        \n                        \n                            \n                                Value : WI\n                            \n                        \n                        \n                            \n                                 Wyoming\n                            \n                        \n                        \n                            \n                                Value : WY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRideshareClient\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nInformation for developers\nGit directions\nHere is an overview of the steps you need to take in order to make a\nsuccessful change to the repo. If you do not follow all these steps, there\nmay be problems!\ngit checkout -b your-branch # Omit the '-b' if the branch already exists.\n# Make changes to branch...\ngit add .  # Assuming you are in the root directory.\ngit commit -m 'Descriptive commit message'\ngit push -u origin your-branch # You can use just 'git push' if you've already pushed.Before you make a pull request, it's a good idea to merge any new changes\nfrom the dev branch, especially if you've spent a decent amount of time on\nyour changes (making it more likely that the dev branch has changed). This is\nthe best way to detect merge conflicts early.\n# To merge any new changes from the dev branch:\ngit checkout dev\ngit pull\ngit checkout your-branch\ngit merge devIf you get any merge conflicts, resolve them and then make a new commit (git add . && git commit -m 'Descriptive commit message).\nOnce you've pushed your branch, make a pull request on GitHub and make sure\nthat your PR is based off the dev branch and not master!\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Link   (src/.../link.model.ts)\n                        \n                        \n                            Overwrite   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/link.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Link\n                    \n                \n                    \n                        \n                            Enables the use of Strings as URL mappings to an actual resource in the backend \n\n                        \n                    \n                \n                    \n                        Link:     string\n\n                    \n                \n            \n        \n\n    src/app/utils/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Overwrite\n                    \n                \n                    \n                        \n                            Overwrite certain properties of a type, while keeping others. Thanks to\nhttps://stackoverflow.com/a/46941824!\n\n                        \n                    \n                \n                    \n                        Overwrite:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token.storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n  // apiUrl: 'http://10.0.0.14:2222'\n  //apiUrl: 'http://e5a3040f.ngrok.io/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/token.storage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n                \n                    \n                        Used to access the Authentication token in our session storage \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
