var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AccessGuard.html",[0,2.724,1,3.068]],["body/guards/AccessGuard.html",[0,3.406,1,4.851,2,0.239,3,0.239,4,0.208,5,4.492,6,0.239,7,1.155,8,6.746,9,0.967,10,2.613,11,1.958,12,4.071,13,0.968,14,4.492,15,1.367,16,0.022,17,0.854,18,0.382,19,1.028,20,2.004,21,4.492,22,6.541,23,3.146,24,6.746,25,4.492,26,2.527,27,1.184,28,3.072,29,3.368,30,0.829,31,1.293,32,0.676,33,2.27,34,3.837,35,4.492,36,3.406,37,2.27,38,4.492,39,1.5,40,2.827,41,2.27,42,0.239,43,0.335,44,1.206,45,1.345,46,1.776,47,4.492,48,3.574,49,3.084,50,1.999,51,4.492,52,1.345,53,0.72,54,1.999,55,1.274,56,1.142,57,2.827,58,3.837,59,4.492,60,4.492,61,4.492,62,4.492,63,3.837,64,4.492,65,2.613,66,0.016,67,0.016]],["title/classes/AddressModel.html",[43,0.268,68,2.466]],["body/classes/AddressModel.html",[2,0.237,3,0.237,4,0.207,6,0.237,13,1.173,16,0.021,17,0.851,18,0.462,19,1.024,23,3.476,42,0.237,43,0.421,53,0.715,66,0.016,67,0.016,68,3.882,69,3.812,70,0.671,71,2.317,72,6.206,73,4.462,74,1.986,75,0.797,76,3.263,77,5.575,78,6.525,79,6.879,80,6.879,81,1.332,82,4.462,83,3.059,84,6.525,85,5.653,86,2.129,87,5.653,88,4.462,89,4.83,90,4.462,91,2.678,92,3.289,93,4.462,94,4.462,95,4.462,96,4.83]],["title/components/AdminComponent.html",[97,0.268,98,0.964]],["body/components/AdminComponent.html",[2,0.149,3,0.149,4,0.13,6,0.149,7,0.836,9,0.603,10,1.631,11,1.71,13,1.119,15,0.675,16,0.022,17,0.807,18,0.384,19,0.507,20,1.719,27,0.971,30,0.659,32,0.422,39,0.936,42,0.149,43,0.209,44,1.104,45,0.839,52,1.606,53,1.014,55,1.521,56,1.045,66,0.012,67,0.012,70,0.619,75,0.58,76,1.83,81,1.169,92,3.917,97,0.496,98,1.44,99,0.989,100,0.989,101,0.989,102,2.394,103,2.121,104,3.513,105,4.112,106,4.112,107,3.513,108,1.54,109,0.936,110,2.115,111,1.993,112,2.823,113,1.3,114,4.112,115,1.3,116,4.112,117,4.068,118,5.364,119,4.583,120,4.583,121,5.364,122,5.364,123,4.583,124,5.364,125,1.696,126,4.112,127,1.606,128,1.606,129,2.823,130,2.803,131,2.823,132,1.83,133,4.112,134,1.696,135,2.803,136,3.118,137,3.803,138,3.513,139,2.588,140,2.803,141,4.112,142,2.657,143,4.528,144,2.803,145,4.112,146,2.803,147,2.003,148,4.1,149,3.474,150,2.114,151,2.803,152,4.112,153,2.224,154,1.54,155,0.936,156,0.839,157,2.803,158,1.625,159,2.803,160,4.112,161,3.513,162,1.047,163,2.394,164,2.803,165,2.803,166,0.839,167,2.394,168,2.803,169,1.925,170,2.803,171,2.803,172,5.364,173,2.803,174,2.394,175,2.803,176,2.803,177,2.803,178,2.803,179,2.394,180,2.394,181,2.803,182,2.823,183,3.513,184,2.392,185,3.513,186,2.588,187,3.513,188,4.112,189,0.886,190,1.3,191,1.166,192,1.894,193,0.989,194,0.795,195,0.989,196,0.989,197,0.795,198,0.989,199,0.753,200,0.753,201,0.989,202,0.753,203,0.989,204,0.753,205,0.989,206,0.753,207,0.989,208,0.795,209,0.989,210,0.753,211,0.989,212,0.753,213,0.989,214,0.795,215,0.989,216,0.795,217,0.989,218,0.753,219,0.989,220,0.753,221,0.989,222,0.753,223,0.989,224,0.753,225,0.886,226,0.753,227,0.936,228,0.989]],["title/interfaces/ApiError.html",[229,0.731,230,2.466]],["body/interfaces/ApiError.html",[2,0.227,3,0.227,4,0.198,6,0.227,16,0.022,18,0.488,19,0.995,27,1.101,42,0.292,50,1.9,53,0.881,54,2.446,66,0.016,67,0.016,70,0.642,71,1.594,75,0.775,81,1.231,86,1.922,229,1.118,230,3.774,231,3.237,232,3.237,233,4.153,234,6.079,235,3.647,236,4.174,237,3.826,238,5.314,239,4.669,240,3.679,241,5.496,242,6.419,243,3.459,244,5.496,245,4.168,246,4.695,247,2.777,248,4.695,249,5.496,250,5.496,251,3.826,252,2.777,253,5.496,254,3.459,255,4.868,256,3.826,257,4.695,258,4.268,259,3.647,260,3.647,261,3.647,262,3.647,263,4.695]],["title/components/AppComponent.html",[97,0.268,197,1.018]],["body/components/AppComponent.html",[2,0.218,3,0.218,4,0.19,6,0.218,7,1.091,13,1.079,15,0.989,16,0.021,17,0.952,18,0.401,19,0.744,27,0.744,30,0.505,32,0.618,41,2.71,42,0.218,43,0.306,56,1.364,66,0.015,67,0.015,75,0.756,81,1.259,97,0.489,98,1.104,99,1.451,100,1.451,101,1.451,109,1.373,110,2.208,111,2.095,113,1.696,115,1.696,134,1.299,154,1.299,155,1.373,156,1.231,189,1.299,190,1.696,191,1.521,192,2.234,193,1.451,194,1.165,195,1.451,196,1.451,197,1.794,198,1.451,199,1.104,200,1.104,201,1.451,202,1.104,203,1.451,204,1.104,205,1.451,206,1.104,207,1.451,208,1.165,209,1.451,210,1.104,211,1.451,212,1.104,213,1.451,214,1.165,215,1.451,216,1.165,217,1.451,218,1.104,219,1.451,220,1.104,221,1.451,222,1.104,223,1.451,224,1.104,225,1.299,226,1.104,227,1.373,228,1.451,264,3.511,265,5.363,266,5.363,267,5.406,268,3.681,269,6.327,270,5.363,271,5.363,272,4.11,273,3.511,274,4.11,275,4.11,276,4.11,277,4.11]],["title/modules/AppModule.html",[278,1.943,279,2.466]],["body/modules/AppModule.html",[2,0.153,3,0.153,4,0.133,11,1.804,16,0.022,30,0.904,32,0.433,39,1.652,42,0.223,43,0.215,65,2.439,66,0.012,67,0.012,98,1.618,111,0.816,162,1.075,189,0.91,194,1.709,197,1.919,199,1.618,202,1.618,204,1.618,206,1.618,208,1.709,210,1.618,212,1.618,214,1.709,216,1.709,218,1.618,220,1.618,222,1.618,224,1.618,226,1.618,252,2.918,254,3.794,278,2.268,279,5.135,280,1.281,281,3.75,282,4.12,283,2.459,284,2.459,285,2.459,286,2.459,287,2.459,288,3.794,289,3.046,290,4.139,291,3.794,292,2.526,293,3.582,294,2.459,295,1.455,296,2.878,297,4.193,298,3.582,299,1.977,300,4.193,301,2.878,302,3.582,303,4.945,304,4.193,305,2.459,306,4.193,307,4.193,308,2.183,309,2.459,310,2.878,311,2.459,312,2.459,313,2.459,314,2.459,315,2.459,316,1.977,317,2.459,318,2.459,319,2.878,320,4.193,321,2.878,322,1.977,323,2.878,324,2.459,325,2.878,326,2.878,327,2.878,328,2.878,329,2.878,330,1.557,331,2.878,332,3.582,333,1.977,334,2.183,335,4.945,336,1.675,337,2.878,338,2.183,339,2.878,340,2.459,341,2.459,342,2.878,343,2.459,344,1.557,345,2.459,346,2.878,347,2.878,348,2.459,349,2.459,350,1.977,351,2.459,352,2.459,353,1.977,354,2.459,355,3.582,356,2.459,357,2.459,358,2.878,359,2.878,360,2.878,361,2.878,362,2.878,363,2.459,364,4.193,365,4.193]],["title/classes/AppPage.html",[43,0.268,366,2.724]],["body/classes/AppPage.html",[2,0.283,3,0.283,4,0.246,6,0.283,7,1.281,13,1.073,16,0.021,27,1.255,30,0.653,41,2.687,42,0.283,43,0.469,66,0.018,67,0.018,191,1.508,299,3.652,366,4.774,367,4.543,368,6.933,369,6.933,370,5.318,371,5.318,372,4.543,373,5.318,374,5.318,375,5.318]],["title/modules/AppRoutingModule.html",[278,1.943,288,2.261]],["body/modules/AppRoutingModule.html",[2,0.213,3,0.213,4,0.186,16,0.022,26,2.898,30,0.893,32,0.604,33,2.027,42,0.313,43,0.393,66,0.015,67,0.015,97,0.534,98,1.417,112,2.754,127,1.201,191,1.137,194,1.496,199,1.417,200,1.077,202,1.417,204,1.417,206,1.417,212,1.417,214,1.496,218,1.417,220,1.417,224,1.417,278,2.17,281,3.042,288,3.322,302,4.509,311,3.427,312,3.427,313,3.427,314,3.427,315,3.427,316,2.754,317,3.427,318,3.427,324,3.427,340,3.427,341,3.427,348,3.427,349,3.427,350,2.754,351,3.427,352,3.427,353,2.754,354,3.427,376,4.011,377,4.011,378,5.278,379,3.427,380,5.278,381,4.011,382,4.011,383,3.427,384,2.334,385,4.011,386,2.754,387,3.042,388,3.427,389,1.416,390,7.203,391,4.011,392,4.011,393,5.278,394,4.051,395,4.011,396,2.525,397,1.785,398,4.011,399,3.427,400,1.9,401,3.042,402,4.011,403,3.042,404,4.011]],["title/injectables/AuthService.html",[31,0.818,289,1.815]],["body/injectables/AuthService.html",[2,0.15,3,0.15,4,0.131,6,0.15,7,0.841,9,0.89,11,1.715,12,3.334,13,0.918,15,1.177,16,0.022,17,0.736,18,0.329,19,0.885,20,1.9,26,2.396,27,1.12,28,2.912,29,2.646,30,0.808,31,1.114,32,0.425,33,1.427,36,2.141,37,1.427,39,0.943,40,1.777,41,1.427,42,0.15,43,0.21,46,2.128,49,3.697,52,1.792,53,1.122,54,2.664,55,1.798,66,0.012,67,0.012,70,0.81,76,1.84,81,1.221,97,0.308,103,1.634,127,1.612,128,1.238,134,1.307,154,1.702,161,3.532,166,1.937,182,3.358,233,2.405,236,4.247,237,2.602,251,3.768,268,3.994,280,2.396,289,2.089,295,2.089,332,2.412,333,3.934,336,2.405,389,1.459,396,2.602,397,2.177,403,4.082,405,2.412,406,4.987,407,2.845,408,2.141,409,4.072,410,2.824,411,2.839,412,3.532,413,2.405,414,4.134,415,1.733,416,3.135,417,3.607,418,4.134,419,1.84,420,2.602,421,2.839,422,2.602,423,4.134,424,5.383,425,2.824,426,2.839,427,4.134,428,4.442,429,3.135,430,2.602,431,2.824,432,3.532,433,2.405,434,5.383,435,3.532,436,4.134,437,4.134,438,2.824,439,4.599,440,4.134,441,3.532,442,2.824,443,2.141,444,2.412,445,1.777,446,2.141,447,2.824,448,2.824,449,2.824,450,1.84,451,4.134,452,2.824,453,2.824,454,2.824,455,2.824,456,2.824,457,2.824,458,2.824,459,1.427,460,2.824,461,2.824,462,2.141,463,2.824,464,4.134,465,2.824,466,2.824,467,2.824,468,2.824,469,2.412,470,2.824,471,2.412,472,2.824,473,2.824,474,2.824,475,2.412,476,2.824,477,2.412,478,2.824,479,2.412,480,2.824,481,2.412,482,2.412,483,2.412,484,2.412,485,2.824,486,2.141,487,2.824,488,2.824,489,2.412,490,4.134,491,2.824,492,2.824,493,2.824,494,2.824,495,4.891,496,4.134,497,2.824,498,2.141]],["title/classes/Car.html",[43,0.268,200,0.964]],["body/classes/Car.html",[2,0.238,3,0.238,4,0.207,6,0.238,13,1.149,16,0.022,18,0.453,30,0.696,42,0.238,43,0.422,48,3.566,53,1.08,66,0.016,67,0.016,70,0.674,71,2.439,75,0.799,81,1.246,86,2.177,91,3.261,200,1.932,397,2.522,413,3.801,499,3.824,500,4.84,501,2.522,502,4.84,503,4.728,504,6.885,505,4.728,506,4.477,507,3.296,508,4.477,509,5.581,510,5.581,511,4.477,512,2.908,513,4.477,514,3.891,515,4.477,516,3.824,517,3.824]],["title/components/CarRegistrationComponent.html",[97,0.268,199,0.964]],["body/components/CarRegistrationComponent.html",[2,0.123,3,0.123,4,0.107,6,0.123,7,0.724,9,0.498,10,1.345,11,1.574,13,1.127,15,0.556,16,0.022,17,0.733,18,0.412,19,0.418,20,1.53,27,1.005,28,2.634,30,0.598,32,0.348,39,0.772,42,0.123,43,0.172,44,0.955,45,0.692,52,1.458,53,1.087,54,1.583,55,1.008,56,0.904,66,0.01,67,0.01,70,0.535,74,1.583,75,0.501,81,1.005,86,1.755,91,1.684,97,0.456,98,0.621,99,0.816,100,0.816,101,0.816,103,1.406,108,1.371,109,0.772,110,2.057,111,1.936,113,1.124,115,1.124,125,1.539,127,1.458,128,1.065,134,1.662,142,1.583,143,4.21,154,0.731,155,0.772,156,1.298,158,1.406,162,0.863,166,0.692,189,0.731,190,1.124,191,1.008,192,1.719,193,0.816,194,1.229,195,0.816,196,0.816,197,0.655,198,0.816,199,1.307,200,1.977,201,0.816,202,0.621,203,0.816,204,0.621,205,0.816,206,0.621,207,0.816,208,0.655,209,0.816,210,0.621,211,0.816,212,0.621,213,0.816,214,0.655,215,0.816,216,0.655,217,0.816,218,0.621,219,0.816,220,0.621,221,0.816,222,0.621,223,0.816,224,0.621,225,0.731,226,0.621,227,0.772,228,0.816,243,3.494,280,1.583,350,4.583,384,2.069,389,1.53,407,2.069,413,3.23,415,1.817,450,1.029,484,3.038,501,1.029,502,4.159,503,3.812,505,3.343,509,3.038,518,5.702,519,1.974,520,2.697,521,2.442,522,3.812,523,3.557,524,3.557,525,4.869,526,4.159,527,4.159,528,4.869,529,4.159,530,4.869,531,4.869,532,4.869,533,4.869,534,4.869,535,4.869,536,3.557,537,3.343,538,2.311,539,3.557,540,3.038,541,2.311,542,3.038,543,1.684,544,2.697,545,2.311,546,3.557,547,4.159,548,2.311,549,3.692,550,2.311,551,3.557,552,2.239,553,2.195,554,2.311,555,3.038,556,3.557,557,2.311,558,2.311,559,2.069,560,2.311,561,3.557,562,3.557,563,3.038,564,2.311,565,2.311,566,3.557,567,3.557,568,2.311,569,2.311,570,0.969,571,1.753,572,3.557,573,4.335,574,2.311,575,2.311,576,3.557,577,3.038,578,2.311,579,2.311,580,2.311,581,2.311,582,2.311,583,3.557,584,2.311,585,2.311,586,2.311,587,3.557,588,3.557,589,2.311,590,2.311,591,1.587,592,2.311,593,2.311,594,3.557,595,2.311,596,3.557,597,2.311,598,2.311,599,2.311,600,3.557,601,2.311,602,2.311,603,2.311,604,2.697,605,2.697,606,3.557,607,3.557,608,3.557,609,3.557]],["title/interfaces/ContactInfo.html",[229,0.731,610,2.466]],["body/interfaces/ContactInfo.html",[2,0.385,3,0.261,4,0.227,6,0.261,16,0.021,18,0.488,42,0.261,52,1.796,53,0.786,66,0.017,67,0.017,70,0.738,75,0.845,81,1.275,86,2.048,91,3.335,150,1.639,229,1.22,238,4.548,507,3.49,537,4.119,610,4.119,611,3.72,612,3.72,613,4.191,614,4.027,615,5.998,616,5.998,617,3.49,618,5.998,619,5.998,620,5.124]],["title/interceptors/ErrorInterceptor.html",[254,2.261,621,2.466]],["body/interceptors/ErrorInterceptor.html",[2,0.229,3,0.229,4,0.199,6,0.229,7,1.124,9,0.926,12,4.032,13,0.942,15,1.33,16,0.022,17,0.831,18,0.371,19,1,27,1.166,29,3.301,30,0.851,31,1.258,32,0.647,33,2.174,34,3.676,36,3.263,37,2.174,42,0.229,43,0.321,44,1.155,45,1.288,46,1.701,54,2.459,63,3.676,66,0.016,67,0.016,153,2.328,230,3.794,233,3.746,237,3.477,251,2.709,254,3.477,255,3.263,289,3.443,295,2.174,334,4.883,336,2.504,389,1.519,412,3.676,621,2.955,622,4.303,623,5.213,624,3.676,625,4.303,626,3.676,627,5.5,628,3.55,629,4.303,630,3.676,631,4.72,632,5.524,633,4.303,634,4.303,635,4.303,636,3.263,637,4.303,638,4.303,639,6.102,640,4.303,641,4.303,642,4.303,643,4.303,644,4.303,645,4.303,646,4.303,647,4.303,648,4.303,649,3.676,650,3.676,651,4.303,652,4.303,653,4.303,654,4.303]],["title/components/FavoritesComponent.html",[97,0.268,202,0.964]],["body/components/FavoritesComponent.html",[2,0.2,3,0.2,4,0.175,6,0.2,7,1.03,9,1.231,13,0.975,16,0.021,17,0.86,27,0.682,30,0.463,32,0.567,42,0.2,43,0.281,44,1.359,53,0.811,55,1.733,56,1.287,66,0.015,67,0.015,70,0.567,75,0.714,97,0.515,98,1.011,99,1.33,100,1.33,101,1.33,108,1.808,109,1.258,110,2.189,111,2.067,113,1.6,115,1.6,125,1.933,127,1.83,128,1.515,134,1.191,154,2.185,155,1.258,156,1.128,189,1.191,190,1.6,191,1.435,192,2.158,193,1.33,194,1.068,195,1.33,196,1.33,197,1.068,198,1.33,199,1.011,200,1.011,201,1.33,202,1.641,203,1.33,204,1.011,205,1.33,206,1.011,207,1.33,208,1.068,209,1.33,210,1.011,211,1.33,212,1.011,213,1.33,214,1.068,215,1.33,216,1.068,217,1.33,218,1.011,219,1.33,220,1.011,221,1.33,222,1.011,223,1.33,224,1.011,225,1.191,226,1.011,227,1.258,228,1.33,252,2.558,280,2.253,401,4.636,421,3.476,433,2.945,655,3.218,656,5.062,657,3.089,658,5.062,659,4.684,660,3.186,661,5.062,662,5.062,663,3.926,664,5.062,665,4.325,666,3.186,667,3.839,668,3.767,669,3.476,670,3.186,671,4.684,672,5.062,673,5.062,674,2.253,675,3.218]],["title/injectables/GeocodeService.html",[31,0.818,676,2.724]],["body/injectables/GeocodeService.html",[2,0.186,3,0.186,4,0.162,6,0.186,7,1.207,9,1.186,13,1.011,15,1.16,16,0.022,17,0.725,18,0.37,19,0.873,27,1.192,29,3.726,30,0.592,31,1.254,32,0.527,37,1.771,40,2.206,41,1.771,42,0.186,43,0.261,49,4.074,52,2.008,55,1.682,66,0.017,67,0.014,70,0.829,75,0.679,76,2.985,81,0.997,127,1.776,128,1.776,132,3.143,142,1.559,156,1.443,166,1.443,240,3.477,251,3.033,252,2.435,256,3.033,397,2.985,415,2.694,419,2.145,426,2.406,450,1.559,543,2.282,591,2.406,650,2.993,676,3.655,677,2.993,678,4.819,679,6.707,680,7.062,681,4.819,682,4.819,683,4.819,684,3.504,685,5.932,686,4.819,687,3.209,688,4.819,689,5.932,690,3.504,691,3.655,692,3.655,693,5.508,694,5.932,695,4.117,696,3.504,697,4.819,698,4.819,699,4.819,700,4.819,701,4.819,702,4.819,703,4.819,704,4.819,705,3.504,706,4.819,707,3.504,708,2.993,709,3.504]],["title/components/HowToComponent.html",[97,0.268,204,0.964]],["body/components/HowToComponent.html",[2,0.306,3,0.101,4,0.088,9,0.409,16,0.02,17,0.807,18,0.205,19,0.924,30,0.233,32,0.285,42,0.101,43,0.141,44,0.818,50,1.356,52,1.307,54,1.356,55,0.864,56,0.774,57,3.511,66,0.009,67,0.016,70,0.285,76,2.482,83,2.762,86,1.381,92,1.772,97,0.356,98,0.509,99,0.67,100,0.67,101,0.67,103,1.204,108,1.206,109,0.634,110,1.989,111,1.869,113,0.963,115,0.963,125,0.6,131,2.999,132,1.356,137,1.648,142,2.628,147,1.137,148,2.999,149,2.541,153,2.363,154,2.066,158,2.018,186,1.917,189,0.6,190,0.963,191,0.864,192,1.542,193,0.67,194,0.538,195,0.67,196,0.67,197,0.538,198,0.67,199,0.509,200,1.676,201,0.67,202,0.509,203,0.67,204,1.173,205,0.67,206,0.509,207,0.67,208,0.538,209,0.67,210,0.509,211,0.67,212,0.509,213,0.67,214,0.538,215,0.67,216,0.538,217,0.67,218,0.509,219,0.67,220,0.509,221,0.67,222,0.509,223,0.67,224,0.509,225,1.974,226,0.509,227,0.634,228,0.67,238,3.312,239,2.091,243,3.511,268,3.245,280,1.356,295,2.207,316,1.303,384,2.541,387,2.31,396,4.149,397,2.628,411,4.219,413,1.772,415,2.804,420,3.214,422,1.917,428,2.091,430,3.868,441,4.362,501,3.045,503,2.999,505,2.999,510,4.362,559,3.835,571,4.66,604,3.312,605,2.31,614,3.245,628,3.682,657,2.984,665,5.249,666,1.917,670,3.511,687,1.648,710,1.621,711,1.621,712,2.602,713,3.731,714,3.046,715,3.046,716,3.046,717,3.046,718,3.731,719,5.98,720,2.999,721,3.731,722,2.602,723,2.602,724,4.367,725,5.044,726,3.046,727,4.367,728,6.771,729,3.046,730,2.31,731,3.214,732,2.602,733,4.367,734,2.602,735,3.046,736,4.66,737,6.771,738,5.044,739,4.362,740,2.971,741,3.046,742,3.046,743,3.046,744,3.046,745,4.367,746,5.044,747,4.799,748,3.046,749,5.577,750,3.046,751,2.602,752,2.602,753,2.602,754,3.046,755,3.046,756,1.917,757,2.602,758,5.249,759,3.046,760,2.602,761,4.367,762,2.602,763,3.046,764,3.046,765,3.046,766,3.731,767,2.602,768,3.046,769,3.046,770,4.367,771,2.602,772,1.772,773,2.091,774,4.367,775,3.046,776,3.312,777,1.917,778,3.731,779,3.046,780,3.046,781,3.046,782,3.731,783,1.897,784,2.602,785,3.046,786,5.106,787,3.046,788,2.602,789,1.897,790,3.046,791,3.046,792,4.367,793,3.046,794,4.367,795,2.091,796,3.046,797,1.897,798,4.367,799,3.046,800,3.83,801,3.046,802,4.367,803,2.749,804,3.046,805,3.046,806,3.046,807,2.602,808,2.091,809,3.046,810,3.046,811,3.046,812,3.046,813,3.046,814,1.621,815,1.897,816,1.897,817,3.046,818,1.897,819,1.897]],["title/interceptors/JwtInterceptor.html",[290,2.466,621,2.466]],["body/interceptors/JwtInterceptor.html",[2,0.252,3,0.252,4,0.22,6,0.252,7,1.196,9,1.022,13,1.002,15,1.415,16,0.022,17,0.885,18,0.395,19,1.064,27,1.064,29,3.454,30,0.82,31,1.339,32,0.714,37,2.399,42,0.252,43,0.354,44,1.275,45,1.422,66,0.017,67,0.017,237,4.019,290,4.037,334,5.06,336,2.763,389,1.676,409,4.398,417,4.019,450,2.113,621,3.261,623,5.455,626,4.056,627,5.7,628,3.715,630,4.056,631,5.022,820,4.748,821,4.748,822,4.748,823,4.748,824,4.748,825,4.748,826,4.748,827,4.748,828,4.748,829,4.748,830,4.748]],["title/components/LandingComponent.html",[97,0.268,206,0.964]],["body/components/LandingComponent.html",[2,0.145,3,0.145,4,0.126,6,0.145,7,0.82,9,0.587,10,1.587,11,1.691,12,1.587,13,0.963,15,0.657,16,0.022,17,0.797,18,0.322,19,0.494,20,1.692,27,0.73,28,2.593,30,0.65,32,0.41,33,1.379,39,0.911,42,0.145,43,0.203,44,1.082,45,0.817,53,1.073,54,1.794,55,1.501,56,1.025,58,3.443,65,1.587,66,0.012,67,0.012,70,0.606,75,0.568,97,0.493,98,0.733,99,0.963,100,0.963,101,0.963,103,1.593,108,1.516,109,0.911,110,2.107,111,2.033,113,1.274,115,1.274,125,1.674,128,1.77,129,2.768,134,1.274,136,3.057,139,2.537,147,1.505,150,1.346,154,0.863,162,1.019,166,0.817,169,2.093,183,3.443,184,2.345,185,3.443,189,0.863,190,1.274,191,1.143,192,1.869,193,0.963,194,0.773,195,0.963,196,0.963,197,0.773,198,0.963,199,0.733,200,0.733,201,0.963,202,0.733,203,0.963,204,0.733,205,0.963,206,1.422,207,0.963,208,0.773,209,0.963,210,0.733,211,0.963,212,0.733,213,0.963,214,0.773,215,0.963,216,0.773,217,0.963,218,0.733,219,0.963,220,0.733,221,0.963,222,0.733,223,0.963,224,0.733,225,0.863,226,0.733,227,0.911,228,0.963,384,2.345,388,5.365,394,3.636,415,2.219,417,2.537,422,2.537,433,2.345,501,3.081,520,3.057,521,2.768,552,2.537,553,1.078,555,3.443,570,1.143,628,2.345,666,3.333,669,2.768,670,2.537,674,1.214,718,5.365,719,4.523,720,3.636,740,3.081,758,3.443,760,3.443,773,2.768,776,4.762,777,3.333,800,2.768,831,2.331,832,4.031,833,4.031,834,4.031,835,4.031,836,4.031,837,2.357,838,5.052,839,4.523,840,4.031,841,2.728,842,2.728,843,2.728,844,4.031,845,4.031,846,3.057,847,1.909,848,1.873,849,2.331,850,2.069,851,3.443,852,5.572,853,5.052,854,5.295,855,3.529,856,3.057,857,3.443,858,5.295,859,5.295,860,4.031,861,2.728,862,4.031,863,4.523,864,3.443,865,3.443,866,4.031,867,4.031,868,3.443,869,4.031,870,4.031,871,2.728,872,5.295,873,4.031,874,4.031,875,2.728,876,2.728]],["title/components/LikesComponent.html",[97,0.268,208,1.018]],["body/components/LikesComponent.html",[2,0.168,3,0.168,4,0.146,6,0.168,7,0.911,9,0.679,11,1.697,13,0.966,15,0.759,16,0.022,17,0.853,18,0.35,19,0.571,20,2.001,27,0.571,30,0.786,32,0.475,39,1.496,42,0.168,43,0.235,44,1.203,45,0.945,46,1.247,50,2.522,52,1.697,53,1.093,56,1.139,66,0.013,67,0.016,70,0.674,75,0.631,97,0.508,98,0.847,99,1.114,100,1.114,101,1.114,108,1.646,109,1.054,110,2.146,111,2.025,113,1.416,115,1.416,125,1.792,127,1.341,128,1.341,134,0.997,139,2.819,147,1.672,150,1.893,154,0.997,155,1.054,156,0.945,158,1.77,162,1.178,166,1.341,169,2.458,189,0.997,190,1.416,191,1.27,192,2.001,193,1.114,194,0.895,195,1.114,196,1.114,197,0.895,198,1.114,199,0.847,200,0.847,201,1.114,202,0.847,203,1.114,204,0.847,205,1.114,206,0.847,207,1.114,208,1.607,209,1.114,210,0.847,211,1.114,212,0.847,213,1.114,214,0.895,215,1.114,216,0.895,217,1.114,218,0.847,219,1.114,220,0.847,221,1.114,222,0.847,223,1.114,224,0.847,225,0.997,226,0.847,227,1.054,228,1.114,247,2.864,292,2.375,330,1.707,383,3.826,389,1.114,450,1.993,459,1.594,501,2.767,512,1.993,553,1.247,570,1.322,617,2.606,657,3.302,659,3.075,671,3.075,674,1.404,795,3.075,837,2.522,847,1.494,855,2.423,877,2.695,878,4.478,879,4.478,880,4.841,881,2.166,882,4.478,883,3.396,884,3.029,885,3.155,886,2.606,887,3.396,888,3.155,889,3.767,890,3.396,891,2.695,892,1.494,893,1.707,894,1.707,895,2.606,896,2.393,897,2.606,898,2.393,899,3.029,900,2.166,901,2.166,902,1.836,903,1.836,904,2.393,905,2.695,906,4.478,907,4.478]],["title/components/LikesmatchwebComponent.html",[97,0.268,210,0.964]],["body/components/LikesmatchwebComponent.html",[2,0.203,3,0.135,4,0.118,6,0.135,7,0.778,9,0.548,11,1.531,13,0.982,15,1.107,16,0.022,17,0.867,18,0.369,19,0.832,20,1.805,23,1.285,27,0.832,30,0.734,32,0.383,39,1.278,42,0.203,43,0.19,44,1.027,45,0.761,46,1.005,50,2.276,52,1.531,53,1.105,55,0.721,56,0.973,66,0.011,67,0.015,70,0.576,75,0.539,81,0.693,97,0.485,98,0.683,99,0.898,100,0.898,101,0.898,108,1.454,109,0.849,110,2.086,111,1.965,113,1.209,115,1.209,125,1.617,127,1.531,128,1.145,134,1.454,139,2.408,147,1.428,150,1.832,154,0.804,155,0.849,156,0.761,158,1.512,162,0.95,166,1.145,169,2.363,189,0.804,190,1.209,191,1.085,192,1.805,193,0.898,194,0.721,195,0.898,196,0.898,197,0.721,198,0.898,199,0.683,200,0.683,201,0.898,202,0.683,203,0.898,204,0.683,205,0.898,206,0.683,207,0.898,208,0.721,209,0.898,210,1.373,211,0.898,212,0.683,213,0.898,214,0.721,215,0.898,216,0.721,217,0.898,218,0.683,219,0.898,220,0.683,221,0.898,222,0.683,223,0.898,224,0.683,225,0.804,226,0.683,227,0.849,228,0.898,229,0.517,240,1.376,247,2.584,292,2.143,330,1.376,344,2.069,389,0.898,400,3.084,450,1.702,459,1.285,501,2.66,512,1.702,553,1.005,570,1.066,617,2.225,657,3.18,660,2.408,667,2.901,671,2.627,740,1.48,756,2.408,772,3.478,795,2.627,837,2.441,847,1.204,855,2.069,881,1.746,883,2.901,884,2.675,886,2.225,887,2.901,890,3.487,892,1.204,893,1.376,894,1.376,895,2.225,896,1.928,897,2.225,898,1.928,899,2.675,902,3.478,903,1.48,908,1.928,909,3.268,910,3.268,911,4.369,912,3.268,913,3.268,914,3.825,915,2.627,916,2.543,917,2.627,918,2.627,919,3.512,920,3.512,921,2.225,922,3.512,923,2.627,924,2.543,925,2.627,926,2.543,927,2.543,928,3.452,929,2.408,930,1.601,931,1.48,932,2.172,933,2.172,934,1.746,935,2.627,936,3.219,937,1.746,938,2.627,939,2.627,940,1.746,941,4.224,942,1.746,943,2.172,944,2.172,945,2.172,946,2.172,947,2.172,948,1.928,949,1.928,950,2.172,951,2.172,952,1.601,953,2.172,954,4.224,955,4.369,956,4.369,957,4.369,958,3.268,959,3.268,960,2.627,961,3.268]],["title/interfaces/Location.html",[132,1.598,229,0.731]],["body/interfaces/Location.html",[2,0.279,3,0.279,4,0.243,6,0.279,16,0.021,18,0.42,42,0.279,66,0.018,67,0.018,70,0.789,71,1.958,75,0.88,86,2.262,132,3.217,156,2.066,229,1.27,256,3.301,691,5.234,692,5.234,962,4.48,963,5.244,964,6.244,965,6.244]],["title/components/LoginComponent.html",[97,0.268,212,0.964]],["body/components/LoginComponent.html",[2,0.159,3,0.159,4,0.139,6,0.159,7,0.878,9,0.645,11,1.756,12,3.413,13,1.042,15,1.217,16,0.022,17,0.833,18,0.372,19,0.542,20,1.954,26,2.463,27,0.916,30,0.721,31,0.983,32,0.451,33,1.514,39,1,42,0.159,43,0.223,44,1.159,45,0.897,46,1.706,53,1.132,54,2.719,56,1.097,66,0.012,67,0.012,70,0.649,75,0.608,81,1.14,97,0.437,98,0.804,99,1.057,100,1.057,101,1.057,108,1.599,109,1,110,2.133,111,2.011,113,1.364,115,1.364,125,1.75,127,1.292,128,1.657,134,1.364,147,1.611,154,0.947,155,1.441,162,1.118,166,1.514,189,0.947,190,1.364,191,1.223,192,1.954,193,1.057,194,0.849,195,1.057,196,1.057,197,0.849,198,1.057,199,0.804,200,0.804,201,1.057,202,0.804,203,1.057,204,0.804,205,1.057,206,0.804,207,1.057,208,0.849,209,1.057,210,0.804,211,1.057,212,1.486,213,1.057,214,0.849,215,1.057,216,0.849,217,1.057,218,0.804,219,1.057,220,0.804,221,1.057,222,0.804,223,1.057,224,0.804,225,0.947,226,0.804,227,1,228,1.057,233,2.511,235,3.686,239,3.8,243,3.484,252,3.257,257,3.686,268,3.555,280,1.92,289,3.257,394,3.8,396,4.292,406,3.272,407,2.511,420,2.716,430,2.716,439,3.686,521,2.963,553,1.184,559,2.511,570,1.255,591,2.963,624,2.559,636,2.271,669,2.963,670,2.716,713,3.686,731,2.716,837,2.463,850,2.271,853,4.728,966,2.559,967,5.22,968,4.315,969,4.315,970,5.534,971,5.534,972,4.315,973,4.315,974,3.686,975,3.686,976,4.315,977,2.995,978,3.272,979,4.315,980,2.995,981,4.315,982,2.995,983,2.995,984,4.315,985,2.995,986,2.995,987,2.995,988,2.995,989,2.995,990,4.315]],["title/injectables/MapsControllerService.html",[31,0.818,291,2.261]],["body/injectables/MapsControllerService.html",[2,0.332,3,0.188,4,0.164,6,0.188,7,0.988,9,0.764,13,0.945,15,1.334,16,0.022,17,0.834,18,0.373,19,1.004,26,2.467,27,1.218,29,3.574,30,0.792,31,1.262,32,0.534,37,1.792,42,0.188,43,0.264,45,1.062,52,2.014,55,1.378,66,0.014,67,0.014,70,0.834,74,2.162,76,3.072,81,1.295,97,0.362,127,1.455,128,1.455,132,2.94,149,3.634,166,1.87,182,3.336,184,2.827,236,3.806,252,2.455,262,4.151,291,3.058,322,2.435,333,4.289,336,2.063,384,2.827,397,3.072,407,3.469,408,2.689,415,2.036,419,2.162,421,3.336,443,2.689,445,2.232,446,2.689,486,3.685,540,4.151,552,3.058,613,4.151,663,4.289,691,4.892,692,4.892,695,4.151,720,3.806,772,2.827,777,3.058,808,3.336,991,5.094,992,2.689,993,4.859,994,4.859,995,3.546,996,4.859,997,4.859,998,3.546,999,4.859,1000,5.543,1001,3.336,1002,4.859,1003,3.546,1004,4.151,1005,4.859,1006,4.859,1007,3.685,1008,2.435,1009,3.546,1010,3.029,1011,4.151]],["title/interfaces/Marker.html",[229,0.731,1001,2.466]],["body/interfaces/Marker.html",[2,0.237,3,0.237,4,0.207,6,0.237,16,0.022,18,0.463,19,1.302,28,3.644,42,0.237,53,1.047,55,1.605,66,0.016,67,0.016,70,0.672,71,2.515,75,0.798,76,3.063,81,1.31,86,1.964,104,4.835,132,3.063,229,1.151,256,3.562,397,2.764,416,3.389,422,2.813,429,4.292,514,3.886,543,2.117,577,5.578,738,4.835,1001,4.726,1012,3.818,1013,6.529,1014,6.529,1015,6.529,1016,5.66,1017,6.211,1018,5.66,1019,4.469,1020,4.469,1021,4.469]],["title/injectables/MatchingControllerService.html",[31,0.818,292,1.505]],["body/injectables/MatchingControllerService.html",[2,0.146,3,0.146,4,0.127,6,0.146,7,0.822,9,0.59,13,1.094,15,1.545,16,0.022,17,0.966,18,0.432,19,1.162,27,1.306,29,3.771,30,0.727,31,1.094,32,0.412,37,1.384,42,0.146,43,0.204,45,0.82,53,1.159,66,0.012,67,0.015,81,0.732,86,2.312,91,3.445,166,2.006,236,2.776,245,3.066,247,2.043,248,5.371,292,1.694,333,3.643,336,1.594,387,4.023,408,2.077,443,2.077,444,2.34,445,1.724,446,2.077,501,1.799,507,2.352,512,2.906,543,2.978,657,3.451,687,3.204,803,3.34,855,2.187,894,1.482,992,2.077,1011,2.34,1022,5.578,1023,4.043,1024,4.043,1025,4.043,1026,4.043,1027,4.043,1028,4.043,1029,4.043,1030,4.043,1031,2.739,1032,4.043,1033,6.928,1034,2.739,1035,4.043,1036,6.829,1037,4.043,1038,2.739,1039,4.043,1040,2.739,1041,4.043,1042,4.043,1043,4.043,1044,4.043,1045,4.805,1046,4.043,1047,2.739,1048,4.043,1049,2.739,1050,4.043,1051,4.043,1052,2.739,1053,4.043,1054,2.739,1055,5.305,1056,4.043,1057,2.739,1058,4.805,1059,2.739,1060,2.739,1061,4.043,1062,4.043,1063,4.043,1064,4.043,1065,2.739,1066,4.043]],["title/components/NavbarComponent.html",[97,0.268,216,1.018]],["body/components/NavbarComponent.html",[2,0.136,3,0.136,4,0.119,6,0.136,7,0.781,9,0.827,10,1.488,11,1.646,12,3.199,13,1.021,15,0.616,16,0.022,17,0.772,18,0.258,19,0.463,20,1.629,26,2.283,27,0.929,30,0.675,32,0.385,33,1.292,39,0.854,42,0.136,43,0.191,44,1.032,46,1.824,52,1.536,53,1.148,54,2.94,55,1.454,56,0.977,65,2.235,66,0.011,67,0.011,70,0.578,75,0.542,92,2.235,97,0.514,98,0.687,99,0.903,100,0.903,101,0.903,103,2.436,108,1.459,109,0.854,110,2.088,111,1.987,113,1.215,115,1.215,125,1.622,127,1.922,128,1.729,129,2.638,134,1.459,147,2.156,150,1.283,154,0.809,155,0.854,156,0.766,162,0.955,166,1.381,169,2.436,189,0.809,190,1.215,191,1.089,192,1.811,193,0.903,194,0.725,195,0.903,196,0.903,197,0.725,198,0.903,199,0.687,200,1.239,201,0.903,202,0.687,203,0.903,204,0.687,205,0.903,206,0.687,207,0.903,208,0.725,209,0.903,210,0.687,211,0.903,212,0.687,213,0.903,214,0.725,215,0.903,216,1.454,217,0.903,218,0.687,219,0.903,220,0.687,221,0.903,222,0.687,223,0.903,224,0.687,225,0.809,226,0.687,227,0.854,228,0.903,240,2.078,289,3.185,295,2.592,394,1.756,396,3.229,397,1.71,401,2.913,403,4.379,406,2.913,419,1.71,420,2.418,421,3.522,422,2.418,433,2.235,459,1.941,483,3.282,498,1.94,553,1.824,570,1.072,571,2.913,636,1.94,670,2.418,674,1.71,723,3.282,800,2.638,837,2.283,838,5.485,839,4.382,846,2.913,847,2.429,848,2.638,849,2.185,850,3.499,851,3.282,975,3.282,1067,2.185,1068,3.842,1069,3.842,1070,3.842,1071,5.497,1072,4.614,1073,3.842,1074,3.842,1075,3.842,1076,3.842,1077,3.282,1078,3.842,1079,2.558,1080,2.558,1081,3.842,1082,3.842,1083,3.842,1084,3.282,1085,3.842,1086,2.558,1087,2.558,1088,3.282,1089,2.558,1090,3.842,1091,2.558,1092,2.558,1093,3.842,1094,2.558,1095,2.558,1096,2.558,1097,2.558,1098,3.842]],["title/interfaces/Office.html",[137,1.943,229,0.731]],["body/interfaces/Office.html",[2,0.268,3,0.268,4,0.233,6,0.268,16,0.021,17,1.066,18,0.44,42,0.268,53,0.807,66,0.017,67,0.017,70,0.758,71,1.88,75,0.859,76,3.03,81,1.283,86,2.072,91,3.356,132,2.712,137,3.941,150,1.682,229,1.24,507,3.545,1099,4.302,1100,6.094,1101,6.094,1102,6.094]],["title/directives/PlacesAutocompleteDirective.html",[56,0.913,226,0.964]],["body/directives/PlacesAutocompleteDirective.html",[2,0.229,3,0.229,4,0.2,6,0.229,7,1.126,9,0.929,13,1.136,15,1.332,16,0.022,17,0.833,18,0.411,19,1.002,27,1.106,30,0.751,32,0.65,42,0.229,43,0.322,44,1.487,45,1.292,46,2.548,56,1.554,66,0.016,67,0.016,75,0.78,108,1.932,109,1.442,110,1.657,125,2.038,134,1.365,142,2.464,191,1.828,226,1.487,227,1.849,273,3.688,322,2.964,338,5.172,363,4.729,389,1.954,1103,5.826,1104,3.688,1105,5.536,1106,6.446,1107,6.111,1108,4.317,1109,5.507,1110,6.935,1111,5.536,1112,5.536,1113,6.446,1114,5.536,1115,4.317,1116,4.317,1117,6.111,1118,4.317,1119,3.688,1120,4.317,1121,4.317,1122,4.317,1123,4.317,1124,4.317,1125,4.317,1126,4.317,1127,4.317]],["title/interfaces/Register.html",[229,0.731,559,2.09]],["body/interfaces/Register.html",[2,0.318,3,0.26,4,0.227,6,0.26,16,0.021,17,0.9,18,0.435,42,0.26,53,1.162,55,1.386,66,0.017,67,0.017,70,0.735,71,1.825,74,2.175,75,0.844,81,1.312,97,0.364,103,2.366,107,5.112,142,3.171,143,4.538,229,1.217,268,4.094,384,2.844,417,4.429,430,3.077,543,2.315,559,3.482,731,4.243,1128,4.176,1129,5.984,1130,5.984,1131,4.538]],["title/components/RideswipeComponent.html",[97,0.268,218,0.964]],["body/components/RideswipeComponent.html",[2,0.226,3,0.226,4,0.197,6,0.226,7,1.115,9,1.306,13,1.034,16,0.021,17,0.913,27,0.769,30,0.522,32,0.639,42,0.226,43,0.317,44,1.471,56,1.393,66,0.016,67,0.016,75,0.772,97,0.494,98,1.141,99,1.5,100,1.5,101,1.5,108,1.917,109,1.419,110,2.214,111,2.092,113,1.732,115,1.732,125,2.026,134,1.343,154,1.343,155,1.419,156,1.272,189,1.343,190,1.732,191,1.553,192,2.262,193,1.5,194,1.204,195,1.5,196,1.5,197,1.204,198,1.5,199,1.141,200,1.141,201,1.5,202,1.141,203,1.5,204,1.141,205,1.5,206,1.141,207,1.5,208,1.204,209,1.5,210,1.141,211,1.5,212,1.141,213,1.5,214,1.204,215,1.5,216,1.204,217,1.5,218,1.721,219,1.5,220,1.141,221,1.5,222,1.141,223,1.5,224,1.141,225,1.343,226,1.141,227,1.419,228,1.5,399,4.681,659,4.4,663,4.165,674,2.438,675,3.629,1132,3.629,1133,5.479,1134,5.479,1135,5.479,1136,4.248]],["title/interfaces/RouteInfo.html",[229,0.731,1008,2.466]],["body/interfaces/RouteInfo.html",[2,0.274,3,0.274,4,0.239,6,0.274,16,0.021,18,0.416,26,3.125,42,0.274,66,0.018,67,0.018,70,0.777,75,0.872,86,2.253,89,5.285,229,1.258,252,2.609,415,2.164,612,3.915,687,2.793,808,4.894,1007,4.691,1008,4.248,1137,4.411,1138,5.163,1139,5.866,1140,6.866,1141,6.186]],["title/classes/SwipecardModel.html",[43,0.268,889,2.261]],["body/classes/SwipecardModel.html",[2,0.27,3,0.27,4,0.236,6,0.27,13,1.045,16,0.021,18,0.342,30,0.625,42,0.27,43,0.457,53,1.186,66,0.018,67,0.018,70,0.765,71,2.288,75,0.864,155,1.698,156,1.522,158,2.423,190,1.938,516,4.343,543,2.903,674,2.728,687,3.316,889,3.858,904,5.386,1142,4.343,1143,6.831,1144,5.084,1145,5.084]],["title/injectables/TokenStorage.html",[31,0.818,409,2.261]],["body/injectables/TokenStorage.html",[2,0.26,3,0.26,4,0.227,6,0.26,7,1.217,9,1.393,13,1.149,15,1.176,16,0.021,17,0.735,18,0.329,19,0.885,27,1.22,30,0.6,31,1.473,32,0.735,40,3.077,41,2.47,42,0.26,43,0.364,66,0.017,67,0.017,81,1.252,134,1.892,389,1.725,409,3.767,417,3.767,498,3.707,663,4.832,1146,3.707,1147,6.74,1148,5.984,1149,6.74,1150,4.888,1151,4.888,1152,5.984,1153,4.888,1154,4.888,1155,3.707,1156,4.176,1157,5.984,1158,4.888,1159,4.888]],["title/injectables/UploadService.html",[31,0.818,1160,2.724]],["body/injectables/UploadService.html",[2,0.182,3,0.182,4,0.332,6,0.182,7,0.966,9,1.173,13,1.053,15,0.826,16,0.022,17,0.885,18,0.319,19,0.621,27,1.227,30,0.584,31,1.406,32,0.516,40,2.16,41,2.753,42,0.182,43,0.256,48,4.201,49,3.262,52,1.998,55,1.811,65,1.997,66,0.014,67,0.014,70,0.715,74,2.114,75,0.67,81,0.986,86,1.085,92,1.997,97,0.354,103,1.357,127,1.422,128,1.422,129,3.262,136,3.602,142,1.527,150,1.587,155,1.146,156,1.027,166,1.422,169,1.878,233,1.997,280,2.114,389,1.923,419,2.114,426,2.356,500,4.058,514,4.038,521,2.356,543,2.25,591,2.356,620,4.058,674,1.527,948,2.602,949,3.602,1160,3.602,1161,2.932,1162,6.858,1163,5.023,1164,4.75,1165,7.187,1166,6.775,1167,5.88,1168,4.75,1169,6.386,1170,5.88,1171,4.75,1172,4.75,1173,4.75,1174,3.432,1175,4.75,1176,3.432,1177,5.448,1178,3.432,1179,4.058,1180,2.932,1181,3.432,1182,3.432,1183,3.432,1184,3.432,1185,3.432,1186,3.432,1187,1.997,1188,3.432,1189,3.432,1190,3.432,1191,3.432,1192,3.432,1193,3.432,1194,3.432,1195,3.432,1196,3.432,1197,3.432,1198,5.448,1199,3.432,1200,3.432,1201,3.432,1202,3.432,1203,4.75,1204,5.88,1205,3.432,1206,3.432,1207,3.432,1208,3.432]],["title/interfaces/User.html",[53,0.576,229,0.731]],["body/interfaces/User.html",[2,0.187,3,0.187,4,0.163,6,0.187,16,0.022,17,0.894,18,0.475,19,0.875,28,2.986,30,0.765,42,0.187,48,3.74,50,2.151,53,1.125,66,0.014,67,0.014,75,0.681,76,2.864,81,1.31,83,2.614,86,1.745,91,3.048,117,4.506,131,3.318,137,3.566,147,1.804,148,3.318,149,2.811,150,1.614,158,1.91,169,1.91,200,1.829,225,1.528,229,0.983,245,3.665,261,4.128,397,2.151,407,2.811,415,2.025,428,4.081,430,3.042,433,2.811,507,2.811,512,3.067,517,3.005,552,3.042,610,4.277,614,3.211,617,4.136,722,4.128,730,3.665,731,3.74,807,4.128,892,3.264,1010,3.005,1209,3.005,1210,6.435,1211,5.077,1212,5.077,1213,5.942,1214,6.435,1215,4.832,1216,4.832,1217,4.832,1218,4.832,1219,4.832,1220,4.832,1221,3.518,1222,3.518,1223,3.518]],["title/interfaces/UserCard.html",[229,0.731,400,1.701]],["body/interfaces/UserCard.html",[2,0.281,3,0.173,4,0.151,6,0.173,11,1.368,16,0.022,18,0.356,20,1.614,23,1.641,30,0.792,32,0.489,39,1.527,42,0.243,43,0.242,44,0.872,45,0.972,46,1.284,50,2.034,52,1.368,53,1.144,55,1.296,66,0.013,67,0.015,70,0.489,75,0.644,81,1.136,97,0.451,108,1.445,110,0.972,111,0.921,113,1.027,115,1.027,125,1.027,127,1.368,128,0.972,139,2.044,147,1.213,150,1.917,158,1.284,162,1.213,166,1.368,169,2.481,210,0.872,229,0.93,240,2.473,247,2.31,292,1.916,330,1.757,344,2.473,389,1.146,400,2.972,450,2.034,459,1.641,501,2.693,512,2.034,553,1.284,570,1.361,617,1.889,657,3.057,660,2.044,667,2.463,671,2.23,740,2.659,756,3.808,772,3.751,795,2.23,837,2.034,847,1.538,855,1.757,883,2.463,884,2.659,886,1.889,887,2.463,890,4.011,892,1.538,893,1.757,894,1.757,895,2.659,896,2.463,897,2.659,898,2.463,899,3.077,902,3.077,903,1.889,908,2.463,909,2.774,910,2.774,911,2.774,915,2.23,917,2.23,918,2.23,919,3.139,920,3.139,921,1.889,922,4.309,923,2.23,925,2.23,928,3.808,929,2.877,930,2.044,931,1.889,932,3.905,933,3.905,934,2.23,935,3.139,936,3.613,937,2.23,938,3.139,939,3.139,940,2.23,941,4.52,942,2.23,943,2.774,944,2.774,945,2.774,946,2.774,947,2.774,948,2.463,949,2.463,950,2.774,951,2.774,952,2.044,953,2.774,954,4.52]],["title/interfaces/UserCard-1.html",[229,0.61,400,1.42,1187,1.745]],["body/interfaces/UserCard-1.html",[2,0.151,3,0.151,4,0.131,6,0.22,11,1.468,16,0.022,18,0.33,20,1.464,23,1.433,30,0.761,31,0.646,32,0.427,39,1.385,42,0.151,43,0.211,44,0.761,45,0.849,46,1.121,50,1.262,52,1.242,53,1.163,57,2.61,66,0.012,67,0.017,70,0.427,71,2.014,74,1.262,75,0.585,81,1.085,83,1.534,86,1.705,97,0.402,103,1.121,108,1.311,110,0.849,111,0.804,113,0.897,115,0.897,125,0.897,127,1.615,128,1.242,147,1.831,150,0.947,153,2.652,154,1.55,158,1.121,162,1.059,166,1.795,169,2.269,184,2.413,186,2.61,190,1.311,191,0.804,222,0.761,225,1.311,229,0.844,240,2.244,247,2.096,292,2.055,330,1.534,344,2.244,386,2.848,389,1.001,400,3.007,419,1.846,450,1.846,459,1.433,512,2.401,522,1.947,544,3.145,549,2.15,553,1.938,570,1.188,657,1.433,660,1.785,687,2.244,747,2.15,756,3.613,772,3.603,777,1.785,803,3.086,837,1.262,847,1.343,884,2.413,886,1.65,892,1.343,893,1.534,894,1.534,895,2.413,897,2.852,899,2.852,900,1.947,901,1.947,902,3.694,903,1.65,915,1.947,917,1.947,918,1.947,919,2.848,920,2.848,921,1.65,922,4.117,923,1.947,925,1.947,928,3.613,929,2.61,930,1.785,931,1.65,934,1.947,935,2.848,936,3.395,937,1.947,938,2.848,939,2.848,940,1.947,941,4.36,942,1.947,952,2.61,954,4.36,1187,2.852,1224,2.15,1225,2.848,1226,2.422,1227,2.422,1228,2.422,1229,2.15,1230,2.15,1231,2.15,1232,2.15,1233,2.422,1234,2.15,1235,2.15,1236,2.422,1237,2.422,1238,2.422,1239,4.547,1240,2.422,1241,2.422,1242,2.15,1243,2.422,1244,4.608,1245,3.145,1246,5.122,1247,2.15,1248,3.145,1249,2.15,1250,2.422]],["title/components/UsercardComponent.html",[97,0.268,220,0.964]],["body/components/UsercardComponent.html",[2,0.256,3,0.102,4,0.178,6,0.204,7,0.626,9,0.414,11,1.441,13,1.107,15,0.926,16,0.022,17,0.843,18,0.414,19,0.696,20,1.553,23,1.944,27,0.871,28,2.081,30,0.71,31,0.7,32,0.289,39,1.027,42,0.102,43,0.143,44,0.826,45,0.575,46,0.759,50,1.369,52,1.317,53,1.099,56,0.782,66,0.009,67,0.016,68,1.319,70,0.463,71,1.642,74,1.369,75,0.434,81,0.929,83,1.039,86,0.972,97,0.431,98,0.516,99,0.678,100,0.678,101,0.678,103,1.216,108,1.216,109,0.641,110,1.993,111,1.873,113,0.972,115,0.972,125,1.39,127,1.441,128,1.317,132,1.369,134,1.521,138,3.286,147,2.157,150,1.027,153,2.379,154,1.705,155,1.801,156,1.614,158,1.739,162,0.717,166,1.152,169,2.029,189,0.607,190,0.972,191,1.529,192,1.553,193,0.678,194,0.545,195,0.678,196,0.678,197,0.545,198,0.678,199,0.516,200,1.033,201,0.678,202,0.516,203,0.678,204,0.516,205,0.678,206,0.516,207,0.678,208,0.545,209,0.678,210,0.516,211,0.678,212,0.516,213,0.678,214,0.545,215,0.678,216,0.545,217,0.678,218,0.516,219,0.678,220,1.181,221,0.678,222,0.516,223,0.678,224,0.516,225,0.607,226,0.516,227,0.641,228,0.678,247,1.554,292,2.017,330,1.039,344,3.126,389,0.678,400,1.457,419,1.957,450,1.369,459,0.971,512,1.957,522,2.112,543,1.457,553,2.215,570,0.805,614,2.559,628,1.117,659,2.112,666,1.936,674,0.855,725,1.641,757,1.641,773,1.319,776,2.332,778,3.286,788,2.628,808,3.02,837,1.957,847,0.91,848,1.319,852,2.628,880,4.386,881,1.319,884,2.238,886,1.789,889,3.526,891,1.641,892,0.91,893,1.039,894,1.039,895,1.789,897,2.238,899,2.238,900,1.319,901,1.319,902,2.559,903,1.117,904,1.457,905,1.641,928,3.231,929,1.936,930,2.421,931,1.117,936,3.029,960,2.112,1109,4.606,1139,2.628,1163,2.628,1187,2.559,1225,2.112,1229,2.332,1230,2.332,1231,1.457,1232,1.457,1234,4.871,1235,1.457,1245,1.457,1247,1.457,1248,1.457,1249,1.457,1251,1.641,1252,3.076,1253,3.076,1254,4.398,1255,4.398,1256,4.398,1257,4.398,1258,4.398,1259,4.398,1260,4.398,1261,4.398,1262,3.076,1263,3.847,1264,3.076,1265,3.076,1266,1.921,1267,4.812,1268,1.921,1269,3.076,1270,1.921,1271,5.391,1272,3.847,1273,1.921,1274,3.076,1275,1.921,1276,3.847,1277,4.398,1278,1.921,1279,3.757,1280,4.398,1281,1.921,1282,1.921,1283,1.921,1284,1.921,1285,5.391,1286,3.076,1287,5.391,1288,3.076,1289,1.921,1290,3.076,1291,3.076,1292,3.847,1293,4.398,1294,3.076,1295,1.921,1296,3.076,1297,1.921,1298,3.847,1299,1.921,1300,3.076,1301,1.921,1302,1.921,1303,1.921,1304,1.921,1305,1.921,1306,1.921,1307,1.921,1308,1.921,1309,1.921,1310,3.076,1311,1.921,1312,1.921,1313,1.921,1314,3.076,1315,1.921,1316,1.921,1317,1.921,1318,1.921,1319,1.921,1320,1.921,1321,1.921,1322,1.921,1323,1.921,1324,1.921,1325,1.921,1326,3.076,1327,1.921,1328,1.921,1329,1.921,1330,1.921,1331,1.921,1332,3.076,1333,5.134,1334,3.076,1335,1.921,1336,4.398,1337,1.921,1338,1.921,1339,1.921,1340,1.921,1341,4.398,1342,4.398,1343,3.076,1344,1.921,1345,3.076,1346,1.921]],["title/components/UsermatchwebComponent.html",[97,0.268,222,0.964]],["body/components/UsermatchwebComponent.html",[2,0.117,3,0.117,4,0.102,6,0.224,7,0.699,9,0.476,11,1.541,13,0.97,15,1.144,16,0.022,17,0.856,18,0.366,19,0.861,20,1.678,23,1.116,27,0.861,30,0.699,31,0.782,32,0.332,39,1.147,42,0.117,43,0.165,44,0.922,45,0.661,46,0.873,50,1.529,52,1.423,53,1.15,56,0.873,57,1.391,66,0.01,67,0.018,70,0.775,71,1.283,74,1.529,75,0.484,81,0.622,83,1.195,86,1.86,97,0.45,98,0.593,99,0.78,100,0.78,101,0.78,103,1.358,108,1.332,109,0.738,110,2.042,111,1.921,113,1.086,115,1.086,125,1.503,127,1.703,128,1.423,134,1.503,147,1.922,150,1.147,153,2.28,154,1.799,155,0.738,156,0.661,158,1.358,162,0.825,166,1.632,169,2.035,184,1.999,186,1.391,189,0.699,190,1.332,191,1.195,192,1.678,193,0.78,194,0.626,195,0.78,196,0.78,197,0.626,198,0.78,199,0.593,200,0.593,201,0.78,202,0.593,203,0.78,204,0.593,205,0.78,206,0.593,207,0.78,208,0.626,209,0.78,210,0.593,211,0.78,212,0.593,213,0.78,214,0.626,215,0.78,216,0.626,217,0.78,218,0.593,219,0.78,220,0.593,221,0.78,222,1.276,223,0.78,224,0.593,225,1.086,226,0.593,227,0.738,228,0.78,229,0.449,240,1.195,247,1.736,292,2.158,330,1.195,344,1.858,386,1.517,389,0.78,400,3.066,419,2.116,450,1.529,459,1.116,462,2.605,512,1.876,522,2.359,544,3.605,549,1.675,553,1.666,570,0.926,657,1.116,660,2.162,687,1.195,747,3.605,756,2.162,772,3.31,777,2.162,803,2.653,837,2.116,847,1.046,881,1.517,884,2.452,886,1.999,892,1.046,893,1.195,894,1.195,895,1.999,897,2.452,899,2.452,900,1.517,901,1.517,902,3.81,903,1.285,912,2.935,913,2.935,915,2.359,917,2.359,918,2.359,919,3.264,920,3.264,921,1.999,922,3.264,923,2.359,925,2.359,928,3.241,929,2.162,930,1.391,931,1.285,934,1.517,935,2.359,936,2.992,937,1.517,938,2.359,939,2.359,940,1.517,941,4.039,942,1.517,952,2.162,954,4.039,955,4.061,956,4.061,957,2.935,958,4.061,959,2.935,960,2.359,961,2.935,1187,2.452,1224,1.675,1225,1.517,1226,2.935,1227,2.935,1228,2.935,1229,1.675,1230,2.605,1231,1.675,1232,1.675,1233,1.887,1234,1.675,1235,1.675,1236,2.935,1237,2.935,1238,2.935,1239,4.461,1240,2.935,1241,2.935,1242,1.675,1243,1.887,1244,4.061,1245,2.605,1246,4.657,1247,1.675,1248,2.605,1249,1.675,1250,1.887,1347,3.435,1348,2.209,1349,2.209,1350,2.209,1351,2.209,1352,2.209,1353,3.435]],["title/components/ViewProfileComponent.html",[97,0.268,224,0.964]],["body/components/ViewProfileComponent.html",[2,0.261,3,0.082,4,0.072,6,0.082,7,0.524,9,0.333,10,0.899,11,1.156,13,1.105,15,0.372,16,0.022,17,1.016,18,0.397,19,0.28,20,1.169,27,0.89,30,0.569,31,0.586,32,0.233,39,0.516,42,0.082,43,0.115,44,0.692,45,0.463,52,1.156,53,1.154,54,1.146,55,1.095,56,0.655,57,1.621,66,0.007,67,0.013,70,0.388,71,0.962,74,2.291,75,0.363,76,2.577,77,3.958,81,1.19,83,2.983,91,1.22,92,2.247,97,0.398,98,0.415,99,0.546,100,0.546,101,0.546,103,1.832,108,1.047,109,0.516,110,1.909,111,1.79,112,1.769,113,0.814,115,0.814,117,3.513,119,3.958,120,3.299,123,3.299,125,1.221,127,1.541,128,1.541,131,1.061,134,1.553,137,3.38,142,0.688,147,1.922,148,3.181,149,2.247,150,0.86,153,2.089,154,1.79,155,0.86,156,0.771,158,1.832,162,0.577,163,1.321,166,0.463,167,1.321,169,2.035,174,2.2,179,1.321,180,1.321,186,2.431,187,2.2,189,0.489,190,1.898,191,0.73,192,1.363,193,0.546,194,0.438,195,0.546,196,0.546,197,0.438,198,0.546,199,0.415,200,1.152,201,0.546,202,0.415,203,0.546,204,0.415,205,0.546,206,0.415,207,0.546,208,0.438,209,0.546,210,0.415,211,0.546,212,0.415,213,0.546,214,0.438,215,0.546,216,0.438,217,0.546,218,0.415,219,0.546,220,0.415,221,0.546,222,0.415,223,0.546,224,1.037,225,1.69,226,0.415,227,0.516,228,0.546,243,1.621,246,4.946,267,3.299,268,3.891,295,1.301,353,4.484,355,1.321,356,1.321,357,1.321,386,3.975,413,3.208,415,1.619,416,1.953,419,1.146,428,3.786,433,1.498,462,1.172,469,1.321,471,1.321,475,2.828,477,1.321,479,1.321,481,1.321,482,1.321,501,2.291,503,2.652,505,2.652,507,1.498,526,2.2,527,2.2,529,2.2,547,5.395,552,1.621,553,1.018,570,0.648,604,1.953,614,2.696,617,2.859,628,1.498,674,1.146,730,4.182,731,2.916,732,4.946,734,2.2,736,1.953,739,3.299,740,3.368,762,2.2,766,2.2,767,2.2,773,3.181,784,3.299,837,1.719,846,1.172,847,0.732,848,1.061,855,2.785,856,1.953,892,2.531,893,0.836,921,2.247,952,1.621,960,1.769,967,2.2,978,1.953,1077,3.299,1088,3.958,1131,1.953,1211,3.958,1212,3.958,1225,1.769,1354,5.579,1355,1.321,1356,5.789,1357,2.575,1358,2.575,1359,3.862,1360,3.862,1361,3.862,1362,3.862,1363,3.862,1364,3.862,1365,2.575,1366,1.546,1367,1.546,1368,1.546,1369,1.546,1370,1.546,1371,2.575,1372,1.546,1373,2.575,1374,2.575,1375,1.546,1376,2.575,1377,2.575,1378,1.546,1379,5.789,1380,1.546,1381,2.575,1382,1.546,1383,1.546,1384,2.575,1385,1.546,1386,1.546,1387,1.546,1388,1.546,1389,2.575,1390,1.546,1391,2.575,1392,1.546,1393,1.546,1394,1.546,1395,2.575,1396,1.546,1397,2.575,1398,1.546,1399,2.575,1400,1.546,1401,1.546,1402,1.546,1403,1.546,1404,2.575,1405,1.546,1406,1.546,1407,1.546,1408,3.311,1409,1.546,1410,1.546,1411,1.546,1412,1.546,1413,1.546,1414,1.546,1415,1.546,1416,1.546,1417,1.546,1418,1.546,1419,3.311,1420,1.546,1421,1.546,1422,1.546,1423,2.575,1424,1.546,1425,1.546,1426,1.546,1427,1.546,1428,1.546,1429,3.311,1430,1.546,1431,1.546,1432,1.546,1433,1.546,1434,1.546,1435,1.546,1436,1.546,1437,1.546,1438,1.546,1439,1.546,1440,1.546,1441,1.546,1442,5.789,1443,5.789,1444,2.575,1445,2.575,1446,2.575,1447,2.575,1448,1.546,1449,2.575,1450,2.575,1451,2.575,1452,1.546]],["title/coverage.html",[1453,4.187]],["body/coverage.html",[4,0.168,11,1.083,16,0.022,18,0.243,31,1.512,43,0.448,53,0.58,56,0.92,66,0.014,67,0.014,68,2.485,69,3.091,97,0.537,98,0.972,102,3.091,132,1.61,137,1.958,142,1.61,194,1.026,197,1.026,199,0.972,200,0.972,202,0.972,204,0.972,206,0.972,208,1.026,210,0.972,212,0.972,214,1.026,216,1.026,218,0.972,220,0.972,222,0.972,224,0.972,226,0.972,229,1.41,230,2.485,231,2.744,232,2.744,264,3.091,289,1.828,291,2.278,292,1.516,316,2.485,338,2.744,350,2.485,353,2.485,366,2.744,367,3.091,400,2.333,405,3.091,409,2.278,411,2.485,429,2.744,445,3.101,489,3.091,499,3.091,518,3.091,519,3.091,553,2.74,559,2.105,563,3.091,610,2.485,611,2.744,612,3.736,655,3.091,676,2.744,677,3.091,710,3.091,711,3.091,831,3.091,877,3.091,889,2.278,908,3.736,962,3.091,966,3.091,991,3.091,992,4.248,1001,2.485,1008,2.485,1012,3.091,1022,3.091,1067,3.091,1099,3.091,1103,3.091,1104,3.091,1128,3.091,1132,3.091,1137,3.091,1142,3.091,1146,3.736,1155,2.744,1160,2.744,1161,3.091,1209,3.091,1224,3.736,1251,3.091,1354,3.091,1355,3.091,1453,3.091,1454,3.618,1455,3.618,1456,4.926,1457,3.618,1458,4.926,1459,3.618,1460,7.404,1461,3.618,1462,3.618,1463,6.64,1464,3.618,1465,5.601,1466,6.013,1467,6.013,1468,3.618,1469,3.618,1470,3.618,1471,3.618,1472,3.618,1473,3.618,1474,3.618,1475,3.618,1476,3.618,1477,3.618,1478,5.601,1479,3.618,1480,3.618,1481,3.618,1482,3.618,1483,3.618,1484,3.618,1485,4.77,1486,6.29,1487,3.091,1488,3.091,1489,4.208,1490,3.091,1491,3.618]],["title/dependencies.html",[280,1.922,1492,2.999]],["body/dependencies.html",[16,0.022,32,0.755,33,2.535,37,3.072,66,0.017,67,0.017,280,2.233,282,3.805,298,5.194,299,4.175,305,4.286,308,3.805,309,4.286,322,3.445,343,4.286,344,2.714,345,4.286,379,4.286,931,2.919,1119,4.286,1180,4.286,1493,5.017,1494,5.017,1495,7.279,1496,5.017,1497,6.08,1498,5.017,1499,5.017,1500,5.017,1501,5.017,1502,5.017,1503,5.017,1504,5.017,1505,5.017,1506,5.017,1507,5.017,1508,5.017,1509,5.017,1510,5.017,1511,5.017,1512,5.017,1513,5.017,1514,5.017,1515,5.017,1516,5.017,1517,5.017]],["title/miscellaneous/enumerations.html",[1518,1.745,1519,3.69]],["body/miscellaneous/enumerations.html",[2,0.255,6,0.185,16,0.022,18,0.37,23,2.993,27,0.632,53,0.77,66,0.014,67,0.014,71,2.052,74,1.553,91,1.653,112,3.3,150,1.166,156,2.267,231,2.647,232,3.645,233,2.031,251,2.197,255,3.645,256,2.197,259,2.982,260,2.982,263,4.106,415,1.463,501,2.139,537,2.397,611,2.647,614,2.031,721,2.982,751,4.106,752,4.106,753,4.106,803,3.025,855,2.6,868,2.982,892,2.276,1131,3.645,1239,4.169,1242,2.647,1518,2.031,1519,2.982,1520,3.49,1521,4.806,1522,3.49,1523,4.806,1524,3.49,1525,3.49,1526,3.49,1527,3.49,1528,3.49,1529,3.49,1530,3.49,1531,3.49,1532,2.982,1533,3.49,1534,4.806,1535,3.49,1536,3.49,1537,3.49,1538,3.49,1539,3.49,1540,3.49,1541,3.49,1542,3.49,1543,3.49,1544,3.49,1545,3.49,1546,3.49,1547,3.49,1548,3.49,1549,3.49,1550,3.49,1551,3.49,1552,3.49,1553,3.49,1554,3.49,1555,3.49,1556,3.49,1557,3.49,1558,3.49,1559,3.49,1560,3.49,1561,3.49,1562,3.49,1563,3.49,1564,3.49,1565,3.49,1566,3.49,1567,3.49,1568,3.49,1569,3.49,1570,3.49,1571,3.49,1572,3.49,1573,3.49,1574,3.49,1575,3.49,1576,3.49,1577,3.49,1578,3.49,1579,3.49,1580,3.49,1581,3.49,1582,3.49,1583,3.49,1584,3.49,1585,3.49,1586,3.49,1587,3.49,1588,3.49,1589,3.49,1590,3.49,1591,3.49,1592,3.49,1593,3.49,1594,3.49,1595,3.49,1596,3.49,1597,3.49,1598,3.49,1599,3.49,1600,3.49,1601,3.49,1602,3.49,1603,3.49,1604,3.49,1605,3.49,1606,3.49,1607,3.49,1608,3.49,1609,2.982,1610,3.49,1611,3.49,1612,3.49,1613,3.49,1614,3.49,1615,3.49,1616,3.49,1617,3.49,1618,3.49,1619,3.49,1620,3.49,1621,3.49,1622,3.49,1623,3.49,1624,3.49,1625,3.49,1626,3.49,1627,3.49,1628,3.49,1629,3.49,1630,3.49,1631,3.49,1632,3.49,1633,3.49]],["title/index.html",[6,0.159,720,2.06,978,2.275]],["body/index.html",[3,0.208,4,0.181,16,0.02,17,0.588,41,1.976,55,1.76,56,0.994,66,0.015,67,0.015,70,0.781,96,3.341,97,0.434,111,1.109,142,2.762,149,3.611,182,4.261,237,3.267,239,3.564,295,1.976,308,5.137,372,3.341,407,3.02,413,3.941,415,1.639,420,2.462,426,2.686,432,5.517,435,3.341,542,3.341,605,3.936,649,3.341,666,2.462,669,2.686,708,3.341,712,3.341,736,2.966,740,3.02,746,3.341,771,3.341,782,3.341,814,3.341,856,2.966,857,3.341,864,4.977,865,3.341,921,3.941,974,4.434,1004,3.341,1007,2.966,1084,3.341,1179,3.341,1532,4.434,1609,3.341,1634,3.911,1635,5.19,1636,5.826,1637,5.826,1638,3.911,1639,5.19,1640,6.773,1641,3.911,1642,6.638,1643,3.911,1644,3.911,1645,3.911,1646,6.458,1647,3.911,1648,3.911,1649,5.19,1650,3.911,1651,3.911,1652,3.341,1653,7.136,1654,2.966,1655,5.19,1656,3.911,1657,3.911,1658,5.826,1659,5.19,1660,7.031,1661,3.911,1662,3.911,1663,6.458,1664,5.19,1665,5.826,1666,3.911,1667,3.911,1668,5.826,1669,3.911,1670,5.826,1671,3.911,1672,6.458,1673,3.911,1674,3.911,1675,3.911,1676,3.911,1677,3.911,1678,3.911,1679,5.19,1680,3.911,1681,3.911,1682,3.911,1683,3.911,1684,3.911,1685,3.911,1686,5.19,1687,5.19,1688,3.911,1689,3.911,1690,3.911]],["title/modules.html",[278,2.652]],["body/modules.html",[16,0.019,66,0.019,67,0.019,278,3.1,279,3.935,288,3.607,299,3.935,520,4.345,537,3.935,800,4.515,1691,5.73,1692,5.73]],["title/overview.html",[1654,3.717]],["body/overview.html",[0,3.156,11,1.798,16,0.021,26,1.852,31,0.948,42,0.221,43,0.31,56,1.058,66,0.015,67,0.015,97,0.31,98,1.613,184,2.421,189,1.316,194,1.703,197,1.95,199,1.613,202,1.613,204,1.613,206,1.613,208,1.703,210,1.613,212,1.613,214,1.703,216,1.703,218,1.613,220,1.613,222,1.613,224,1.613,226,1.613,229,0.847,252,2.103,254,3.78,278,2.925,279,5.21,280,1.852,281,3.156,282,3.156,283,3.555,284,3.555,285,3.555,286,3.555,287,3.555,288,3.78,289,3.035,290,4.124,291,3.78,292,2.517,293,4.619,294,3.555,295,2.103,1187,3.146,1654,3.156,1693,4.162,1694,4.162,1695,4.162,1696,4.162,1697,4.162]],["title/routes.html",[26,2.181]],["body/routes.html",[16,0.019,26,2.6,66,0.019,67,0.019]],["title/miscellaneous/typealiases.html",[1518,1.745,1698,4.319]],["body/miscellaneous/typealiases.html",[6,0.291,16,0.018,18,0.431,48,3.451,55,1.554,66,0.018,67,0.018,75,0.773,81,1.16,397,2.44,419,2.44,486,4.157,512,3.023,514,3.764,863,4.683,1279,4.683,1518,3.189,1699,5.482,1700,5.482,1701,7.002,1702,5.482,1703,5.482,1704,5.482,1705,5.482,1706,5.482,1707,5.482,1708,5.482]],["title/miscellaneous/variables.html",[1485,3.276,1518,1.745]],["body/miscellaneous/variables.html",[6,0.264,16,0.021,18,0.455,65,3.513,66,0.017,67,0.017,81,1.093,155,2.263,156,2.028,411,4.47,445,4.445,543,3.208,674,2.208,1146,3.762,1155,4.937,1156,4.238,1485,3.762,1487,4.238,1488,4.238,1489,4.238,1490,5.561,1518,2.886,1652,5.159,1709,6.038,1710,4.961,1711,4.961,1712,4.961,1713,4.961,1714,4.961,1715,6.51,1716,6.038,1717,6.038,1718,6.038,1719,6.038,1720,6.038,1721,6.038,1722,4.961]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":553,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1187,"title":{"interfaces/UserCard-1.html":{}},"body":{"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["1.0.11",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1638,"title":{},"body":{"index.html":{}}}],["1.amazonaws.com",{"_index":1205,"title":{},"body":{"injectables/UploadService.html":{}}}],["1.amazonaws.com/rydeforce/rydeforc",{"_index":950,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["1.amazonaws.com:2222",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1696,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["100000000000",{"_index":1190,"title":{},"body":{"injectables/UploadService.html":{}}}],["11/11",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1697,"title":{},"body":{"overview.html":{}}}],["13/14",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1442,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["153",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1693,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["174",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["2.321.0",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1307,"title":{},"body":{"components/UsercardComponent.html":{}}}],["22/22",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["234.comput",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{}}}],["3",{"_index":1243,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["3.2.2",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["30/30",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1695,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["43/48",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["56/60",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["6.1.8",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1694,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1317,"title":{},"body":{"components/UsercardComponent.html":{}}}],["8/10",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":919,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["92",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["abov",{"_index":785,"title":{},"body":{"components/HowToComponent.html":{}}}],["access",{"_index":50,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["accessguard",{"_index":1,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{}}}],["accesskeyid",{"_index":1182,"title":{},"body":{"injectables/UploadService.html":{}}}],["accompani",{"_index":234,"title":{},"body":{"interfaces/ApiError.html":{}}}],["accordingli",{"_index":673,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["account",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["account'",{"_index":789,"title":{},"body":{"components/HowToComponent.html":{}}}],["account\\'",{"_index":816,"title":{},"body":{"components/HowToComponent.html":{}}}],["accountinfo",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accountinfo'},{'nam",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["accountinfocompon",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":1271,"title":{},"body":{"components/UsercardComponent.html":{}}}],["activ",{"_index":1210,"title":{},"body":{"interfaces/User.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AccessGuard.html":{}}}],["actual",{"_index":514,"title":{},"body":{"classes/Car.html":{},"interfaces/Marker.html":{},"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["actual_compon",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["add",{"_index":605,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"index.html":{}}}],["addcartous",{"_index":532,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addit",{"_index":241,"title":{},"body":{"interfaces/ApiError.html":{}}}],["address",{"_index":76,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["address2",{"_index":77,"title":{},"body":{"classes/AddressModel.html":{},"components/ViewProfileComponent.html":{}}}],["addressid",{"_index":78,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressmodel",{"_index":68,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["addressselect",{"_index":1107,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["admin",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["admin.component.css",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":98,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administr",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Register.html":{}}}],["adress",{"_index":73,"title":{},"body":{"classes/AddressModel.html":{}}}],["again",{"_index":810,"title":{},"body":{"components/HowToComponent.html":{}}}],["agm/cor",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasybxwxgwzxhyvz9jyn9srhggozi7vcu5g3g",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["ak",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["akiairzg4tk6eblzv7ga",{"_index":1183,"title":{},"body":{"injectables/UploadService.html":{}}}],["al",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alabama",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alaska",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1699,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["allpost",{"_index":1433,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["alow",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["alreadi",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["amazon",{"_index":1167,"title":{},"body":{"injectables/UploadService.html":{}}}],["amobil",{"_index":672,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["amount",{"_index":1676,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1636,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":931,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["angular/compil",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/source_map",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{}}}],["angular/cor",{"_index":32,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":33,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["animate(100",{"_index":1310,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(200",{"_index":1319,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(400",{"_index":942,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["animateonscrollmodul",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["animateonscrollmodule.forroot",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["animst",{"_index":1254,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animthumbst",{"_index":1255,"title":{},"body":{"components/UsercardComponent.html":{}}}],["apart",{"_index":734,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["api",{"_index":251,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"miscellaneous/enumerations.html":{}}}],["api/us",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["apierror",{"_index":230,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["apierror.statu",{"_index":647,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierror.typ",{"_index":651,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierrortyp",{"_index":255,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apierrortype.notloggedin",{"_index":652,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apikey",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["apiurl",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["app.compon",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/user.model",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["app/services/api/us",{"_index":38,"title":{},"body":{"guards/AccessGuard.html":{}}}],["app/services/auth.servic",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":197,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{}}}],["appmodul",{"_index":279,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":366,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appplacesautocomplet",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["appropri",{"_index":539,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["approutingmodul",{"_index":288,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approv",{"_index":874,"title":{},"body":{"components/LandingComponent.html":{}}}],["ar",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":860,"title":{},"body":{"components/LandingComponent.html":{}}}],["arizona",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arkansa",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["around",{"_index":1016,"title":{},"body":{"interfaces/Marker.html":{}}}],["array",{"_index":247,"title":{},"body":{"interfaces/ApiError.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["artifact",{"_index":1647,"title":{},"body":{"index.html":{}}}],["assets/icons/thumbsdown.png",{"_index":1298,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assets/icons/thumbsup.png",{"_index":1335,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assign",{"_index":1194,"title":{},"body":{"injectables/UploadService.html":{}}}],["associ",{"_index":257,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["assum",{"_index":1662,"title":{},"body":{"index.html":{}}}],["async",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attempt",{"_index":49,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{}}}],["attribut",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth",{"_index":51,"title":{},"body":{"guards/AccessGuard.html":{}}}],["authent",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["authenticate(email",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator(email",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":828,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservic",{"_index":289,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1156,"title":{},"body":{"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["autocomplet",{"_index":1124,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1126,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.direct",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete.directive.t",{"_index":1104,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["autocomplete.directive.ts:10",{"_index":1118,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:13",{"_index":1111,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:19",{"_index":1115,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:24",{"_index":1116,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete/plac",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["automat",{"_index":649,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["avail",{"_index":537,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["avatar",{"_index":1332,"title":{},"body":{"components/UsercardComponent.html":{}}}],["avoid",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aw",{"_index":1180,"title":{},"body":{"injectables/UploadService.html":{},"dependencies.html":{}}}],["await",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{}}}],["await/async",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["az",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b",{"_index":1659,"title":{},"body":{"index.html":{}}}],["back",{"_index":772,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["backend",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"miscellaneous/typealiases.html":{}}}],["bar",{"_index":786,"title":{},"body":{"components/HowToComponent.html":{}}}],["barebon",{"_index":1138,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["base",{"_index":1684,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1173,"title":{},"body":{"injectables/UploadService.html":{}}}],["batch",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["batchend",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["be",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["bearer",{"_index":829,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["begin",{"_index":1195,"title":{},"body":{"injectables/UploadService.html":{}}}],["best",{"_index":1677,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{}}}],["big",{"_index":790,"title":{},"body":{"components/HowToComponent.html":{}}}],["bio",{"_index":960,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["biographi",{"_index":739,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["blablablabla",{"_index":961,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["block",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["blue",{"_index":791,"title":{},"body":{"components/HowToComponent.html":{}}}],["bodi",{"_index":1192,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["bootstrap",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["both",{"_index":760,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["branch",{"_index":1660,"title":{},"body":{"index.html":{}}}],["brand",{"_index":763,"title":{},"body":{"components/HowToComponent.html":{}}}],["bring",{"_index":801,"title":{},"body":{"components/HowToComponent.html":{}}}],["brows",{"_index":800,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"modules.html":{}}}],["browser",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":373,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["btncarinfo",{"_index":525,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["btoa(this.officeobject",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{}}}],["bucket",{"_index":1166,"title":{},"body":{"injectables/UploadService.html":{}}}],["build",{"_index":1646,"title":{},"body":{"index.html":{}}}],["burden",{"_index":867,"title":{},"body":{"components/LandingComponent.html":{}}}],["button",{"_index":571,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["c.foreach(el",{"_index":580,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.id",{"_index":606,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.make",{"_index":607,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.model",{"_index":608,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.year",{"_index":609,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["ca",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":47,"title":{},"body":{"guards/AccessGuard.html":{}}}],["calcul",{"_index":1005,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["california",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["call",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/UsercardComponent.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canactivate(rout",{"_index":21,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canedit",{"_index":1359,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["car",{"_index":200,"title":{"classes/Car.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["car.model",{"_index":1222,"title":{},"body":{"interfaces/User.html":{}}}],["card",{"_index":902,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["card.fac",{"_index":954,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["card.user.firstnam",{"_index":906,"title":{},"body":{"components/LikesComponent.html":{}}}],["carmak",{"_index":526,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carmodel",{"_index":527,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["carobject",{"_index":528,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carousel",{"_index":832,"title":{},"body":{"components/LandingComponent.html":{}}}],["carpool",{"_index":858,"title":{},"body":{"components/LandingComponent.html":{}}}],["carregistrationcompon",{"_index":199,"title":{"components/CarRegistrationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caryear",{"_index":529,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["catcherror",{"_index":34,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":638,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(_",{"_index":62,"title":{},"body":{"guards/AccessGuard.html":{}}}],["center",{"_index":1277,"title":{},"body":{"components/UsercardComponent.html":{}}}],["certain",{"_index":1706,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chang",{"_index":921,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["charact",{"_index":1443,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["check",{"_index":669,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["checkifloggedin",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checkout",{"_index":1658,"title":{},"body":{"index.html":{}}}],["cheifli",{"_index":500,"title":{},"body":{"classes/Car.html":{},"injectables/UploadService.html":{}}}],["choos",{"_index":756,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["chose",{"_index":764,"title":{},"body":{"components/HowToComponent.html":{}}}],["circl",{"_index":859,"title":{},"body":{"components/LandingComponent.html":{}}}],["circlemanag",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["citi",{"_index":79,"title":{},"body":{"classes/AddressModel.html":{}}}],["class",{"_index":43,"title":{"classes/AddressModel.html":{},"classes/AppPage.html":{},"classes/Car.html":{},"classes/SwipecardModel.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":549,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["cli",{"_index":1637,"title":{},"body":{"index.html":{}}}],["click",{"_index":719,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["client",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["closer",{"_index":809,"title":{},"body":{"components/HowToComponent.html":{}}}],["cluster_appmodul",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":96,"title":{},"body":{"classes/AddressModel.html":{},"index.html":{}}}],["colorado",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["come",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":1021,"title":{},"body":{"interfaces/Marker.html":{}}}],["commit",{"_index":1663,"title":{},"body":{"index.html":{}}}],["common",{"_index":1100,"title":{},"body":{"interfaces/Office.html":{}}}],["commonmodul",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["commun",{"_index":695,"title":{},"body":{"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{}}}],["compani",{"_index":555,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{}}}],["compat",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":1274,"title":{},"body":{"components/UsercardComponent.html":{}}}],["complex",{"_index":932,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["compnent",{"_index":1076,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compoennt",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["compon",{"_index":97,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["components/accountinfo/accountinfo.compon",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin/admin.compon",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/car",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/favorites/favorites.compon",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/how",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing/landing.compon",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/likes/likes.compon",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["components/likesmatchweb/likesmatchweb.compon",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map.compon",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.compon",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rideswipe/rideswipe.compon",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usercard/usercard.compon",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usermatchweb/usermatchweb.compon",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["components/view",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":732,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["confirmpassword",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/ViewProfileComponent.html":{}}}],["conflict",{"_index":1679,"title":{},"body":{"index.html":{}}}],["congratul",{"_index":779,"title":{},"body":{"components/HowToComponent.html":{}}}],["connecticut",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.error('network",{"_index":645,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log",{"_index":707,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log(",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"data2",{"_index":1232,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log('befor",{"_index":1208,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('car",{"_index":587,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('data",{"_index":1323,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log('geocod",{"_index":705,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log('got",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('gotten",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('her",{"_index":946,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('in",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('loggeddata2",{"_index":947,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('nop",{"_index":1430,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log('print",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sav",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('successfulli",{"_index":1200,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('ther",{"_index":1199,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('thi",{"_index":943,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('upload",{"_index":1203,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(data",{"_index":945,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data2",{"_index":898,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3",{"_index":1325,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(e.messag",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(environment.apiurl",{"_index":1060,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["console.log(ev",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(param",{"_index":1201,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(posts.results[0].id",{"_index":1434,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(this.currentus",{"_index":848,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["console.log(this.currentuser.id",{"_index":1338,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.swipecards[this.currentindex].user.id",{"_index":1339,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.userservice.getofficebylink(this.currentuser.office).subscribe().tostr",{"_index":1401,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log(userlink",{"_index":1324,"title":{},"body":{"components/UsercardComponent.html":{}}}],["const",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constant",{"_index":1290,"title":{},"body":{"components/UsercardComponent.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(authservic",{"_index":624,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(elref",{"_index":1108,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(http",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["constructor(matchservic",{"_index":881,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(priv",{"_index":45,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(tokenstorag",{"_index":821,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(userservic",{"_index":10,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contact",{"_index":614,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contactinfo",{"_index":610,"title":{"interfaces/ContactInfo.html":{}},"body":{"interfaces/ContactInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["contactinfotyp",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contain",{"_index":787,"title":{},"body":{"components/HowToComponent.html":{}}}],["content",{"_index":1374,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["context",{"_index":1490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.servic",{"_index":39,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["controller.service.t",{"_index":992,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["controller.service.ts:12",{"_index":995,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:18",{"_index":1040,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:25",{"_index":998,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:27",{"_index":1049,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:37",{"_index":1003,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:38",{"_index":1047,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:49",{"_index":1052,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:61",{"_index":1057,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:69",{"_index":1038,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:79",{"_index":1034,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:89",{"_index":1054,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:9",{"_index":1031,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["conveni",{"_index":253,"title":{},"body":{"interfaces/ApiError.html":{}}}],["core",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":250,"title":{},"body":{"interfaces/ApiError.html":{}}}],["coverag",{"_index":1453,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{}}}],["credenti",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["ct",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["currentindex",{"_index":1256,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentrol",{"_index":1360,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["currentswipecard",{"_index":1257,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.firstnam",{"_index":1342,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.lastnam",{"_index":1343,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentus",{"_index":837,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["cuser",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["data2",{"_index":897,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3",{"_index":903,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3.photourl",{"_index":899,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["databas",{"_index":507,"title":{},"body":{"classes/Car.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date().getfullyear",{"_index":603,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["date(sessionstorage.getitem('batchend')).tolocaledatestr",{"_index":1406,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dateformatpip",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["datelocationencrypt",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{}}}],["day",{"_index":1381,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dc",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dd't'hh:mm:ss.sss'z",{"_index":1218,"title":{},"body":{"interfaces/User.html":{}}}],["de",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decent",{"_index":1675,"title":{},"body":{"index.html":{}}}],["declar",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":1291,"title":{},"body":{"components/UsercardComponent.html":{}}}],["dedic",{"_index":1164,"title":{},"body":{"injectables/UploadService.html":{}}}],["default",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["degre",{"_index":920,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["delawar",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demonstr",{"_index":883,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["depend",{"_index":280,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":70,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["deseri",{"_index":1041,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["desktop",{"_index":660,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["detail",{"_index":238,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{}}}],["detect",{"_index":1678,"title":{},"body":{"index.html":{}}}],["determin",{"_index":807,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["dev",{"_index":1642,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1639,"title":{},"body":{"index.html":{}}}],["devic",{"_index":671,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["devif",{"_index":1681,"title":{},"body":{"index.html":{}}}],["direct",{"_index":56,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/plac",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1645,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1649,"title":{},"body":{"index.html":{}}}],["discord",{"_index":754,"title":{},"body":{"components/HowToComponent.html":{}}}],["dislik",{"_index":803,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dislikedriv",{"_index":1023,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dislikedriver(riderid",{"_index":1032,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["display",{"_index":713,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["dist",{"_index":1648,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":808,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["distinguish",{"_index":658,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["districtofcolumbia",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":1293,"title":{},"body":{"components/UsercardComponent.html":{}}}],["document",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["document.getelementbyid(\"profilepic\").setattribute(\"src\",this.currentuser.photourl",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid('address').removeattribute('dis",{"_index":1414,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('batchend').removeattribute('dis",{"_index":1415,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('batchend').setattribute('typ",{"_index":1416,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('confirmpassword').removeattribute('dis",{"_index":1413,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('currentoffice').style.display",{"_index":1417,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('currentoffice').textcont",{"_index":1402,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('edit').style.display",{"_index":1420,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('email').removeattribute('dis",{"_index":1411,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessage').removeattribute('hidden",{"_index":1422,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessagelogin",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["document.getelementbyid('firstname').removeattribute('dis",{"_index":1409,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('lastname').removeattribute('dis",{"_index":1410,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('password').removeattribute('dis",{"_index":1412,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('passworderror').style.display",{"_index":1440,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('selectoffice').style.display",{"_index":1418,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('submit').style.display",{"_index":1421,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dom",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["done",{"_index":757,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["draggabl",{"_index":1013,"title":{},"body":{"interfaces/Marker.html":{}}}],["driver",{"_index":501,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["driver'",{"_index":796,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver/passeng",{"_index":799,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver\\'",{"_index":817,"title":{},"body":{"components/HowToComponent.html":{}}}],["driverid",{"_index":1033,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dropdown",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["due",{"_index":650,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{}}}],["dummi",{"_index":1229,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["durat",{"_index":1139,"title":{},"body":{"interfaces/RouteInfo.html":{},"components/UsercardComponent.html":{}}}],["durrent",{"_index":1371,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dynam",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{}}}],["e.g",{"_index":1101,"title":{},"body":{"interfaces/Office.html":{}}}],["e.messag",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2",{"_index":1689,"title":{},"body":{"index.html":{}}}],["e2e/app.po.t",{"_index":367,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":371,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":370,"title":{},"body":{"classes/AppPage.html":{}}}],["earli",{"_index":1680,"title":{},"body":{"index.html":{}}}],["earth",{"_index":963,"title":{},"body":{"interfaces/Location.html":{}}}],["east",{"_index":949,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["east/west",{"_index":965,"title":{},"body":{"interfaces/Location.html":{}}}],["edit",{"_index":1356,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["effort",{"_index":742,"title":{},"body":{"components/HowToComponent.html":{}}}],["element",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["element(by.css('app",{"_index":374,"title":{},"body":{"classes/AppPage.html":{}}}],["element.owner.substring(7",{"_index":582,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["elementref",{"_index":1109,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["elref",{"_index":1112,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["elref.nativeel",{"_index":1121,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["email",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["employe",{"_index":745,"title":{},"body":{"components/HowToComponent.html":{}}}],["employer'",{"_index":871,"title":{},"body":{"components/LandingComponent.html":{}}}],["employer\\'",{"_index":876,"title":{},"body":{"components/LandingComponent.html":{}}}],["empti",{"_index":246,"title":{},"body":{"interfaces/ApiError.html":{},"components/ViewProfileComponent.html":{}}}],["enabl",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["encrypt",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationd",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationdate}}{{registrationkey",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{}}}],["end",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["endflipcard",{"_index":912,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["endflipcard(card",{"_index":915,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["endpoint",{"_index":262,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MapsControllerService.html":{}}}],["enjoy",{"_index":862,"title":{},"body":{"components/LandingComponent.html":{}}}],["ensur",{"_index":551,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["enter",{"_index":737,"title":{},"body":{"components/HowToComponent.html":{}}}],["entri",{"_index":615,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["enum",{"_index":258,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enumer",{"_index":1519,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["err",{"_index":1198,"title":{},"body":{"injectables/UploadService.html":{}}}],["err.error",{"_index":639,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":648,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":233,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["error.model",{"_index":635,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.model.t",{"_index":232,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["errorev",{"_index":641,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":254,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["especi",{"_index":1673,"title":{},"body":{"index.html":{}}}],["evalu",{"_index":1238,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["event",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["eventemitt",{"_index":1113,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["examin",{"_index":1389,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["exampl",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LikesComponent.html":{}}}],["execut",{"_index":1686,"title":{},"body":{"index.html":{}}}],["exist",{"_index":712,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["expir",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["extra",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Marker.html":{}}}],["face",{"_index":922,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["fact",{"_index":845,"title":{},"body":{"components/LandingComponent.html":{}}}],["fail",{"_index":591,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["fals",{"_index":674,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":769,"title":{},"body":{"components/HowToComponent.html":{}}}],["favorit",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'nam",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["favorites.component.css",{"_index":661,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":662,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favoritescompon",{"_index":202,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["featur",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["fellow",{"_index":744,"title":{},"body":{"components/HowToComponent.html":{}}}],["fetch",{"_index":1044,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["field",{"_index":243,"title":{},"body":{"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["file.nam",{"_index":1191,"title":{},"body":{"injectables/UploadService.html":{}}}],["fill",{"_index":762,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["final",{"_index":765,"title":{},"body":{"components/HowToComponent.html":{}}}],["find",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{}}}],["finish",{"_index":767,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["first",{"_index":83,"title":{},"body":{"classes/AddressModel.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["firstnam",{"_index":1211,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["fit",{"_index":748,"title":{},"body":{"components/HowToComponent.html":{}}}],["fl",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["flag",{"_index":1651,"title":{},"body":{"index.html":{}}}],["flipcard",{"_index":913,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["flipcard(card",{"_index":923,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["florida",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focus",{"_index":793,"title":{},"body":{"components/HowToComponent.html":{}}}],["folder",{"_index":1169,"title":{},"body":{"injectables/UploadService.html":{}}}],["follow",{"_index":708,"title":{},"body":{"injectables/GeocodeService.html":{},"index.html":{}}}],["forc",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forgot",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":547,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["format",{"_index":245,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{}}}],["format.pip",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["formsmodul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["front",{"_index":941,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["full",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":521,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["further",{"_index":857,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["ga",{"_index":868,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gener",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["geocod",{"_index":680,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode(address",{"_index":683,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":676,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["geograph",{"_index":999,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["geoloc",{"_index":678,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["georgia",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":978,"title":{"index.html":{}},"body":{"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getcurrentus",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getdislikeddriv",{"_index":1024,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdislikeddrivers(riderid",{"_index":1037,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdist",{"_index":993,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getdistance(address",{"_index":997,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getformattedaddress",{"_index":1105,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getformattedaddress(plac",{"_index":1114,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getfromlink",{"_index":1025,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfromlink(uri",{"_index":1039,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddriv",{"_index":1026,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddrivers(riderid",{"_index":1046,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdriv",{"_index":1027,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdrivers(riderid",{"_index":1048,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getoffic",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getparagraphtext",{"_index":368,"title":{},"body":{"classes/AppPage.html":{}}}],["getregistrationkey",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["getrol",{"_index":1361,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getrout",{"_index":994,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getroute(start",{"_index":1002,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["gets3bucket",{"_index":1170,"title":{},"body":{"injectables/UploadService.html":{}}}],["gettoken",{"_index":1147,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["getus",{"_index":1362,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getuser(email",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["git",{"_index":1653,"title":{},"body":{"index.html":{}}}],["github",{"_index":1683,"title":{},"body":{"index.html":{}}}],["give",{"_index":777,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["given",{"_index":687,"title":{},"body":{"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["go",{"_index":771,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["goe",{"_index":917,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["good",{"_index":746,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["googl",{"_index":679,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocod",{"_index":694,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderresult",{"_index":700,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatu",{"_index":701,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":702,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlng",{"_index":689,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlngliter",{"_index":1017,"title":{},"body":{"interfaces/Marker.html":{}}}],["google.maps.places.autocomplete(this.el",{"_index":1125,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["googlemap",{"_index":1119,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["googlemapsapiwrapp",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["gotten",{"_index":589,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["grab",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["grant",{"_index":1130,"title":{},"body":{"interfaces/Register.html":{}}}],["graph",{"_index":1692,"title":{},"body":{"modules.html":{}}}],["group",{"_index":872,"title":{},"body":{"components/LandingComponent.html":{}}}],["groupm",{"_index":755,"title":{},"body":{"components/HowToComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":375,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1236,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["have",{"_index":1043,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["haven't",{"_index":783,"title":{},"body":{"components/HowToComponent.html":{}}}],["haven\\'t",{"_index":815,"title":{},"body":{"components/HowToComponent.html":{}}}],["hawaii",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["he/sh",{"_index":1373,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["held",{"_index":1391,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["help",{"_index":864,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["here",{"_index":666,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"index.html":{}}}],["hi",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":1143,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["hide",{"_index":1267,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimag",{"_index":1262,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimage(hid",{"_index":1265,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hold",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/ContactInfo.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["home",{"_index":722,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["home(curr",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hook",{"_index":1379,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["hopefulli",{"_index":813,"title":{},"body":{"components/HowToComponent.html":{}}}],["host",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hour",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["hous",{"_index":85,"title":{},"body":{"classes/AddressModel.html":{}}}],["howto",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["howtocompon",{"_index":204,"title":{"components/HowToComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["htmlinputel",{"_index":1117,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["http",{"_index":236,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["http://192.168.60.54:2222",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://ec2",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1643,"title":{},"body":{"index.html":{}}}],["http://semant",{"_index":900,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["http_interceptor",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpclientmodul",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httperrorrespons",{"_index":632,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":630,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheader",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpinterceptor",{"_index":631,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":627,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://s3.u",{"_index":948,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["https://stackoverflow.com/a/46941824",{"_index":1708,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ia",{"_index":1564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["icon",{"_index":1019,"title":{},"body":{"interfaces/Marker.html":{}}}],["id",{"_index":91,"title":{},"body":{"classes/AddressModel.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["idaho",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1671,"title":{},"body":{"index.html":{}}}],["identif",{"_index":1018,"title":{},"body":{"interfaces/Marker.html":{}}}],["identifi",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["if(!this.userservice.isloggedin",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.password",{"_index":1438,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(this.userservice.isloggedin",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ignor",{"_index":716,"title":{},"body":{"components/HowToComponent.html":{}}}],["il",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["illinoi",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imag",{"_index":1163,"title":{},"body":{"injectables/UploadService.html":{},"components/UsercardComponent.html":{}}}],["immedi",{"_index":804,"title":{},"body":{"components/HowToComponent.html":{}}}],["implement",{"_index":44,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["incorrect",{"_index":770,"title":{},"body":{"components/HowToComponent.html":{}}}],["indend",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["indic",{"_index":248,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info.model",{"_index":1010,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["info.model.t",{"_index":612,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["inform",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["infowindow",{"_index":1020,"title":{},"body":{"interfaces/Marker.html":{}}}],["initi",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["initila",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{}}}],["inject",{"_index":31,"title":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1419,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["input",{"_index":725,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["instanceof",{"_index":640,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["instead",{"_index":1193,"title":{},"body":{"injectables/UploadService.html":{}}}],["instructor",{"_index":733,"title":{},"body":{"components/HowToComponent.html":{}}}],["interact",{"_index":996,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["intercept",{"_index":623,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":626,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":621,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interest",{"_index":1239,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":229,"title":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["intro",{"_index":834,"title":{},"body":{"components/LandingComponent.html":{}}}],["invok",{"_index":698,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["iowa",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["it'",{"_index":814,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["it\\'",{"_index":819,"title":{},"body":{"components/HowToComponent.html":{}}}],["item",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["item.info",{"_index":1445,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["item.typ",{"_index":1444,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["js",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["judgment",{"_index":1240,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["jwtinterceptor",{"_index":290,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["kansa",{"_index":1565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1688,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1279,"title":{},"body":{"components/UsercardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kentucki",{"_index":1567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":92,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{}}}],["know",{"_index":1384,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["ks",{"_index":1566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ky",{"_index":1568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":1570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":1014,"title":{},"body":{"interfaces/Marker.html":{}}}],["land",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["landing'},{'nam",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["landing.component.css",{"_index":835,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":836,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":206,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":730,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["lastnam",{"_index":1212,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["latitud",{"_index":691,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["latlng",{"_index":693,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["latlngliter",{"_index":1000,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["left",{"_index":1285,"title":{},"body":{"components/UsercardComponent.html":{}}}],["legend",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["lessen",{"_index":866,"title":{},"body":{"components/LandingComponent.html":{}}}],["librari",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["like",{"_index":657,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["like(index",{"_index":1241,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["likecard",{"_index":911,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likedriv",{"_index":1028,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likedriver(riderid",{"_index":1051,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likes'},{'nam",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likes.component.css",{"_index":878,"title":{},"body":{"components/LikesComponent.html":{}}}],["likes.component.html",{"_index":879,"title":{},"body":{"components/LikesComponent.html":{}}}],["likescompon",{"_index":208,"title":{"components/LikesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["likesmatchweb",{"_index":667,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb'},{'nam",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likesmatchweb.component.css",{"_index":909,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb.component.html",{"_index":910,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchwebcompon",{"_index":210,"title":{"components/LikesmatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["limit",{"_index":1376,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["line",{"_index":84,"title":{},"body":{"classes/AddressModel.html":{}}}],["link",{"_index":512,"title":{},"body":{"classes/Car.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["link.model",{"_index":517,"title":{},"body":{"classes/Car.html":{},"interfaces/User.html":{}}}],["list",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["littl",{"_index":741,"title":{},"body":{"components/HowToComponent.html":{}}}],["live",{"_index":1215,"title":{},"body":{"interfaces/User.html":{}}}],["local",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":132,"title":{"interfaces/Location.html":{}},"body":{"components/AdminComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["location.reload(tru",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["location_obj",{"_index":1122,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["log",{"_index":54,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'nam",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login.component.css",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":212,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":1129,"title":{},"body":{"interfaces/Register.html":{}}}],["longitud",{"_index":692,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["look",{"_index":776,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["louisiana",{"_index":1569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":1664,"title":{},"body":{"index.html":{}}}],["ma",{"_index":1574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":721,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["manag",{"_index":522,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["manual",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["manufactur",{"_index":556,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["map",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["map'},{'nam",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["map(token",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["mapcompon",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapsapiload",{"_index":1110,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["mapscontrollerservic",{"_index":291,"title":{"injectables/MapsControllerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"coverage.html":{},"overview.html":{}}}],["mapto",{"_index":35,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mapto(tru",{"_index":61,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mark",{"_index":685,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":1001,"title":{"interfaces/Marker.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["maryland",{"_index":1571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massachusett",{"_index":1573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1685,"title":{},"body":{"index.html":{}}}],["match",{"_index":67,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches/${riderid",{"_index":1059,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid",{"_index":1065,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid}/${driverid",{"_index":1066,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid",{"_index":1061,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid}/${driverid",{"_index":1063,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matchingcontrollerservic",{"_index":292,"title":{"injectables/MatchingControllerService.html":{}},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":884,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["math.floor(math.random",{"_index":1189,"title":{},"body":{"injectables/UploadService.html":{}}}],["md",{"_index":1572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mean",{"_index":613,"title":{},"body":{"interfaces/ContactInfo.html":{},"injectables/MapsControllerService.html":{}}}],["member",{"_index":873,"title":{},"body":{"components/LandingComponent.html":{}}}],["merg",{"_index":1672,"title":{},"body":{"index.html":{}}}],["messag",{"_index":239,"title":{},"body":{"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["messagelogin",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.innerhtml",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.style.display",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["meter",{"_index":1141,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["mi",{"_index":1576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["michigan",{"_index":1575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleencrypt",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{}}}],["middleencryption.length",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{}}}],["minnesota",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":1518,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing/incorrect",{"_index":244,"title":{},"body":{"interfaces/ApiError.html":{}}}],["mississippi",{"_index":1579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["missouri",{"_index":1581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mm",{"_index":1217,"title":{},"body":{"interfaces/User.html":{}}}],["mn",{"_index":1578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mo",{"_index":1582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":659,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["mode",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["model",{"_index":503,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/address.model",{"_index":1301,"title":{},"body":{"components/UsercardComponent.html":{}}}],["models/api",{"_index":634,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["models/car.model",{"_index":569,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["models/link.model",{"_index":894,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/office.model",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/role.model",{"_index":893,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/rout",{"_index":1009,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["models/swipecard.model",{"_index":891,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["models/user.model",{"_index":570,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["modifi",{"_index":1377,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["modul",{"_index":278,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":1583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":740,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["move",{"_index":738,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/Marker.html":{}}}],["ms",{"_index":1580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":1584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multi",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["nav",{"_index":1075,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":723,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["navbar.component.css",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcompon",{"_index":216,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["navigateto",{"_index":369,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":1448,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["nc",{"_index":1598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nd",{"_index":1600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ne",{"_index":1586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearbi",{"_index":792,"title":{},"body":{"components/HowToComponent.html":{}}}],["nebraska",{"_index":1585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":856,"title":{},"body":{"components/LandingComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["network",{"_index":643,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nevada",{"_index":1587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["newhampshir",{"_index":1589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newjersey",{"_index":1591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newmexico",{"_index":1593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newyork",{"_index":1595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":628,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["next.handle(request",{"_index":830,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pip",{"_index":637,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodul",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["nh",{"_index":1590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nj",{"_index":1592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nm",{"_index":1594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobodi",{"_index":1345,"title":{},"body":{"components/UsercardComponent.html":{}}}],["none",{"_index":952,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["north/west",{"_index":964,"title":{},"body":{"interfaces/Location.html":{}}}],["northcarolina",{"_index":1597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northdakota",{"_index":1599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_logged_in",{"_index":260,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["notifi",{"_index":735,"title":{},"body":{"components/HowToComponent.html":{}}}],["notloggedin",{"_index":259,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{}}}],["null",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["num",{"_index":583,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number",{"_index":86,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/RouteInfo.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["number.parseint(strnum",{"_index":584,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number/etc",{"_index":619,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["nv",{"_index":1588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ny",{"_index":1596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["o",{"_index":1353,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["object",{"_index":543,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["observable.create((observ",{"_index":697,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":704,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.error(statu",{"_index":706,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(result",{"_index":703,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obtain",{"_index":686,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["occur",{"_index":644,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["of(fals",{"_index":64,"title":{},"body":{"guards/AccessGuard.html":{}}}],["offic",{"_index":137,"title":{"interfaces/Office.html":{}},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["office.model",{"_index":1221,"title":{},"body":{"interfaces/User.html":{}}}],["office.nam",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobject",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobjectarray",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["oh",{"_index":1602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ohio",{"_index":1601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":1604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oklahoma",{"_index":1603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":1661,"title":{},"body":{"index.html":{}}}],["on",{"_index":778,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["onc",{"_index":736,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["oninit",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ontap",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["ontap(ev",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["opac",{"_index":1314,"title":{},"body":{"components/UsercardComponent.html":{}}}],["oper",{"_index":544,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["optintodr",{"_index":530,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["option",{"_index":19,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["order",{"_index":782,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oregon",{"_index":1605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["origin",{"_index":1667,"title":{},"body":{"index.html":{}}}],["other",{"_index":863,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1106,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["over",{"_index":656,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["overview",{"_index":1654,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrit",{"_index":1701,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["own",{"_index":502,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["owner",{"_index":504,"title":{},"body":{"classes/Car.html":{}}}],["ownwer",{"_index":561,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["p4ssw0rd",{"_index":1426,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["pa",{"_index":1607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":1492,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":57,"title":{},"body":{"guards/AccessGuard.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["param",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["paramet",{"_index":15,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["params.bucket",{"_index":1206,"title":{},"body":{"injectables/UploadService.html":{}}}],["params.key",{"_index":1207,"title":{},"body":{"injectables/UploadService.html":{}}}],["part",{"_index":726,"title":{},"body":{"components/HowToComponent.html":{}}}],["passcheck",{"_index":1437,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["passeng",{"_index":749,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger'",{"_index":797,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger\\'",{"_index":818,"title":{},"body":{"components/HowToComponent.html":{}}}],["password",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"components/ViewProfileComponent.html":{}}}],["password).topromise().then",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["past",{"_index":918,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["path",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pennsylvania",{"_index":1606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":261,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/User.html":{}}}],["phone",{"_index":751,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["photo",{"_index":1220,"title":{},"body":{"interfaces/User.html":{}}}],["photourl",{"_index":1213,"title":{},"body":{"interfaces/User.html":{}}}],["pictur",{"_index":1225,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["pin",{"_index":794,"title":{},"body":{"components/HowToComponent.html":{}}}],["pipe",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes/d",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"components/ViewProfileComponent.html":{}}}],["place",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["placeid",{"_index":1015,"title":{},"body":{"interfaces/Marker.html":{}}}],["placesautocompletedirect",{"_index":226,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plan",{"_index":761,"title":{},"body":{"components/HowToComponent.html":{}}}],["pleas",{"_index":784,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["plu",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["popul",{"_index":886,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibel",{"_index":1230,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibl",{"_index":72,"title":{},"body":{"classes/AddressModel.html":{}}}],["post",{"_index":1432,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["post(environment.apiurl",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["potenti",{"_index":747,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["pr",{"_index":1609,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["present",{"_index":562,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["previou",{"_index":773,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["previous",{"_index":567,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["price",{"_index":869,"title":{},"body":{"components/LandingComponent.html":{}}}],["primari",{"_index":249,"title":{},"body":{"interfaces/ApiError.html":{}}}],["privat",{"_index":46,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["problem",{"_index":1657,"title":{},"body":{"index.html":{}}}],["process",{"_index":727,"title":{},"body":{"components/HowToComponent.html":{}}}],["prod",{"_index":1650,"title":{},"body":{"index.html":{}}}],["produc",{"_index":509,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["product",{"_index":1652,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["profile.compon",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1357,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.html",{"_index":1358,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.t",{"_index":1355,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:106",{"_index":1375,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:121",{"_index":1367,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:127",{"_index":1385,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:131",{"_index":1368,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:136",{"_index":1394,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:138",{"_index":1369,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":1365,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":1386,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1387,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1393,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":1392,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1383,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1378,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1380,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1382,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1390,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":1388,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1370,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:71",{"_index":1366,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":1372,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile/view",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":844,"title":{},"body":{"components/LandingComponent.html":{}}}],["project",{"_index":1635,"title":{},"body":{"index.html":{}}}],["promis",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["properti",{"_index":75,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["protractor",{"_index":372,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":252,"title":{},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"overview.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["public",{"_index":663,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["puerto",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["puertorico",{"_index":1608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pull",{"_index":1670,"title":{},"body":{"index.html":{}}}],["push",{"_index":1665,"title":{},"body":{"index.html":{}}}],["pushed.befor",{"_index":1669,"title":{},"body":{"index.html":{}}}],["put",{"_index":944,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["rc.0",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":775,"title":{},"body":{"components/HowToComponent.html":{}}}],["reach",{"_index":811,"title":{},"body":{"components/HowToComponent.html":{}}}],["reactiveformsmodul",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1690,"title":{},"body":{"index.html":{}}}],["reason",{"_index":709,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["redirect",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["refresh",{"_index":546,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["refreshfield",{"_index":533,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reg",{"_index":588,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["region",{"_index":1186,"title":{},"body":{"injectables/UploadService.html":{}}}],["regis",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["regist",{"_index":559,"title":{"interfaces/Register.html":{}},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"coverage.html":{}}}],["registr",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interfaces/Register.html":{}}}],["registration'},{'nam",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["registration.compon",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration.component.css",{"_index":523,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.html",{"_index":524,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.t",{"_index":519,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registration.component.ts:108",{"_index":538,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:129",{"_index":545,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:19",{"_index":568,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:25",{"_index":558,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:29",{"_index":554,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:34",{"_index":557,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:39",{"_index":564,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:44",{"_index":565,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:49",{"_index":560,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:52",{"_index":536,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:63",{"_index":541,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:70",{"_index":548,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:94",{"_index":550,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration/car",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registrationkey",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["relev",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["relic",{"_index":566,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reload",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["remov",{"_index":1055,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["repeat",{"_index":806,"title":{},"body":{"components/HowToComponent.html":{}}}],["repo",{"_index":1656,"title":{},"body":{"index.html":{}}}],["repres",{"_index":71,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["represent",{"_index":620,"title":{},"body":{"interfaces/ContactInfo.html":{},"injectables/UploadService.html":{}}}],["request",{"_index":237,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["request.clon",{"_index":826,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requir",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reserv",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["reset",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetcar",{"_index":534,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resetus",{"_index":535,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resolv",{"_index":1682,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":1704,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["respect",{"_index":774,"title":{},"body":{"components/HowToComponent.html":{}}}],["respons",{"_index":235,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["reston",{"_index":1102,"title":{},"body":{"interfaces/Office.html":{}}}],["result",{"_index":66,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/UploadService.html":{}}}],["return",{"_index":27,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["revatur",{"_index":717,"title":{},"body":{"components/HowToComponent.html":{}}}],["reversegeocod",{"_index":681,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reversegeocode(latlng",{"_index":688,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["review",{"_index":766,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rhodeisland",{"_index":1610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ri",{"_index":1611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rico",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ride",{"_index":852,"title":{},"body":{"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["rideforc",{"_index":718,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["rider",{"_index":855,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riderid",{"_index":1036,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["rideshar",{"_index":781,"title":{},"body":{"components/HowToComponent.html":{}}}],["ridesharecli",{"_index":1634,"title":{},"body":{"index.html":{}}}],["rideswip",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RideswipeComponent.html":{}}}],["rideswipe'},{'nam",{"_index":219,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rideswipe.component.css",{"_index":1133,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipe.component.html",{"_index":1134,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipecompon",{"_index":218,"title":{"components/RideswipeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1287,"title":{},"body":{"components/UsercardComponent.html":{}}}],["role",{"_index":892,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role.model",{"_index":1223,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":41,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rotat",{"_index":925,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(0deg",{"_index":937,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(180deg",{"_index":940,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(90deg",{"_index":938,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rout",{"_index":26,"title":{"routes.html":{}},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"overview.html":{},"routes.html":{}}}],["route.data.requireslogin",{"_index":59,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routeinfo",{"_index":1008,"title":{"interfaces/RouteInfo.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routerlink",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routing.modul",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["run",{"_index":1640,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":36,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["rydeforc",{"_index":1177,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3",{"_index":1165,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3/65600312303b.png",{"_index":951,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["safe",{"_index":870,"title":{},"body":{"components/LandingComponent.html":{}}}],["save",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"components/ViewProfileComponent.html":{}}}],["savetoken",{"_index":1148,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["savetoken(token",{"_index":1152,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sc",{"_index":1613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffold",{"_index":1644,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1313,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scale(1.2",{"_index":1316,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scroll",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sd",{"_index":1615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1181,"title":{},"body":{"injectables/UploadService.html":{}}}],["second",{"_index":89,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/RouteInfo.html":{}}}],["secretaccesskey",{"_index":1184,"title":{},"body":{"injectables/UploadService.html":{}}}],["section",{"_index":728,"title":{},"body":{"components/HowToComponent.html":{}}}],["see",{"_index":670,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["select",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["send",{"_index":540,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/MapsControllerService.html":{}}}],["sent",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["serv",{"_index":1641,"title":{},"body":{"index.html":{}}}],["server",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"index.html":{}}}],["servic",{"_index":52,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/api/map",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/match",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/us",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/auth.servic",{"_index":636,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["session",{"_index":838,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessioncheck",{"_index":839,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorag",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.clear",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{}}}],["sessionstorage.getitem('address",{"_index":1405,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('firstnam",{"_index":1396,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('lastnam",{"_index":1398,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('rol",{"_index":1429,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('useremail",{"_index":1400,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1159,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.length",{"_index":850,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.removeitem(token_key",{"_index":1157,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.setitem('act",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('address",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('batchend",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('firstnam",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('id",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('lastnam",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('rol",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('useremail",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('userpassword",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem(token_key",{"_index":1158,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["set",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sethead",{"_index":827,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["seven",{"_index":750,"title":{},"body":{"components/HowToComponent.html":{}}}],["show",{"_index":795,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["shown",{"_index":805,"title":{},"body":{"components/HowToComponent.html":{}}}],["side",{"_index":642,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sign",{"_index":853,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["signout",{"_index":1149,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["simpli",{"_index":665,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{}}}],["site",{"_index":833,"title":{},"body":{"components/LandingComponent.html":{}}}],["skype",{"_index":753,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slack",{"_index":752,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["someth",{"_index":1235,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["southcarolina",{"_index":1612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southdakota",{"_index":1614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spec\\.t",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":256,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"miscellaneous/enumerations.html":{}}}],["specifi",{"_index":616,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["spent",{"_index":1674,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.model.t",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../link.model.t",{"_index":1700,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.model.t",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.model.t",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.t",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.storage.t",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":1702,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/accountinfo/accountinfo.component.t",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:17",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:19",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:21",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:23",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:26",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:35",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:40",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:50",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:61",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/car",{"_index":518,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.t",{"_index":655,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:12",{"_index":664,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/favorites/favorites.component.ts:20",{"_index":668,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/how",{"_index":710,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.t",{"_index":831,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.ts:16",{"_index":843,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:18",{"_index":840,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:29",{"_index":841,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:48",{"_index":842,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/likes/likes.component.t",{"_index":877,"title":{},"body":{"components/LikesComponent.html":{},"coverage.html":{}}}],["src/app/components/likes/likes.component.ts:22",{"_index":882,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:34",{"_index":888,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:39",{"_index":885,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.t",{"_index":908,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:104",{"_index":924,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:115",{"_index":916,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:45",{"_index":914,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:57",{"_index":927,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:62",{"_index":926,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:43",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/map/map.component.t",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:70",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:98",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.t",{"_index":1132,"title":{},"body":{"components/RideswipeComponent.html":{},"coverage.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:10",{"_index":1135,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:14",{"_index":1136,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/usercard/usercard.component.t",{"_index":1251,"title":{},"body":{"components/UsercardComponent.html":{},"coverage.html":{}}}],["src/app/components/usercard/usercard.component.ts:121",{"_index":1266,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:132",{"_index":1270,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:163",{"_index":1273,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:187",{"_index":1275,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:37",{"_index":1289,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:39",{"_index":1297,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:45",{"_index":1283,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:47",{"_index":1282,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:49",{"_index":1278,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:51",{"_index":1281,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:53",{"_index":1299,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:56",{"_index":1295,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:58",{"_index":1264,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:68",{"_index":1284,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:73",{"_index":1268,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.t",{"_index":1224,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:130",{"_index":1349,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:142",{"_index":1348,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:39",{"_index":1347,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:49",{"_index":1352,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:54",{"_index":1351,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:91",{"_index":1350,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/view",{"_index":1354,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["src/app/directives/plac",{"_index":1103,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["src/app/guards/access.guard.t",{"_index":5,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:16",{"_index":14,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:21",{"_index":25,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/models/address.model.t",{"_index":69,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/app/models/address.model.ts:10",{"_index":93,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:12",{"_index":94,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:14",{"_index":95,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:4",{"_index":90,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:6",{"_index":82,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:8",{"_index":88,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/api",{"_index":231,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/car.model.t",{"_index":499,"title":{},"body":{"classes/Car.html":{},"coverage.html":{}}}],["src/app/models/car.model.ts:13",{"_index":513,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:15",{"_index":508,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:17",{"_index":511,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:19",{"_index":515,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:9",{"_index":506,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/contact",{"_index":611,"title":{},"body":{"interfaces/ContactInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/interest.model.t",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/link.model.t",{"_index":1703,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/models/location.model.t",{"_index":962,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/models/marker.model.t",{"_index":1012,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["src/app/models/office.model.t",{"_index":1099,"title":{},"body":{"interfaces/Office.html":{},"coverage.html":{}}}],["src/app/models/register.model.t",{"_index":1128,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/role.model.t",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/rout",{"_index":1137,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/models/state.model.t",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/swipecard.model.t",{"_index":1142,"title":{},"body":{"classes/SwipecardModel.html":{},"coverage.html":{}}}],["src/app/models/swipecard.model.ts:6",{"_index":1144,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/swipecard.model.ts:8",{"_index":1145,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/user.model.t",{"_index":1209,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/api/map",{"_index":991,"title":{},"body":{"injectables/MapsControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/match",{"_index":1022,"title":{},"body":{"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/us",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:103",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:40",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:61",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/geocode.service.t",{"_index":677,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["src/app/services/geocode.service.ts:15",{"_index":682,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:29",{"_index":690,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:51",{"_index":684,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/upload.service.t",{"_index":1161,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:13",{"_index":1178,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:15",{"_index":1172,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:26",{"_index":1174,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:42",{"_index":1176,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/utils/error.interceptor.t",{"_index":622,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:17",{"_index":625,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:20",{"_index":629,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.t",{"_index":820,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:12",{"_index":822,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:15",{"_index":823,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/token.storage.t",{"_index":1146,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/token.storage.ts:11",{"_index":1154,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:16",{"_index":1153,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:21",{"_index":1151,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:8",{"_index":1150,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/types.t",{"_index":1705,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.t",{"_index":1487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":720,"title":{"index.html":{}},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state('back",{"_index":939,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('cent",{"_index":1303,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('front",{"_index":935,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('left",{"_index":1305,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('on",{"_index":1312,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('right",{"_index":1308,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('two",{"_index":1315,"title":{},"body":{"components/UsercardComponent.html":{}}}],["statement",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":240,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["step",{"_index":1655,"title":{},"body":{"index.html":{}}}],["stick",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["storag",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":1179,"title":{},"body":{"injectables/UploadService.html":{},"index.html":{}}}],["street",{"_index":87,"title":{},"body":{"classes/AddressModel.html":{}}}],["string",{"_index":81,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strnum",{"_index":581,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["structur",{"_index":890,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["style",{"_index":928,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["styleurl",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sub",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["submit",{"_index":604,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["submitchang",{"_index":1363,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["success",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["successfuli",{"_index":780,"title":{},"body":{"components/HowToComponent.html":{}}}],["such",{"_index":242,"title":{},"body":{"interfaces/ApiError.html":{}}}],["support",{"_index":520,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"modules.html":{}}}],["sure",{"_index":542,"title":{},"body":{"components/CarRegistrationComponent.html":{},"index.html":{}}}],["svg",{"_index":1691,"title":{},"body":{"modules.html":{}}}],["swipcard",{"_index":887,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["swipe",{"_index":1234,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["swipe(act",{"_index":1269,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipe_act",{"_index":1258,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipebio",{"_index":1294,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecard",{"_index":880,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["swipecardbio",{"_index":1259,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmain",{"_index":1260,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmodel",{"_index":889,"title":{"classes/SwipecardModel.html":{}},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["swipeleft",{"_index":1286,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipemain",{"_index":1296,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swiperight",{"_index":1288,"title":{},"body":{"components/UsercardComponent.html":{}}}],["switch",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["switchrol",{"_index":1364,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["system",{"_index":74,"title":{},"body":{"classes/AddressModel.html":{},"components/CarRegistrationComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tabl",{"_index":563,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1004,"title":{},"body":{"injectables/MapsControllerService.html":{},"index.html":{}}}],["tap",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["templat",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["tennesse",{"_index":1616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["texa",{"_index":1618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text",{"_index":907,"title":{},"body":{"components/LikesComponent.html":{}}}],["th",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["thank",{"_index":1707,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["themselv",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["there'",{"_index":1344,"title":{},"body":{"components/UsercardComponent.html":{}}}],["there\\'",{"_index":1346,"title":{},"body":{"components/UsercardComponent.html":{}}}],["think",{"_index":802,"title":{},"body":{"components/HowToComponent.html":{}}}],["this.address2",{"_index":1404,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.addressselect.emit(this.getformattedaddress(autocomplete.getplac",{"_index":1127,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.animst",{"_index":1333,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.animthumbst",{"_index":1331,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.authenticator(email",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.authenticate(this.useremail",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":653,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.batchend",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.car",{"_index":573,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmak",{"_index":594,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmodel",{"_index":596,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject",{"_index":572,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.id",{"_index":592,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.mak",{"_index":593,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.model",{"_index":595,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.own",{"_index":597,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.year",{"_index":599,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.length",{"_index":575,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.push(el",{"_index":585,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.caryear",{"_index":600,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.confirmpassword",{"_index":1439,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentindex",{"_index":1341,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentrol",{"_index":1423,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentswipecard",{"_index":1327,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentus",{"_index":847,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.datelocationencrypt",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.el",{"_index":1120,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.encryptedlocationd",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.firstnam",{"_index":1395,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.fold",{"_index":1188,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.geocod",{"_index":696,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocoder.geocod",{"_index":699,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.getoffic",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.getrol",{"_index":1408,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.gets3bucket().upload(param",{"_index":1197,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.getus",{"_index":1407,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.http",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete[]>(environment.apiurl",{"_index":1064,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.get(environment.apiurl",{"_index":1011,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["this.http.get[]>(environment.apiurl",{"_index":1058,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.put[]>(environment.apiurl",{"_index":1062,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.isloggedin",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.lastnam",{"_index":1397,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.likecards.push(card",{"_index":953,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.mapsapiloader.load().then",{"_index":1123,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.matchservice.dislikedriver(this.currentuser.id",{"_index":1249,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getlikeddrivers(this.currentuser.id).subscrib",{"_index":896,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.matchservice.getmatchingdrivers(this.currentuser.id).subscrib",{"_index":1231,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.likedriver(this.currentuser.id",{"_index":1247,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.undislikedriver(this.currentuser.id",{"_index":1245,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.unlikedriver(this.currentuser.id",{"_index":1248,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.officeobject",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.officeobjectarray",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.password",{"_index":1441,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.password).subscrib",{"_index":1427,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.postservice.getposts().then((allpost",{"_index":1431,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.registrationkey",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.resetus",{"_index":576,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.route.navigate([\"/land",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.route.navigate(['/land",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.url",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":63,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.sess",{"_index":851,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.sessioncheck",{"_index":849,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.swipe_action.left",{"_index":1337,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipe_action.right",{"_index":1272,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.add('hidden",{"_index":1329,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.remove('hidden",{"_index":1330,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.length",{"_index":1326,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.push(card",{"_index":905,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["this.swipecards.splice(this.currentindex",{"_index":1340,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[0",{"_index":1328,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[this.currentindex].user.id).subscrib",{"_index":1336,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.thumbimg",{"_index":1334,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":825,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.tokenstorage.savetoken(token",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.url",{"_index":1204,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.us",{"_index":1436,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.usernam",{"_index":1399,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userobject",{"_index":590,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.cars.push(this.carobject",{"_index":601,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id",{"_index":578,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id.tostr",{"_index":598,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userpass",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users.push(card",{"_index":1233,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users.splice(index",{"_index":1250,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].choos",{"_index":1244,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].user.id).subscrib",{"_index":1246,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.createcar(this.carobject).subscribe(car",{"_index":602,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getallcars().subscribe(c",{"_index":579,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getalloffices().subscribe(data",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getallusers().subscribe((x",{"_index":1435,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getcurrentuser().pip",{"_index":60,"title":{},"body":{"guards/AccessGuard.html":{}}}],["this.userservice.getcurrentuser().subscrib",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(us",{"_index":586,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getcurrentuserobservable().subscrib",{"_index":846,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getofficebylink(this.currentuser.office).tostr",{"_index":1403,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getregistrationkey().subscrib",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getuserbyemail(email).subscrib",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuserbyemail(email).then((x",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update().subscrib",{"_index":1424,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.updatepassword(this.currentuser.id",{"_index":1425,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["those",{"_index":1219,"title":{},"body":{"interfaces/User.html":{}}}],["thrash",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["three",{"_index":759,"title":{},"body":{"components/HowToComponent.html":{}}}],["throwerror",{"_index":633,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(apierror",{"_index":654,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err.error",{"_index":646,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thu",{"_index":768,"title":{},"body":{"components/HowToComponent.html":{}}}],["thumb",{"_index":1276,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbanimdon",{"_index":1263,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbimg",{"_index":1261,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbnail",{"_index":1300,"title":{},"body":{"components/UsercardComponent.html":{}}}],["time",{"_index":1007,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"index.html":{}}}],["titl",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["tn",{"_index":1617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to'},{'nam",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["to.compon",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["to.component.css",{"_index":714,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.html",{"_index":715,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.t",{"_index":711,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["to/how",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"coverage.html":{}}}],["tobase64str",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{}}}],["today",{"_index":854,"title":{},"body":{"components/LandingComponent.html":{}}}],["token",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{}}}],["token.storag",{"_index":824,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["token_key",{"_index":1155,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorag",{"_index":409,"title":{"injectables/TokenStorage.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/TokenStorage.html":{},"coverage.html":{}}}],["total",{"_index":1140,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["track",{"_index":1280,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trainer",{"_index":1131,"title":{},"body":{"interfaces/Register.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":936,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transit",{"_index":929,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transition('on",{"_index":1318,"title":{},"body":{"components/UsercardComponent.html":{}}}],["transition('two",{"_index":1320,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex",{"_index":1306,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(0",{"_index":1304,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(200",{"_index":1309,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trash",{"_index":1242,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["travel",{"_index":1006,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["tree",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["trigger",{"_index":930,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('flip",{"_index":934,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('pop",{"_index":1311,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trigger('slid",{"_index":1302,"title":{},"body":{"components/UsercardComponent.html":{}}}],["true",{"_index":65,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":788,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["tx",{"_index":1619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.model.t",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":1698,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1666,"title":{},"body":{"index.html":{}}}],["ui.com/images/avatar/large/chris.jpg",{"_index":901,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["unauthor",{"_index":263,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["unavail",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefin",{"_index":574,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["under",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["underneath",{"_index":724,"title":{},"body":{"components/HowToComponent.html":{}}}],["undislikedriv",{"_index":1029,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["undislikedriver(riderid",{"_index":1053,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unit",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["unknown",{"_index":933,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["unlik",{"_index":1035,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriv",{"_index":1030,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriver(riderid",{"_index":1056,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unus",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["up",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["updat",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["upload",{"_index":1162,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfil",{"_index":1171,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(fil",{"_index":1175,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservic",{"_index":1160,"title":{"injectables/UploadService.html":{}},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["upresult",{"_index":1196,"title":{},"body":{"injectables/UploadService.html":{}}}],["upresult.fail",{"_index":1202,"title":{},"body":{"injectables/UploadService.html":{}}}],["uri",{"_index":1045,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["url",{"_index":48,"title":{},"body":{"guards/AccessGuard.html":{},"classes/Car.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["us",{"_index":55,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["useclass",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["usepromis",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":53,"title":{"interfaces/User.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'",{"_index":617,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{}}}],["user.email",{"_index":1450,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.firstnam",{"_index":1447,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.id",{"_index":1446,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.lastnam",{"_index":1449,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.model",{"_index":516,"title":{},"body":{"classes/Car.html":{},"classes/SwipecardModel.html":{}}}],["user.rol",{"_index":1451,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.user.address",{"_index":958,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.batchend",{"_index":959,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.email",{"_index":957,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.firstnam",{"_index":955,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.lastnam",{"_index":956,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user\\'",{"_index":1452,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["usercard",{"_index":400,"title":{"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["usercard'},{'nam",{"_index":221,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usercard.component.css",{"_index":1252,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercard.component.html",{"_index":1253,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercardcompon",{"_index":220,"title":{"components/UsercardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercontrollerservic",{"_index":11,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":577,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{}}}],["userlink",{"_index":895,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb",{"_index":1226,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb'},{'nam",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usermatchweb.component.css",{"_index":1228,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.html",{"_index":1227,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchwebcompon",{"_index":222,"title":{"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":731,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["username/phon",{"_index":618,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["userobject",{"_index":531,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["userpass",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofil",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/{userid",{"_index":1050,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["userservic",{"_index":20,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ut",{"_index":1621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utah",{"_index":1620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{}}}],["utils/error.interceptor",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/jwt.interceptor",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/token.storag",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["va",{"_index":1625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valu",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["variabl",{"_index":1485,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":729,"title":{},"body":{"components/HowToComponent.html":{}}}],["vehicl",{"_index":510,"title":{},"body":{"classes/Car.html":{},"components/HowToComponent.html":{}}}],["venmo",{"_index":1214,"title":{},"body":{"interfaces/User.html":{}}}],["verdict",{"_index":1237,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["vermont",{"_index":1622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["via",{"_index":1687,"title":{},"body":{"index.html":{}}}],["view",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["viewchild",{"_index":1292,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipebio",{"_index":1322,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipemain",{"_index":1321,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewprofilecompon",{"_index":224,"title":{"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virginia",{"_index":1624,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":904,"title":{},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{}}}],["void",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["vt",{"_index":1623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wa",{"_index":1627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["want",{"_index":58,"title":{},"body":{"guards/AccessGuard.html":{},"components/LandingComponent.html":{}}}],["washington",{"_index":1626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["way",{"_index":865,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["web",{"_index":1168,"title":{},"body":{"injectables/UploadService.html":{}}}],["westvirginia",{"_index":1628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whether",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["whichev",{"_index":812,"title":{},"body":{"components/HowToComponent.html":{}}}],["wi",{"_index":1631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window.location.reload(tru",{"_index":1428,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["window.screen.width",{"_index":675,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["wisconsin",{"_index":1630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wish",{"_index":798,"title":{},"body":{"components/HowToComponent.html":{}}}],["within",{"_index":758,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["without",{"_index":1042,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["work",{"_index":552,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["wv",{"_index":1629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wy",{"_index":1633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wyom",{"_index":1632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["x.active.tostr",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.address",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.batchend",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.firstnam",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.id.tostr",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.lastnam",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.role",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["xcvf",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{}}}],["ye",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["year",{"_index":505,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["you'r",{"_index":861,"title":{},"body":{"components/LandingComponent.html":{}}}],["you'v",{"_index":1668,"title":{},"body":{"index.html":{}}}],["you\\'r",{"_index":875,"title":{},"body":{"components/LandingComponent.html":{}}}],["yourself",{"_index":743,"title":{},"body":{"components/HowToComponent.html":{}}}],["ype",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yyyi",{"_index":1216,"title":{},"body":{"interfaces/User.html":{}}}],["zip",{"_index":80,"title":{},"body":{"classes/AddressModel.html":{}}}],["zone.j",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zxcjhd5+grqjenpwbs31mtoy1gsetewyuhsm5h6p",{"_index":1185,"title":{},"body":{"injectables/UploadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessGuard.html":{"url":"guards/AccessGuard.html","title":"guard - AccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/access.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/access.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/access.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { UserControllerService } from '../../app/services/api/user-controller.service';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class AccessGuard implements CanActivate {\n    constructor(private userService: UserControllerService, private router: Router) {}\n  \n    // RouterStateSnapshot to cache the url attempted to be accessed on the auth service\n    // after user logs in, use this url to direct them to the page they want\n    canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): boolean | Observable {\n      if (route.data.requiresLogin) {\n        return this.userService.getCurrentUser().pipe(\n          mapTo(true),\n          catchError(_ => {\n            this.router.navigate(['login']);\n            return of(false);\n          })\n        );\n      }\n      return true;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents possible adress of Users of the system \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Optional\n                                address2\n                            \n                            \n                                addressID\n                            \n                            \n                                city\n                            \n                            \n                                state\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:6\n                            \n                        \n\n                \n                    \n                        First line of the address (house number, Street name) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:8\n                            \n                        \n\n                \n                    \n                        Second line of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addressID:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:4\n                            \n                        \n\n                \n                    \n                        The id (and possible key) of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:10\n                            \n                        \n\n                \n                    \n                        THe City of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:12\n                            \n                        \n\n                \n                    \n                        The State the address is in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:14\n                            \n                        \n\n                \n                    \n                        Represents the zip-code \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressModel {\n    /** The id (and possible key) of the address */\n    addressID: number;\n    /** First line of the address (house number, Street name) */\n    address: string;\n    /** Second line of the address */\n    address2?: string;\n    /** THe City of the address */\n    city: string;\n    /** The State the address is in */\n    state: string;\n    /** Represents the zip-code */\n    zip: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Allows extra features reserved for Administrators\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEnd\n                            \n                            \n                                encryptedLocationDate\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                registrationKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateLocationEncryption\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRegistrationKey\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                            Sets up Component with User Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows User Services to be utilized\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateLocationEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \ndateLocationEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Sets up a date and location encryption key \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Retrieves all offices, called on component initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRegistrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRegistrationKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Alows a New registration key to be used for New User Registration \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initilaizes the Component with the offices \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:21\n                            \n                        \n\n                \n                    \n                        When the current batch ends \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encryptedLocationDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encryptedLocationDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                        Holds the office and batch end \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Holds th current office being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds a list of offices \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registrationKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:17\n                            \n                        \n\n                \n                    \n                        Holds a registration key that new users can use to regiser themselves \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Office } from '../../models/office.model';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n/**\n * Allows extra features reserved for Administrators\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  /** Holds a registration key that new users can use to regiser themselves */\n  registrationKey: string;\n  /** Holds a list of offices */\n  officeObjectArray: Office[] = [];\n  /** When the current batch ends */\n  batchEnd: string;\n  /** Holds th current office being viewed */\n  officeObject;\n\n  /** Holds the office and batch end */\n  encryptedLocationDate: string;\n\n  /**\n   * Sets up Component with User Service\n   * @param {UserControllerService} userService - Allows User Services to be utilized\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /** Initilaizes the Component with the offices */\n  ngOnInit() {\n    this.getOffices();\n  }\n\n  /** Alows a New registration key to be used for New User Registration */\n  getRegistrationKey() {\n    this.userService.getRegistrationKey().subscribe(\n      data => {\n        this.registrationKey = data;\n        this.dateLocationEncryption();\n      }\n    );\n  }\n\n  /** Sets up a date and location encryption key */\n  dateLocationEncryption() {\n    let middleEncryption = btoa(this.officeObject + '~' + this.batchEnd);\n    if (middleEncryption.length != 28) {\n      middleEncryption = 'XcvF' + middleEncryption;\n    }\n    this.encryptedLocationDate = middleEncryption;\n  }\n\n  /**\n   * Retrieves all offices, called on component initialization\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n      this.officeObject = '';\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Generate Key\n      This key expires after 2 hours\n      \n        \n          Batch End\n        \n        \n      \n      \n        \n          Office Address\n        \n        \n          \n            Select Office\n            {{office.name}}\n          \n        \n      \n      Get Key\n      \n      \n      \n      \n        {{encryptedLocationDate}}{{registrationKey}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Generate Key      This key expires after 2 hours                        Batch End                                              Office Address                                      Select Office            {{office.name}}                              Get Key                                {{encryptedLocationDate}}{{registrationKey}}            '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api-error.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an error that accompanied the response to an HTTP request\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Any additional details, such which fields were missing/incorrect in a\nrequest format error. An empty array indicates that there are no such\ndetails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary message corresponding to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP status that accompanied the error. This is not returned by the\nAPI, but is provided as a convenience by the ErrorInterceptor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ApiErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiErrorType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the error, if a specific type can be associated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n    /**\n     * The primary message corresponding to the error.\n     */\n    message: String;\n    /**\n     * Any additional details, such which fields were missing/incorrect in a\n     * request format error. An empty array indicates that there are no such\n     * details.\n     */\n    details: String[];\n    /**\n   * The HTTP status that accompanied the error. This is not returned by the\n   * API, but is provided as a convenience by the ErrorInterceptor.\n   */\n    status: number;\n    /**\n    * The type of the error, if a specific type can be associated.\n    */\n    type?: ApiErrorType;\n}\n\n/**\n * A specific type of error which can be returned by the API.\n */\nexport enum ApiErrorType {\n    /**\n     * The user is not logged in.\n     */\n    NotLoggedIn = 'NOT_LOGGED_IN',\n    /**\n     * The user is logged in, but does not have permission to access an endpoint.\n     */\n    Unauthorized = 'UNAUTHORIZED',\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonTap(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  password: string;\n  confirmPassword: string;\n\n  onTap(event) {\n    console.log(event);\n  }\n\n \n}\n\n\n\n    \n\n    \n        \n\n\n \n \n -->\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountinfoComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CarRegistrationComponent\n                            \n                            \n                                FavoritesComponent\n                            \n                            \n                                HowToComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                LikesComponent\n                            \n                            \n                                LikesmatchwebComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                PlacesAutocompleteDirective\n                            \n                            \n                                RideswipeComponent\n                            \n                            \n                                UsercardComponent\n                            \n                            \n                                UsermatchwebComponent\n                            \n                            \n                                ViewProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                            \n                                     MapsControllerService\n                            \n                            \n                                     MatchingControllerService\n                            \n                            \n                                     UserControllerService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RideswipeComponent } from './components/rideswipe/rideswipe.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UsercardComponent } from './components/usercard/usercard.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { MapComponent } from './components/map/map.component';\nimport { AgmCoreModule, GoogleMapsAPIWrapper, CircleManager } from '@agm/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { UsermatchwebComponent } from './components/usermatchweb/usermatchweb.component';\nimport { LikesmatchwebComponent } from './components/likesmatchweb/likesmatchweb.component';\nimport { UserControllerService } from './services/api/user-controller.service';\nimport { MapsControllerService } from './services/api/maps-controller.service';\nimport { MatchingControllerService } from './services/api/matching-controller.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { HttpClientModule, HttpClient, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PlacesAutocompleteDirective } from './directives/places-autocomplete/places-autocomplete.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AccountinfoComponent } from './components/accountinfo/accountinfo.component';\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\nimport { JwtInterceptor } from './utils/jwt.interceptor';\nimport { ErrorInterceptor } from './utils/error.interceptor';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CarRegistrationComponent } from './components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from './components/view-profile/view-profile.component';\n// import { DateFormatPipe } from './pipes/date-format.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RideswipeComponent,\n    LandingComponent,\n    UsercardComponent,\n    HowToComponent,\n    MapComponent,\n    NavbarComponent,\n    LoginComponent,\n    LikesComponent,\n    UsermatchwebComponent,\n    LikesmatchwebComponent,\n    PlacesAutocompleteDirective,\n    FavoritesComponent,\n    AccountinfoComponent,\n    AdminComponent,\n    CarRegistrationComponent,\n    ViewProfileComponent,\n    // DateFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AnimateOnScrollModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBXWXgWzxhyvz9JyN9SrHgGOzi7VcU5G3g',\n      libraries: ['places'],\n    }),\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    NgbActiveModal,\n    MapsControllerService,\n    UserControllerService,\n    AuthService,\n    MatchingControllerService,\n    GoogleMapsAPIWrapper,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from '../components/how-to/how-to.component';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { MapComponent } from '../components/map/map.component';\nimport { RideswipeComponent } from '../components/rideswipe/rideswipe.component';\nimport { UsercardComponent } from '../components/usercard/usercard.component';\nimport { FavoritesComponent } from '../components/favorites/favorites.component';\nimport { AccountinfoComponent } from '../components/accountinfo/accountinfo.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CarRegistrationComponent } from '../components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from '../components/view-profile/view-profile.component';\n\n/**\n * This is where we set our routerLink attribute.\n * For example...\n * About\n * creates an  element of class \"dropdown-item\" that will \n * refer to these routes to find which component to route to.\n */\nexport const routes: Routes = [\n  { path: '',  pathMatch: 'full', redirectTo: 'landing' },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'landing', component: LandingComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent },\n  { path: 'accountInfo', component: AccountinfoComponent},\n  { path: 'rideswipe', component: RideswipeComponent },\n  { path: 'userCard', component: UsercardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'cars', component: CarRegistrationComponent },\n  { path: 'userProfile', component: ViewProfileComponent}\n  //{ path: 'logout', redirectTo: 'landing' }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows Users to authenticate themselves with the server\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                authenticator\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserControllerService, tokenStorage: TokenStorage, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            Sets up the Authentication service with the required dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nOur http client dependency for making http requests\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService used to grab any user information from the API\n\n\n                                                        \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to save our generated token locally\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nenables navigation between components (does not appear to be used)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticate(email: string, password: string, usePromise?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in and if successful, sets the sessionStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe user identifier\n\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe password of the account\n\n\n                                                        \n                                                \n                                                \n                                                        usePromise\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                \n(TESTING) whether to use the promise version or stick with observable\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticator\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticator(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The email address to be sent from the view to the API\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The password to be sent from the view to the API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nUser mapped to token storage now\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Logs the user out of the service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap, map } from 'rxjs/operators';\nimport { UserControllerService } from './api/user-controller.service';\nimport { TokenStorage } from './../utils/token.storage';\nimport { Router } from '@angular/router';\n\n/**\n * Allows Users to authenticate themselves with the server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * Sets up the Authentication service with the required dependencies\n   * @param {HttpClient} http - Our http client dependency for making http requests\n   * @param {UserControllerService} userService - Service used to grab any user information from the API\n   * @param {TokenStorage} tokenStorage - Used to save our generated token locally\n   * @param {Router} route - enables navigation between components (does not appear to be used)\n   */\n  constructor(\n    private http: HttpClient,\n    private userService: UserControllerService,\n    private tokenStorage: TokenStorage,\n    private route: Router\n  ) { }\n\n  /**\n   * Attempts to log the user in\n   * @param email The email address to be sent from the view to the API\n   * @param password The password to be sent from the view to the API\n   * @returns {null} - User mapped to token storage now\n   */\n  authenticator(email: string, password: string) {\n    const credentials = { email, password };\n    console.log('in authenticate');\n    return this.http\n      .post(environment.apiUrl + '/login', credentials)\n      .pipe(\n        map(token => {\n          console.log('Saving token');\n          this.tokenStorage.saveToken(token);\n          this.userService.getCurrentUser().subscribe();\n          return null;\n        })\n      );\n  }\n\n  /**\n   * Attempts to log the user in and if successful, sets the sessionStorage\n   * @param email - the user identifier\n   * @param password - the password of the account\n   * @param {boolean} usePromise - (TESTING) whether to use the promise version or stick with observable\n   */\n  authenticate(email: string, password: string, usePromise?: boolean) {\n    this.authenticator(email, password).toPromise().then(\n      (x) => {\n        console.log('Got user from Authenticate (Promise mode)');\n        this.userService.getUserByEmail(email).then((x) => {\n          console.log('Gotten email of user');\n          sessionStorage.setItem('id', x.id.toString());\n          sessionStorage.setItem('firstName', x.firstName);\n          sessionStorage.setItem('lastName', x.lastName);\n          sessionStorage.setItem('active', x.active.toString());\n          sessionStorage.setItem('role', x.role);\n          sessionStorage.setItem('address', x.address);\n          sessionStorage.setItem('batchEnd', x.batchEnd);\n          sessionStorage.setItem('userEmail', email);\n          sessionStorage.setItem('userPassword', password);\n        });\n        location.reload(true);\n      },\n      (e) => {\n        // error coming from the backend\n        console.log('Printing Login error (Promise Mode)!');\n        console.log(e);\n        if (document) {\n          const messageLogin = document.getElementById('errorMessageLogin');\n          if (messageLogin) {\n            messageLogin.style.display = 'block';\n            console.log(e.message);\n            if (e.message == 'GENERAL') {\n              messageLogin.innerHTML = 'Server unavailable';\n            } else {\n              messageLogin.innerHTML = e.message;\n            }\n          }\n        }\n        return e.message;\n      }\n    );\n  }\n\n  /**\n   * Logs the user out of the service\n   */\n  logout() {\n    sessionStorage.clear();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Car.html":{"url":"classes/Car.html","title":"class - Car","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/car.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the Car a User (cheifly a Driver) owns \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                model\n                            \n                            \n                                owner\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:9\n                            \n                        \n\n                \n                    \n                        The ID of the car in the database.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        make:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:15\n                            \n                        \n\n                \n                    \n                        The Producer of the Vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:17\n                            \n                        \n\n                \n                    \n                        THe model of the vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     Link\n\n                    \n                \n                    \n                        \n                            Type :     Link\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:13\n                            \n                        \n\n                \n                    \n                        The owner of this car. Represents the URL mapping to the actual user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        year:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:19\n                            \n                        \n\n                \n                    \n                        THe year the car was produced \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\nimport { Link } from './link.model';\n\n/** Represents the Car a User (cheifly a Driver) owns */\nexport class Car {\n    /**\n   * The ID of the car in the database.\n   */\n  id: number;\n  /**\n   * The owner of this car. Represents the URL mapping to the actual user\n   */\n  owner: Link;\n  /** The Producer of the Vehicle */\n  make: string;\n  /** THe model of the vehicle */\n  model: string;\n  /** THe year the car was produced */\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarRegistrationComponent.html":{"url":"components/CarRegistrationComponent.html","title":"component - CarRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/car-registration/car-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the functionality of car registration and management\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car-registration\n            \n\n            \n                styleUrls\n                car-registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car-registration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnCarInfo\n                            \n                            \n                                carMake\n                            \n                            \n                                carModel\n                            \n                            \n                                carObject\n                            \n                            \n                                cars\n                            \n                            \n                                carYear\n                            \n                            \n                                optInToDrive\n                            \n                            \n                                userObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshFields\n                            \n                            \n                                resetCars\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n                \n                    \n                            Sets up the Car Registration component with dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to manager the user AND the cars available on the system\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCarToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCarToUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Sets the car with appropriate values and sends it to the server using the User Service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Makes sure there is a car object available to operate on\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Refreshes the fields in the Car form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCars\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCars()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Clears the fields in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Ensures that the component is working with the logged on user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnCarInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        btnCarInfo:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carMake\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carMake:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:29\n                            \n                        \n\n                \n                    \n                        The company that manufactured it\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carModel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model of the car\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carObject:     Car\n\n                    \n                \n                    \n                        \n                            Type :     Car\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:25\n                            \n                        \n\n                \n                    \n                        The car to create and register\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cars:     Car[]\n\n                    \n                \n                    \n                        \n                            Type :     Car[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:49\n                            \n                        \n\n                \n                    \n                        List of cars owned by the ownwer to present in a table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:39\n                            \n                        \n\n                \n                    \n                        When the car was produced\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optInToDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optInToDrive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:44\n                            \n                        \n\n                \n                    \n                        Relic from the AccountInfoComponent that previously managed cars\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userObject:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:19\n                            \n                        \n\n                \n                    \n                        The User that owns the car\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Car } from '../../models/car.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Supports the functionality of car registration and management\n */\n@Component({\n  selector: 'app-car-registration',\n  templateUrl: './car-registration.component.html',\n  styleUrls: ['./car-registration.component.css']\n})\nexport class CarRegistrationComponent implements OnInit {\n\n  /**\n   * The User that owns the car\n   */\n  userObject: User;\n\n  // for drivers\n  /**\n   * The car to create and register\n   */\n  carObject: Car;\n  /**\n   * The company that manufactured it\n   */\n  carMake: string;\n\n  /**\n   * Model of the car\n   */\n  carModel: string;\n\n  /**\n   * When the car was produced\n   */\n  carYear: number;\n\n  /**\n   * Relic from the AccountInfoComponent that previously managed cars\n   */\n  optInToDrive: boolean;\n\n  /**\n   * List of cars owned by the ownwer to present in a table\n   */\n  cars: Car[];\n\n  // booleans for car information buttons\n  btnCarInfo: Number = 0;\n\n  /**\n   * Sets up the Car Registration component with dependencies\n   * @param {UserControllerService} userService - the Service that allows us to manager the user AND the cars available on the system\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Makes sure there is a car object available to operate on\n   */\n  ngOnInit() {\n    this.carObject = new Car();\n  }\n\n  /**\n   * Clears the fields in the form\n   */\n  resetCars() {\n\n    if (this.cars !== undefined && this.cars != null && this.cars.length !== 0) {\n      return;\n    }\n    this.resetUser();\n    const userId = this.userObject.id;\n    this.cars = [];\n    this.userService.getAllCars().subscribe(c => {\n\n      c.forEach(element => {\n        const strNum = element.owner.substring(7);\n        const num = Number.parseInt(strNum);\n        if (num === userId) {\n          this.cars.push(element);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Ensures that the component is working with the logged on user\n   */\n  resetUser() {\n    this.userService.getCurrentUser().subscribe(user => {\n      console.log('Car reg: Gotten User: ' + user);\n      this.userObject = user;\n    },\n    e => {\n      console.log('Car reg: Failed to get user: ' + e);\n    });\n\n  }\n\n  /**\n   * Sets the car with appropriate values and sends it to the server using the User Service\n   */\n  addCarToUser() {\n\n    this.resetUser();\n\n    this.carObject.id = 0;\n    this.carObject.make = this.carMake;\n    this.carObject.model = this.carModel;\n\n    this.carObject.owner = '/users/' + this.userObject.id.toString();\n    this.carObject.year = this.carYear;\n    // this.userObject.cars.push(this.carObject);\n\n    this.userService.createCar(this.carObject).subscribe(car => {\n      this.carObject = car;\n    });\n\n  }\n\n  /**\n   * Refreshes the fields in the Car form\n   */\n  refreshFields() {\n    this.carMake = '';\n    this.carModel = '';\n    this.carYear = new Date().getFullYear();\n  }\n\n}\n\n    \n\n    \n        \n  \n  Car Information:\n  \n  \n  \n  \n    \n      \n        Make\n      \n      \n    \n\n    \n      \n        Model\n      \n      \n    \n\n    \n      \n        Year\n      \n      \n    \n    \n      \n        Submit\n      \n      Add Car\n      Clear Fields\n    \n    \n       0\">\n        \n          ID\n          Make\n          Model\n          Year\n        \n        \n          {{c.id}}\n          {{c.make}}\n          {{c.model}}\n          {{c.year}}\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Car Information:                          Make                                  Model                                  Year                                  Submit            Add Car      Clear Fields               0\">                  ID          Make          Model          Year                          {{c.id}}          {{c.make}}          {{c.model}}          {{c.year}}                                '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactInfo.html":{"url":"interfaces/ContactInfo.html","title":"interface - ContactInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contact-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Holds a means of contacting a user \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this contact info entry in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The details specifying the user's username/phone number/etc. on the\nservice.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represente the type of contact info available \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ContactInfo {\n    /**\n     * The ID of this contact info entry in the database.\n     */\n    id: Number;\n    /** Represente the type of contact info available */\n    type: String;\n    /**\n     * The details specifying the user's username/phone number/etc. on the\n     * service.\n     */\n    info: String;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/error.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/error.interceptor.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError, ApiErrorType } from '../models/api-error.model';\nimport { AuthService } from './../services/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred.\n          console.error('Network error:', err.error);\n          return throwError(err.error);\n        } else {\n          // API error.\n          const apiError = err.error;\n          apiError.status = err.status;\n          // Automatically log out if the error was due to being not logged in.\n          if (apiError.type === ApiErrorType.NotLoggedIn) {\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          return throwError(apiError);\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n    \n        Description\n    \n    \n        Provides an over view of User Likes, distinguishing between the mobile view and desktop view \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                            Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the device is amobile device and sets view accordingly \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                        Whether or not the Device is a mobile device \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Provides an over view of User Likes, distinguishing between the mobile view and desktop view */\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n\n  /** Whether or not the Device is a mobile device */\n  public mobile = false;\n\n  /**\n   * Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n   */\n  constructor() { }\n\n  /** Checks to see if the device is amobile device and sets view accordingly */\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n    \n  \n  \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides Specific geolocation services from Google maps\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geocode\n                            \n                            \n                                reverseGeocode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the Service with a Google Maps object\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocode(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using an address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe address of a location to obtain information about\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverseGeocode\n                            \n                            \n                        \n                    \n                \n                \n                    \nreverseGeocode(latLng: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using a latitude and longitude value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe location to set up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                        Enables communication with Google Map services\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * Provides Specific geolocation services from Google maps\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodeService {\n\n  /**\n   * Enables communication with Google Map services\n   */\n  geocoder: google.maps.Geocoder;\n\n  /**\n   * Sets up the Service with a Google Maps object\n   */\n  constructor() {\n    this.geocoder = new google.maps.Geocoder();\n  }\n\n  /**\n   * Attempts to mark a location using a latitude and longitude value\n   * @param {google.maps.LatLng} latLng - the location to set up\n   * @returns {Observable} - information about your given location\n   */\n  reverseGeocode(latLng: google.maps.LatLng): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ location: latLng }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log('Geocoding service: geocoder failed due to: ' + status);\n            observer.error(status);\n          }\n        })\n      );\n    });\n  }\n\n  /**\n   * Attempts to mark a location using an address\n   * @param address - the address of a location to obtain information about\n   * @returns {Observable} - information about your given location\n   */\n  geocode(address: string): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ address: address }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log(\n              'Geocoding service: geocode was not successful for the following reason: '\n              + status\n            );\n            observer.error(status);\n          }\n        })\n      );\n    });\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowToComponent.html":{"url":"components/HowToComponent.html","title":"component - HowToComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowToComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/how-to/how-to.component.ts\n\n\n    \n        Description\n    \n    \n        Exists for Displaying a How-to page \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to\n            \n\n            \n                styleUrls\n                how-to.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Exists for Displaying a How-to page */\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      How to Use Revature RideForce\n    \n      \n      Registering an Account:\n      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.\n      \n      \n      Create Profile:\n      Creating your profile is the first part of the process for registering a new account.\n      \n      This section requires you to input a variety of information:\n      \n        Your first name\n        Last name\n        Username\n        Password\n        Confirm Password\n        Key: Allows access to RideForce given to you by your instructor\n        Office Address\n        Apartment Address\n        Batch End Date: Instructor should also notify you on your batch end date\n      \n      Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.\n        Biography:\n        The \"Biography\" section requires some more information from you with a little more effort on detail:\n        \n          About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential\n            fit as a passenger or driver.\n          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,\n            Discord, GroupMe, and other potential services of your choosing.\n        \n        When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking\n          on the \"Next\" button.\n        Car Info:\n        Within this section there are three options: Car, Passenger, or Both.\n        \n        If you do not have a car and plan on only being passenger, simply click next and move on to the next section.\n        \n        If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:\n        \n          Make: Enter the brand of your vehicle.\n          Model: Enter model of your vehicle.\n          Year: Enter year of your vehicle.\n        \n        Once all required information is entered depending on the option chose, move on to the final section by clicking the\n          \"Next\" button.\n        Review and Submit:\n        You are now finished entering all required information and may review what you have entered thus far within this section.\n        \n        If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.\n        \n        Once the information looks good, give it one more look and then click \"Submit\".\n        \n        Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!\n        \n        \n        Login:\n        In order to login, you must have a registered account. If you haven't registered one yet, please refer to the \"Registering Account\" section above.\n        \n        To login, simply click \"Login\" on the navigation bar.\n        \n        You should now see the login view, which contains two input fields: \"Username\" and \"Password\".\n        \n        Simply enter in your registered account's username and password into the respective input fields and click the big blue \"Login\" button underneath them.\n        \n        \n        Map:\n        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.\n        \n        After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver's and passenger's addresses.\n        \n        If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.\n        \n        \n        Browse:\n        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.\n        \n        This will bring you to a view displaying a potential driver.\n        \n        After viewing the potential driver's profile, if you think they are a good match, then \"like\" them as a potential driver.\n        \n        If you think they are not a good match, simply \"dislike\" them and move on to the next.\n        \n        \n        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.\n        \n        The order of drivers is determined by distance, so closer drivers will appear first on your browse page.\n        \n        You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"\n        \n        Within this \"liked list\" you can once again view your \"liked\" drivers profiles.\n        \n        Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it's a good match!\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              How to Use Revature RideForce                Registering an Account:      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.                  Create Profile:      Creating your profile is the first part of the process for registering a new account.            This section requires you to input a variety of information:              Your first name        Last name        Username        Password        Confirm Password        Key: Allows access to RideForce given to you by your instructor        Office Address        Apartment Address        Batch End Date: Instructor should also notify you on your batch end date            Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.        Biography:        The \"Biography\" section requires some more information from you with a little more effort on detail:                  About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential            fit as a passenger or driver.          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,            Discord, GroupMe, and other potential services of your choosing.                When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking          on the \"Next\" button.        Car Info:        Within this section there are three options: Car, Passenger, or Both.                If you do not have a car and plan on only being passenger, simply click next and move on to the next section.                If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:                  Make: Enter the brand of your vehicle.          Model: Enter model of your vehicle.          Year: Enter year of your vehicle.                Once all required information is entered depending on the option chose, move on to the final section by clicking the          \"Next\" button.        Review and Submit:        You are now finished entering all required information and may review what you have entered thus far within this section.                If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.                Once the information looks good, give it one more look and then click \"Submit\".                Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!                        Login:        In order to login, you must have a registered account. If you haven\\'t registered one yet, please refer to the \"Registering Account\" section above.                To login, simply click \"Login\" on the navigation bar.                You should now see the login view, which contains two input fields: \"Username\" and \"Password\".                Simply enter in your registered account\\'s username and password into the respective input fields and click the big blue \"Login\" button underneath them.                        Map:        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.                After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver\\'s and passenger\\'s addresses.                If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.                        Browse:        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.                This will bring you to a view displaying a potential driver.                After viewing the potential driver\\'s profile, if you think they are a good match, then \"like\" them as a potential driver.                If you think they are not a good match, simply \"dislike\" them and move on to the next.                        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.                The order of drivers is determined by distance, so closer drivers will appear first on your browse page.                You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"                Within this \"liked list\" you can once again view your \"liked\" drivers profiles.                Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it\\'s a good match!      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'HowToComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/jwt.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/jwt.interceptor.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorage } from './token.storage';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private tokenStorage: TokenStorage) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.tokenStorage.getToken();\n    if (token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing/landing.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the Carousel Appearence as a Site Intro\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates the Landing Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Component to utilize User Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Initializes the component by retrieving the User\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Checks to see if there is a session or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:16\n                            \n                        \n\n                \n                    \n                        Holds the current user of the program \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                        Whether a User is, in fact, logged on \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n// import { Router } from '@angular/router';\n\n/**\n * Supports the Carousel Appearence as a Site Intro\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n  /** Holds the current user of the program */\n  currentUser: User;\n  /** Whether a User is, in fact, logged on */\n  session: boolean;\n\n  /**\n   * Creates the Landing Component\n   * @param {UserControllerService} userService - Allows Component to utilize User Functionality\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Initializes the component by retrieving the User\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  //   this.userService.getCurrentUserObservable().subscribe(\n  //   data => {\n  //     this.currentUser = data;\n  //     console.log(this.currentUser)\n  //   }\n  // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Checks to see if there is a session or not\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n        \n      \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n\n\n    \n   -->\n\n    \n        RideForce\n        Looking for a ride? Sign up today to be a driver or a rider\n        Get\n            Started\n        Browse\n        \n          For more information,\n          click here\n        \n      \n\n      \n      RideForce\n      Looking for a ride? Sign up today to be a driver or a rider\n      Get\n          Started\n\n      \n        For more information,\n        click here\n      \n     -->\n\n\n      \n\n          Need a ride? Look no further than RideForce!\n          Use the App to find drivers to carpool in your\n          circle or area!\n\n\n       -->\n    \n      \n      \n        \n\n          Rider\n          If you're looking to carpool to and from work, then RideForce is the app for you. Use\n            the app to find and like drivers who you enjoy riding with.\n        \n        \n\n          Driver\n          Want to give others a ride? Sign up to be a driver to help others find a way and lessen\n            the burden of gas prices.\n        \n        \n\n          Safe\n          Find drivers and riders within your employer's company, circle, or group. Members are\n            give a token that will expire in 2 hours so both riders and drivers are approved by the group\n        \n      \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Previous            Next         -->            RideForce        Looking for a ride? Sign up today to be a driver or a rider        Get            Started        Browse                  For more information,          click here                          RideForce      Looking for a ride? Sign up today to be a driver or a rider      Get          Started              For more information,        click here           -->                Need a ride? Look no further than RideForce!          Use the App to find drivers to carpool in your          circle or area!       -->                                  Rider          If you\\'re looking to carpool to and from work, then RideForce is the app for you. Use            the app to find and like drivers who you enjoy riding with.                          Driver          Want to give others a ride? Sign up to be a driver to help others find a way and lessen            the burden of gas prices.                          Safe          Find drivers and riders within your employer\\'s company, circle, or group. Members are            give a token that will expire in 2 hours so both riders and drivers are approved by the group              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesComponent.html":{"url":"components/LikesComponent.html","title":"component - LikesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likes/likes.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a mobile device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likes\n            \n\n            \n                styleUrls\n                likes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                swipecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:34\n                            \n                        \n\n                \n                    \n                        Hold current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { User } from '../../models/user.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Component that shows User Likes on a mobile device\n */\n@Component({\n    selector: 'app-likes',\n    templateUrl: './likes.component.html',\n    styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    swipecards: SwipecardModel[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(data2);\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n   \n      \n        \n        \n          {{card.user.firstName}}\n          Some example text.\n          Like\n        \n      \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{card.user.firstName}}          Some example text.          Like                  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesmatchwebComponent.html":{"url":"components/LikesmatchwebComponent.html","title":"component - LikesmatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesmatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likesmatchweb/likesmatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a desktop device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likesmatchweb\n            \n\n            \n                styleUrls\n                likesmatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likesmatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                likecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:57\n                            \n                        \n\n                \n                    \n                        Hold the current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        likecards:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n    \n        \n  Your Likes\n  \n    \n      \n        \n          \n            \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n               {{user.user.email}} \n              Like\n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your Likes                                                                                {{user.user.firstName}} {{user.user.lastName}}               {{user.user.email}}               Like                                                          {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesmatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/location.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a specific location on Earth \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the North/West value of the location \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The East/West value of the location \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n    /** the North/West value of the location */\n    latitude: number;\n    /** The East/West value of the location */\n    longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Responsible for providing a user the ability to log in\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                userEmail\n                            \n                            \n                                userPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Sets up the Login compoennt with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides the ability to authenticate the user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the ability to navigate to landing if user is already logged on\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(Unused) Provides cUser Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Gets the parameters from the login fields. \nIf the login fails, displays the error message sent by the server under the password field.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checking to see if there is a current user, and if there is, redirects to landing.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        The User to log on to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        The \"username\" of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        The password associated with the indended account\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Responsible for providing a user the ability to log in\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * The \"username\" of the user\n   */\n  userEmail: string;\n\n  /**\n   * The password associated with the indended account\n   */\n  userPass: string;\n\n  /**\n   * The User to log on to\n   */\n  currentUser: User;\n\n  /**\n   * Sets up the Login compoennt with dependency injection\n   * @param { AuthService} authService - Provides the ability to authenticate the user\n   * @param {Router} route - provides the ability to navigate to landing if user is already logged on\n   * @param {UserControllerService} userService - (Unused) Provides cUser Functionality\n   */\n  constructor(private authService: AuthService, private route: Router, private userService: UserControllerService) { }\n\n  /**\n   * Checking to see if there is a current user, and if there is, redirects to landing.\n   */\n  ngOnInit() {\n      if (sessionStorage.length > 0){\n        this.route.navigate(['/landing']);\n      }\n    }\n\n\n  // getUser(email: string) {\n  //   let user;\n  //   return this.userService.getUserByEmail(email).subscribe();\n  // }\n\n  /**\n   * Gets the parameters from the login fields. \n   * If the login fails, displays the error message sent by the server under the password field.\n   */\n  login() {\n    this.authService.authenticate(this.userEmail, this.userPass);\n  }\n}\n\n    \n\n    \n         -->\n\n\n  \n    \n    \n     Sign In \n    Sign Up \n   -->\n    \n    \n\n       \n       -->\n    \n\n    \n    \n    \n      \n      \n      Default Message\n      \n    \n  \n\n    \n    \n      Register\n      |\n      Forgot Password? \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->               Sign In     Sign Up    -->                      -->                                  Default Message                          Register      |      Forgot Password?       '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsControllerService.html":{"url":"injectables/MapsControllerService.html","title":"injectable - MapsControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/maps-controller.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables Components to work with the Mapping Service on the backend\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistance\n                            \n                            \n                                    Public\n                                getRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/maps-controller.service.ts:12\n                            \n                        \n\n                \n                    \n                            Sets up the mapping service to interact with the server\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the Means of communicating with the Server\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistance(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Sends address as string to location endpoint in Map Service. Map Service returns geographic location\nin latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nLocation info with latitude and longitude information\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoute(start: string, end: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Takes in 2 addresses and calculates the distance and travel time between them\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe Route info generated by the system\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { LatLngLiteral } from '@agm/core';\nimport { RouteInfo } from '../../models/route-info.model';\n\n/**\n * Enables Components to work with the Mapping Service on the backend\n */\n@Injectable()\nexport class MapsControllerService {\n\n  /**\n   * Sets up the mapping service to interact with the server\n   * @param {HttpClient} http - provides the Means of communicating with the Server\n   */\n public constructor(private http: HttpClient) { }\n\n  /**\n  * Sends address as string to location endpoint in Map Service. Map Service returns geographic location\n  * in latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n  * @returns {Observable} - Location info with latitude and longitude information\n  */\n  getDistance(address: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/location', {\n      params: { address },\n    });\n  }\n\n  /**\n   * Takes in 2 addresses and calculates the distance and travel time between them\n   * @param start string address\n   * @param end string address\n   * @returns {Observable} - the Route info generated by the system\n   */\n  public getRoute(start: string, end: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/route', {\n      params: { start, end },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/marker.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an object that could appear on a map \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        placeId\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The address the marker represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can it move around \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any Identifier a User might use \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the actual location on the map \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeId\n                                    \n                                \n                                \n                                    \n                                        placeId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra identification for the marker \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Does it represent any specific user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Marker {\n    /** the actual location on the map */\n    location: google.maps.LatLngLiteral;\n    /** The address the marker represents */\n    address?: string;\n    /** Any Identifier a User might use */\n    label?: string;\n    /** Does it represent any specific user */\n    userId?: number;\n    /** Can it move around */\n    draggable?: boolean;\n    /** Extra identification for the marker */\n    placeId?: string;\n    // icon?: string;\n    // infoWindow?: boolean;\n    // comments?: string[];\n    // saved?: boolean;\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchingControllerService.html":{"url":"injectables/MatchingControllerService.html","title":"injectable - MatchingControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchingControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/matching-controller.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dislikeDriver\n                            \n                            \n                                getDislikedDrivers\n                            \n                            \n                                getFromLink\n                            \n                            \n                                getLikedDrivers\n                            \n                            \n                                getMatchingDrivers\n                            \n                            \n                                likeDriver\n                            \n                            \n                                unDislikeDriver\n                            \n                            \n                                unlikeDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/matching-controller.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \ndislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id unliked the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDislikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDislikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns all users disliked by the user with the given ID\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromLink(uri: Link)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            will deserialize the link object. returns the object reference from the link\na link is a reference to the object without having to fetch the object from the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    Link\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns all users liked by the user with the given ID.\nReturns this as an array of strings in the format\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            Returns all drivers who match the rider with the given user ID.\n\"/users/{userid}\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id likes the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unDislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunDislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id disliked the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id likes the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from \"../../../app/models/user.model\";\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Link } from '../../models/link.model';\n\n@Injectable()\nexport class MatchingControllerService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * will deserialize the link object. returns the object reference from the link\n   * a link is a reference to the object without having to fetch the object from the database\n   * @param uri \n   */\n  getFromLink(uri: Link): Observable {\n    return this.http.get(environment.apiUrl + uri);\n  }\n  /**\n   * Returns all drivers who match the rider with the given user ID.\n   * \"/users/{userid}\"\n   * \n   * @param riderId\n   */\n  getMatchingDrivers(riderId: number): Observable[]> {\n   \n    return this.http.get[]>(environment.apiUrl + `/matches/${riderId}`);\n  }\n\n  /**\n   * Returns all users liked by the user with the given ID.\n   * Returns this as an array of strings in the format\n   * \n   * @param riderId \n   */\n  getLikedDrivers(riderId: number): Observable[]> {\n    console.log(environment.apiUrl + `/matches/likes/${riderId}`);\n    return this.http.get[]>(environment.apiUrl + `/matches/likes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id likes the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  likeDriver(riderId: number, driverId: number): Observable {\n    \n    return this.http.put[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`, '');\n\n  }\n\n  /**\n   * Removes any indication that the user with ID :id likes the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unlikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`);\n  }\n\n  /**\n   * Returns all users disliked by the user with the given ID\n   * @param riderId \n   */\n  getDislikedDrivers(riderId: number): Observable[]> {\n    return this.http.get[]>(environment.apiUrl + `/matches/dislikes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id unliked the user with ID :liked.\n   * \n   * @param riderId \n   * @param driverId \n   */\n  dislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.put[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`, '');\n  }\n\n  /**\n   *  Removes any indication that the user with ID :id disliked the user with ID :liked\n   * \n   * @param riderId \n   * @param driverId \n   */\n  unDislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Hosts the Component that allows users to navigate between components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the component with relevent services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows User Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(unused, should be used by Login component) Enables component to authenticate user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Sets up the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Allows User to log out of their session\nuses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Sets up the Log in Session appearence\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Updates the status of our session ( is the user currently logged on?)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the current user of the app \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     \n\n                    \n                \n                    \n                        \n                            Default value : sessionStorage.length > 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether the User is logged on or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n/**\n * Hosts the Component that allows users to navigate between components\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  /** Holds the current user of the app */\n  currentUser: User;\n  /**\n   * Whether the User is logged on or not\n   */\n  session = sessionStorage.length > 0;\n\n  /**\n   * Sets up the component with relevent services\n   * @param {UserControllerService} userService - allows User Services to be utilized\n   * @param {AuthService} authService - (unused, should be used by Login component) Enables component to authenticate user\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private userService: UserControllerService,\n    private authService: AuthService,\n    private route: Router) { }\n\n  /**\n   * Sets up the Log in Session appearence\n   */\n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Updates the status of our session ( is the user currently logged on?)\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n  /**\n   * Sets up the current user\n   */\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  }\n  // checkIfLoggedIn(){\n  //   if(this.userService.isLoggedIn){\n  //     this.isLoggedIn = true;\n  //   } \n  //   else if(!this.userService.isLoggedIn) {\n  //     this.isLoggedIn = false;\n  //   }\n  // }\n\n  // getCurrentUser(){\n  //   this.userService.getCurrentUser().subscribe(\n  //     data => {\n  //       this.currentUser = data;\n  //     }\n  //   )\n  // }\n\n  /**\n   * Allows User to log out of their session\n   * uses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n   */\n  async logout() {\n    sessionStorage.clear();\n    if (this.route.url === \"/landing\") {\n      location.reload(true);\n    } else {\n      await this.route.navigate([\"/landing\"]);\n      location.reload(true);\n    }\n  }\n}\n\n    \n\n    \n        \n   -->\n    \n     -->\n    \n      \n    \n    \n        \n          \n        \n        \n          About\n          User Settings\n        \n      \n    \n      \n        Home(current)\n        Login\n        Get Key\n        Map\n        Browse\n        Favorites\n        Car\n        Logout\n      \n  \n  \n      \n        \n      \n      \n      \n        About\n        User Settings\n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->         -->                                                              About          User Settings                                Home(current)        Login        Get Key        Map        Browse        Favorites        Car        Logout                                                  About        User Settings          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Office.html":{"url":"interfaces/Office.html","title":"interface - Office","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Office\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/office.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents Offices a User might hold \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Where the office is located \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the office in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The common name of the office (e.g. \"Reston\").\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Office {\n\n  /**\n   * The ID of the office in the database.\n   */\n  id: number;\n  /**\n   * The common name of the office (e.g. \"Reston\").\n   */\n  name: string;\n  /** Where the office is located */\n  address: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlacesAutocompleteDirective.html":{"url":"directives/PlacesAutocompleteDirective.html","title":"directive - PlacesAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlacesAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlacesAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormattedAddress\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressSelect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, mapsAPILoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressSelect\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormattedAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormattedAddress(place: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        place\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     HTMLInputElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\n@Directive({\n  selector: '[appPlacesAutocomplete]'\n})\nexport class PlacesAutocompleteDirective implements OnInit {\n\n  private element: HTMLInputElement;\n\n  @Output()\n  addressSelect: EventEmitter = new EventEmitter();\n\n  constructor(private elRef: ElementRef, private mapsAPILoader: MapsAPILoader) {\n    this.element = elRef.nativeElement;\n  }\n\n  getFormattedAddress(place) {\n    const location_obj = {};\n    return place;\n  }\n\n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.element);\n      autocomplete.addListener('place_changed', () => {\n        this.addressSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the object the Account Info component would use when creating a new user in the system \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    THe password of the new user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The long token granted by an administrator (or trainer) to allow new User registration \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User name of the new user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n  /** The User name of the new user */\n  username: string;\n  /** THe password of the new user */\n  password: string;\n  /** The long token granted by an administrator (or trainer) to allow new User registration */\n  token: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RideswipeComponent.html":{"url":"components/RideswipeComponent.html","title":"component - RideswipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RideswipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rideswipe/rideswipe.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rideswipe\n            \n\n            \n                styleUrls\n                rideswipe.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rideswipe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rideswipe',\n  templateUrl: './rideswipe.component.html',\n  styleUrls: ['./rideswipe.component.css']\n})\nexport class RideswipeComponent implements OnInit {\n\n  public mobile = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'RideswipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"interfaces/RouteInfo.html","title":"interface - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Provides the barebones information about a given route \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route distance, in meters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route time, in seconds.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteInfo {\n    /**\n * The total route distance, in meters.\n */\n    distance: number;\n    /**\n     * The total route time, in seconds.\n     */\n    duration: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwipecardModel.html":{"url":"classes/SwipecardModel.html","title":"class - SwipecardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwipecardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/swipecard.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a User object that could be hidden in an HTML list \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:6\n                            \n                        \n\n                \n                    \n                        The Given User \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:8\n                            \n                        \n\n                \n                    \n                        Is is visible or hidden? \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\n\n/** Represents a User object that could be hidden in an HTML list */\nexport class SwipecardModel {\n    /** The Given User */\n    user: User;\n    /** Is is visible or hidden? */\n    visible = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorage.html":{"url":"injectables/TokenStorage.html","title":"injectable - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/token.storage.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/token.storage.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'authToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorage {\n  constructor() { }\n\n  signOut() {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    sessionStorage.removeItem(TOKEN_KEY);\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FOLDER\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getS3Bucket\n                            \n                            \n                                uploadfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                            Basic set up of the Service - it uses no dependency injection\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3Bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetS3Bucket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe S3 representation to utillize\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadfile(file: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Attempts to actually upload a file to the S3 Service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe file to upload to the S3 service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe url used for the file\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOLDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FOLDER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rydeforce-s3/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:13\n                            \n                        \n\n                \n                    \n                        The Root folder name used by this system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                        Holds the url where the image will be stored\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as S3 from 'aws-sdk/clients/s3';\n\n/**\n * Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  /** The Root folder name used by this system */\n  FOLDER = 'rydeforce-s3/';\n  /** Holds the url where the image will be stored*/\n  url: any;\n\n  /**\n   * Basic set up of the Service - it uses no dependency injection\n   */\n  constructor() { }\n\n  /**\n   * Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n   * @returns {S3} - the S3 representation to utillize\n   */\n  getS3Bucket(): any {\n    const bucket = new S3 (\n    {\n    accessKeyId: 'AKIAIRZG4TK6EBLZV7GA',\n    secretAccessKey: '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',\n    region: 'us-east-1'\n    }\n    );\n    return bucket;\n  }\n\n  /**\n   * Attempts to actually upload a file to the S3 Service\n   * @param file - the file to upload to the S3 service\n   * @returns {string} - the url used for the file\n   */\n  uploadfile(file) {\n   const params = {\n      Bucket: 'rydeforce',\n      Key: this.FOLDER + Math.floor(Math.random() * 100000000000) + file.name ,\n      Body: file\n       // allow that and instead assign numbers on the beginning of the name.\n    };\n\n    const upResult = this.getS3Bucket().upload(params, function (err, data) {\n      if (err) {\n        console.log('There was an error uploading your file: ', err);\n        return false;\n      }\n      console.log('Successfully uploaded file.', data);\n      console.log(params);\n\n      return true;\n    });\n    if (!upResult.failed) {\n      console.log('upload successful');\n      this.url = 'https://s3.us-east-1.amazonaws.com/' + params.Bucket + '/' + params.Key;\n    } else {\n      console.log('upload failed');\n    }\n\n    console.log('BEFORE RETURNING, this.url is: ' + this.url);\n    return this.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        address\n                                \n                                \n                                        batchEnd\n                                \n                                \n                                        cars\n                                \n                                \n                                        contactInfo\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        office\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        role\n                                \n                                \n                                            Optional\n                                        venmo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user's account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's home address (where they currently live).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchEnd\n                                    \n                                \n                                \n                                    \n                                        batchEnd:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cars\n                                    \n                                \n                                \n                                    \n                                        cars:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of cars the User might own (holds the URL mapping to those cars) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactInfo\n                                    \n                                \n                                \n                                    \n                                        contactInfo:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's contact information.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        office\n                                    \n                                \n                                \n                                    \n                                        office:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's office (where they work).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL to the user's profile photo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's role, determining what permissions they have to access data on\nthe server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venmo\n                                    \n                                \n                                \n                                    \n                                        venmo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user's Venmo username.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from './link.model';\nimport { Office } from './office.model';\nimport { Car } from './car.model';\nimport { ContactInfo } from './contact-info.model';\nimport { Role } from './role.model';\n\nexport interface User {\n  /**\n   * The ID of the user in the database.\n   */\n  id: number;\n  /** The first name of a user */\n  firstName: string;\n  /** The last name of a user */\n  lastName: string;\n  /** The username of a user */\n  email: string;\n  /**\n   * The URL to the user's profile photo.\n   */\n  photoUrl: string;\n  /**\n   * The user's home address (where they currently live).\n   */\n  address: string;\n  /**\n   * The user's office (where they work).\n   */\n  office: Link;\n  /**\n   * The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n   */\n  batchEnd: any;\n  /** List of cars the User might own (holds the URL mapping to those cars) */\n  cars: Link[];\n  /**\n   * The user's Venmo username.\n   */\n  venmo?: string;\n  /**\n   * The user's contact information.\n   */\n  contactInfo: Link[];\n  /**\n   * Whether the user's account is active.\n   */\n  active: boolean;\n  /**\n   * The user's role, determining what permissions they have to access data on\n   * the server.\n   */\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard.html":{"url":"interfaces/UserCard.html","title":"interface - UserCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/likesmatchweb/likesmatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Used as a more complex data structure for holding info on liked users\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    (Unknown) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status of the User \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Driver that they like \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard-1.html":{"url":"interfaces/UserCard-1.html","title":"interface - UserCard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/usermatchweb/usermatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents the User selection item in the html page \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the given user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to profile picture of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User being represented \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsercardComponent.html":{"url":"components/UsercardComponent.html","title":"component - UsercardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsercardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usercard/usercard.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a mobile view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usercard\n            \n\n            \n                styleUrls\n                usercard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usercard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animState\n                            \n                            \n                                animThumbState\n                            \n                            \n                                currentIndex\n                            \n                            \n                                currentSwipeCard\n                            \n                            \n                                currentUser\n                            \n                            \n                                SWIPE_ACTION\n                            \n                            \n                                swipeCardBio\n                            \n                            \n                                swipeCardMain\n                            \n                            \n                                swipecards\n                            \n                            \n                                thumbImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                swipe\n                            \n                            \n                                swiped\n                            \n                            \n                                thumbAnimDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideImage(hide: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Hides the card picture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hide\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipe\n                            \n                            \n                        \n                    \n                \n                \n                    \nswipe(action: , user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            action triggered when user swipes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.SWIPE_ACTION.RIGHT\n                                                        \n\n                                                \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swiped\n                            \n                            \n                        \n                    \n                \n                \n                    \nswiped()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Called when the swipe animation has completed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbAnimDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nthumbAnimDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Called when the Thumb Animation is done\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:49\n                            \n                        \n\n                \n                    \n                        Keeps track of the Animation state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animThumbState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animThumbState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'one'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:51\n                            \n                        \n\n                \n                    \n                        Keeps track of the Thumb animation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:47\n                            \n                        \n\n                \n                    \n                        Index of the Current User being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSwipeCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSwipeCard:     SwipecardModel\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:45\n                            \n                        \n\n                \n                    \n                        User currently being looked at \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:68\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWIPE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SWIPE_ACTION:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { LEFT: 'swipeleft', RIGHT: 'swiperight' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:37\n                            \n                        \n\n                \n                    \n                        constant for swipe action: left or right \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardBio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardBio:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeBio' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardMain:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:56\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeMain' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:39\n                            \n                        \n\n                \n                    \n                        our list of swipecards: DUMMY DATA \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icons/thumbsDown.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:53\n                            \n                        \n\n                \n                    \n                        Location of the thumbnail image files \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { AddressModel } from '../../models/address.model';\nimport { Link } from '../../models/link.model';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Allows Views for Other Users in a mobile view\n */\n@Component({\n    selector: 'app-usercard',\n    templateUrl: './usercard.component.html',\n    styleUrls: ['./usercard.component.css'],\n    animations: [\n        trigger('slide', [\n            state('center', style({ transform: 'translateX(0)' })),\n            state('left', style({ transform: 'translateX(-200%)' })),\n            state('right', style({ transform: 'translateX(200%)' })),\n            transition('* => *', animate(100))\n        ]),\n        trigger('pop', [\n            state('one', style({ transform: 'scale(1)', opacity: 0 })),\n            state('two', style({ transform: 'scale(1.2)', opacity: .8 })),\n            transition('one => two', animate(200)),\n            transition('two => one', animate(100))\n        ])\n    ]\n})\nexport class UsercardComponent implements OnInit {\n\n    /** constant for swipe action: left or right */\n    SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n    /** our list of swipecards: DUMMY DATA */\n    swipecards: SwipecardModel[] = [\n\n    ];\n\n\n    /** User currently being looked at */\n    currentSwipeCard: SwipecardModel;\n    /** Index of the Current User being viewed */\n    currentIndex = 0;\n    /** Keeps track of the Animation state */\n    animState = 'center';\n    /** Keeps track of the Thumb animation */\n    animThumbState = 'one';\n    /** Location of the thumbnail image files */\n    thumbImg = 'assets/icons/thumbsDown.png';\n\n    /** Represents the div element 'swipeMain' */\n    @ViewChild('swipeMain') swipeCardMain: ElementRef;\n    /** Represents the div element 'swipeBio' */\n    @ViewChild('swipeBio') swipeCardBio: ElementRef;\n\n    /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /** Holds the current user of the system */\n    currentUser: User;\n\n    /**\n     * Sets up the component by populating the list of possibel matches for the current user\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('data');\n                this.currentUser = data;\n                console.log(this.currentUser);\n                let userLinks: Link[] = null;\n                this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        // console.log(\"data2 is \" + data2);\n                        userLinks = data2;\n                        console.log(userLinks);\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                    // Sets the current swipe card to the first element of the array if the array has something in it.\n                                    if (this.swipecards.length > 0) {\n                                        this.currentSwipeCard = this.swipecards[0];\n                                    }\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        );\n\n\n\n    }\n\n    /**\n     * Hides the card picture\n     *\n     * @param hide\n     */\n    hideImage(hide: boolean) {\n        if (hide) {\n            this.swipeCardMain.nativeElement.classList.add('hidden');\n        } else {\n            this.swipeCardMain.nativeElement.classList.remove('hidden');\n        }\n    }\n\n    /**\n     *  action triggered when user swipes\n     */\n     swipe(action = this.SWIPE_ACTION.RIGHT, user) {\n        this.animThumbState = 'two';\n        // swipe right, next avatar\n        if (action === this.SWIPE_ACTION.RIGHT) {\n            this.animState = 'right';\n            this.thumbImg = 'assets/icons/thumbsUp.png';\n            this.matchService.unDislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.likeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n\n        // swipe left, previous avatar\n        if (action === this.SWIPE_ACTION.LEFT) {\n            this.animState = 'left';\n            this.thumbImg = 'assets/icons/thumbsDown.png';\n            console.log(this.currentUser.id);\n            console.log(this.swipecards[this.currentIndex].user.id);\n            this.matchService.unlikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.dislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n        this.swipecards.splice(this.currentIndex, 1);\n    }\n\n    /**\n     * Called when the swipe animation has completed\n     */\n    swiped() {\n        if (this.animState === 'left') {\n            this.animState = 'center';\n            if (this.currentIndex + 1 > this.swipecards.length - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n        } else if (this.animState === 'right') {\n            this.animState = 'center';\n            if (this.currentIndex - 1 \n    \n\n    \n        \n    \n     0\">\n        \n            \n                \n                \n                     -->\n                    \n                \n\n                \n                    \n                        {{currentSwipeCard.user.firstName}} \n                    \n                     duration / distance\n                     contacts\n                    link to bio\n                \n                \n                \n                \n                \n                \n            \n            \n                \n                    \n                        Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}\n                    \n                    Distance: \n                    Contact: \n                    car info: \n                    ride info: \n                \n            \n        \n    \n    \n        There's nobody here.\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\">                                                                         -->                                                                                                {{currentSwipeCard.user.firstName}}                                          duration / distance                     contacts                    link to bio                                                                                                                                                                                    Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}                                        Distance:                     Contact:                     car info:                     ride info:                                                     There\\'s nobody here.    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsercardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsermatchwebComponent.html":{"url":"components/UsermatchwebComponent.html","title":"component - UsermatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsermatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usermatchweb/usermatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a desktop view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usermatchweb\n            \n\n            \n                styleUrls\n                usermatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usermatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usermatchweb/usermatchweb.component.ts:39\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            like\n                            \n                            \n                        \n                    \n                \n                \n                    \nlike(index: number, interest: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Handles verdict a user gives on a potential match\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe user being evaluated\n\n\n                                                        \n                                                \n                                                \n                                                        interest\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe judgment on the viewed user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:49\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                }\n              );\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Potential Matches \n  \n    \n      \n        \n          \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              \n                X -->\n                \n                \n                \n                O -->\n                 \n\n              \n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Potential Matches                                                                     {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}                              X -->                                                                O -->                                                                                         {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsermatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewProfileComponent.html":{"url":"components/ViewProfileComponent.html","title":"component - ViewProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/view-profile/view-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Represents the page that allows users to view (and edit) their profile\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-profile\n            \n\n            \n                styleUrls\n                view-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address2\n                            \n                            \n                                batchEnd\n                            \n                            \n                                canEdit\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                currentRole\n                            \n                            \n                                currentUser\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRole\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitChanges\n                            \n                            \n                                switchRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/view-profile/view-profile.component.ts:18\n                            \n                        \n\n                \n                    \n                            Sets up the component with the User Service injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows the component to work with the user service (for updating)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Allows the form to be edited\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Gets the list of offices from the database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Sets up the User's current role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Sets up all users in the system \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Sets up the form with data about the durrent user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Updates the user once he/she is content with the updates\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Enables limited ability to modify the User's role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:35\n                            \n                        \n\n                \n                    \n                        The address of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                        The day the User's batch ends\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canEdit:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:40\n                            \n                        \n\n                \n                    \n                        Whether the user can make changes (Currently not used) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        The password of the user, used to confirm User knows the password (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:127\n                            \n                        \n\n                \n                    \n                        The current role of the logged on user in string form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:18\n                            \n                        \n\n                \n                    \n                        The User being selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:25\n                            \n                        \n\n                \n                    \n                        The first name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:27\n                            \n                        \n\n                \n                    \n                        The last name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     Office\n\n                    \n                \n                    \n                        \n                            Type :     Office\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:44\n                            \n                        \n\n                \n                    \n                        Current office being examined \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:42\n                            \n                        \n\n                \n                    \n                        List of offices held by the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:31\n                            \n                        \n\n                \n                    \n                        The password of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        The user name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:136\n                            \n                        \n\n                \n                    \n                        Holds the list of all users in the system \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n// import { DateFormatPipe } from '../../pipes/date-format.pipe';\nimport { Role } from '../../models/role.model';\nimport { Office } from '../../models/office.model';\n\n/**\n * Represents the page that allows users to view (and edit) their profile\n */\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  /** The User being selected */\n  currentUser: User;\n  /**\n   * Sets up the component with the User Service injected\n   * @param userService - Allows the component to work with the user service (for updating)\n   */\n  constructor(private userService: UserControllerService) { }\n  /** The first name of the user (hooked to form item in html) */\n  firstName: string;\n  /** The last name of the user (hooked to form item in html) */\n  lastName: string;\n  /** The user name of the user (hooked to form item in html) */\n  username: string;\n  /** The password of the user (hooked to form item in html) */\n  password: string;\n  /** The password of the user, used to confirm User knows the password (hooked to form item in html) */\n  confirmPassword: string;\n  /** The address of the user (hooked to form item in html) */\n  address2: string;\n  /** The day the User's batch ends*/\n  batchEnd: any;\n\n  /** Whether the user can make changes (Currently not used) */\n  canEdit = false;\n  /** List of offices held by the user */\n  officeObjectArray: Office[] = [];\n  /** Current office being examined */\n  officeObject: Office;\n\n  /**\n   * Sets up the form with data about the durrent user\n   */\n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n        // this.currentUser = data;\n        // console.log(this.currentUser);\n      this.firstName = sessionStorage.getItem('firstName');\n      this.lastName = sessionStorage.getItem('lastName');\n      this.username = sessionStorage.getItem('userEmail');\n      // console.log(this.userService.getOfficeByLink(this.currentUser.office).subscribe().toString());\n      // document.getElementById('currentOffice').textContent = this.userService.getOfficeByLink(this.currentUser.office).toString();\n      this.address2 = sessionStorage.getItem('address');\n      this.batchEnd = new Date(sessionStorage.getItem('batchEnd')).toLocaleDateString();\n    //   }\n    // );\n    this.getOffices();\n    this.getUsers();\n    this.getRole();\n  }\n\n  /**\n   * Allows the form to be edited\n   */\n  edit() {\n    document.getElementById('firstName').removeAttribute('disabled');\n    document.getElementById('lastName').removeAttribute('disabled');\n    document.getElementById('email').removeAttribute('disabled');\n    document.getElementById('password').removeAttribute('disabled');\n    document.getElementById('confirmPassword').removeAttribute('disabled');\n    document.getElementById('address').removeAttribute('disabled');\n    document.getElementById('batchEnd').removeAttribute('disabled');\n    document.getElementById('batchEnd').setAttribute('type', 'date');\n    document.getElementById('currentOffice').style.display = 'none';\n    document.getElementById('selectOffice').style.display = 'inline';\n    document.getElementById('edit').style.display = 'none';\n    document.getElementById('submit').style.display = 'inline';\n    document.getElementById('errorMessage').removeAttribute('hidden');\n  }\n\n  /**\n   * Updates the user once he/she is content with the updates\n   */\n  submitChanges() {\n\n    sessionStorage.setItem('firstName', this.firstName);\n    sessionStorage.setItem('lastName', this.lastName);\n    sessionStorage.setItem('userEmail', this.username);\n    sessionStorage.setItem('address', this.address2);\n    sessionStorage.setItem('batchEnd', this.batchEnd);\n    sessionStorage.setItem('role', this.currentRole);\n    this.userService.update().subscribe();\n    // this.userService.updatePassword(this.currentUser.id, 'p4ssw0rd', this.password).subscribe();\n    window.location.reload(true);\n  }\n\n  /**\n   * Enables limited ability to modify the User's role in the system\n   */\n  switchRole() {\n    if (sessionStorage.getItem('role') === 'DRIVER') {\n      sessionStorage.setItem('role', 'RIDER');\n      this.getRole();\n    } else if (sessionStorage.getItem('role') === 'RIDER') {\n      sessionStorage.setItem('role', 'DRIVER');\n      this.getRole();\n    } else {\n      console.log('nope');\n    }\n  }\n\n  /**\n   * Gets the list of offices from the database\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n    });\n  }\n  /** The current role of the logged on user in string form */\n  currentRole: string;\n  /**\n   * Sets up the User's current role in the system\n   */\n  getRole() {\n    this.currentRole = sessionStorage.getItem('role');\n  }\n\n  /** Holds the list of all users in the system */\n  users: any[];\n  /** Sets up all users in the system */\n  getUsers() {\n    let data;\n    // this.postService.getPosts().then((allPosts) => {posts = allPosts; console.log(posts.results[0].id)});\n    this.userService.getAllUsers().subscribe((x) => {data = x; this.users = data});\n  }\n\n  // passCheck() {\n  //   if(this.password !== this.confirmPassword) {\n  //     document.getElementById('passwordError').style.display = 'inline';\n  //   } else {\n  //     sessionStorage.setItem('userPassword', this.password);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n              \n              Your Profile:\n              \n              \n                \n                  First Name\n                \n                \n                  \n                    \n                   -->\n              \n              \n                \n                  First name cannot be empty\n                \n                \n                  ;\n                  First name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Last Name\n                \n                \n              \n              \n                \n                  Last name cannot be empty\n                \n                \n                  ;\n                  Last name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Email\n                \n                \n              \n              \n                \n                  Email cannot be empty\n                \n                \n                  Email cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Password\n                \n                \n              \n              \n                \n                  Password cannot be empty\n                \n                \n                  Password cannot be more than 15 characters\n                \n              \n              \n                \n                  Confirm\n                \n                \n              \n              \n                \n                  Password Confirm cannot be empty\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                 -->\n                \n                  Passwords do not match.\n                \n              \n\n              \n                \n                  Key\n                \n                \n              \n              \n                \n                  You need a Key\n                \n                \n                  Password Confirm cannot be more than 15 characters\n                \n               -->\n\n              \n                \n                  Office Address\n                \n                \n                   -->\n                \n                \n                  \n                    {{office.name}}\n                  \n                \n                 -->\n                 -->\n              \n\n\n              \n                \n                  Address\n                \n                \n                 -->\n              \n              \n                \n                  Address cannot be empty\n                \n              \n\n              \n                \n                  Batch End\n                \n                \n              \n              \n                Switch to Rider \n              \n              \n                Switch to Driver \n              \n              \n              \n                Edit \n              \n              Save Changes \n              \n                \n                  Please fill out ALL fields and confirm your passwords match\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Biography:\n              \n              \n                \n                  About You\n                \n              \n              \n              \n\n              \n                Profile Picture\n                \n              \n              \n                \n                  Contact Info\n                \n                \n                 -->\n                \n                  \n                    \n                  \n                \n              \n\n              \n                \n                  \n                    \n                      {{contact}}\n                    \n                  \n                  \n                  -\n                \n              \n              \n                Previous\n                 Next\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Car Information:\n              \n              \n                \n                  Driver\n                  Rider\n                \n              \n              \n              \n                \n                  \n                    Make\n                  \n                  \n                \n\n                \n                  \n                    Model\n                  \n                  \n                \n\n                \n                  \n                    Year\n                  \n                  \n                \n              \n              \n                Previous\n                 Edit\n              \n              \n                \n                  Please select Driver or Rider\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Review and submit:\n              \n              User Information\n              First name: {{firstName}} \n              Last Name: {{lastName}} \n              Email: {{username}} \n               Office Address: {{officeObject}}\n               Apartment Address: {{address2}}\n              Batch: {{batchEnd}} \n              \n               0\">\n                Biography\n                About You: {{bio}}\n                Contact Info:\n                \n                   {{item.type}}: {{item.info}}  \n                \n              \n              \n              \n                Car Info\n                Make: {{carMake}} \n                Model: {{carModel}} \n                Year: {{carYear}} \n              \n              \n              \n\n                 Previous\n\n                 Finish\n              \n            \n          \n        \n       -->\n      \n        \n          \n            \n            \n            View Users\n            \n              \n                \n                  User ID\n                  User's Name\n                  User Email\n                  User Role\n                   \n                \n              \n              \n                \n                  {{ user.id }}\n                  {{ user.firstName }}&nbsp;{{ user.lastName }}\n                  {{ user.email }}\n                  {{ user.role }}\n                  Make Admin\n                    Make Trainer\n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Your Profile:                                                              First Name                                                                                         -->                                                              First name cannot be empty                                                  ;                  First name cannot be more than 15 characters                                                                              Last Name                                                                                              Last name cannot be empty                                                  ;                  Last name cannot be more than 15 characters                                                                              Email                                                                                              Email cannot be empty                                                  Email cannot be more than 15 characters                                                                              Password                                                                                              Password cannot be empty                                                  Password cannot be more than 15 characters                                                                              Confirm                                                                                              Password Confirm cannot be empty                                                  Password Confirm cannot be more than 15 characters                 -->                                  Passwords do not match.                                                                              Key                                                                                              You need a Key                                                  Password Confirm cannot be more than 15 characters                               -->                                                Office Address                                                   -->                                                                      {{office.name}}                                                   -->                 -->                                                              Address                                                 -->                                                              Address cannot be empty                                                                              Batch End                                                                            Switch to Rider                                             Switch to Driver                                                           Edit                             Save Changes                                                 Please fill out ALL fields and confirm your passwords match                                                                                                                                  Biography:                                                              About You                                                                                        Profile Picture                                                                              Contact Info                                                 -->                                                                                                                                                                                                {{contact}}                                                                          -                                                            Previous                 Next                                                                                                                  Car Information:                                                              Driver                  Rider                                                                                                                Make                                                                                                          Model                                                                                                          Year                                                                                                Previous                 Edit                                                              Please select Driver or Rider                                                                                                                                  Review and submit:                            User Information              First name: {{firstName}}               Last Name: {{lastName}}               Email: {{username}}                Office Address: {{officeObject}}               Apartment Address: {{address2}}              Batch: {{batchEnd}}                              0\">                Biography                About You: {{bio}}                Contact Info:                                   {{item.type}}: {{item.info}}                                                                            Car Info                Make: {{carMake}}                 Model: {{carModel}}                 Year: {{carYear}}                                                            Previous                 Finish                                                   -->                                                            View Users                                                            User ID                  User\\'s Name                  User Email                  User Role                                                                                                 {{ user.id }}                  {{ user.firstName }} {{ user.lastName }}                  {{ user.email }}                  {{ user.role }}                  Make Admin                    Make Trainer                                                                                                      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/accountinfo/accountinfo.component.ts\n            \n            \n                component\n            \n            \n                AccountinfoComponent\n            \n            \n                93 %\n                (56/60)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/car-registration/car-registration.component.ts\n            \n            \n                component\n            \n            \n                CarRegistrationComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            \n                component\n            \n            \n                FavoritesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/how-to/how-to.component.ts\n            \n            \n                component\n            \n            \n                HowToComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/likes/likes.component.ts\n            \n            \n                component\n            \n            \n                LikesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                component\n            \n            \n                LikesmatchwebComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                89 %\n                (43/48)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/rideswipe/rideswipe.component.ts\n            \n            \n                component\n            \n            \n                RideswipeComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/usercard/usercard.component.ts\n            \n            \n                component\n            \n            \n                UsercardComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                component\n            \n            \n                UsermatchwebComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/view-profile/view-profile.component.ts\n            \n            \n                component\n            \n            \n                ViewProfileComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n            \n            \n                directive\n            \n            \n                PlacesAutocompleteDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/address.model.ts\n            \n            \n                class\n            \n            \n                AddressModel\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/api-error.model.ts\n            \n            \n                interface\n            \n            \n                ApiError\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/car.model.ts\n            \n            \n                class\n            \n            \n                Car\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/contact-info.model.ts\n            \n            \n                interface\n            \n            \n                ContactInfo\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/location.model.ts\n            \n            \n                interface\n            \n            \n                Location\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/marker.model.ts\n            \n            \n                interface\n            \n            \n                Marker\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/office.model.ts\n            \n            \n                interface\n            \n            \n                Office\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/register.model.ts\n            \n            \n                interface\n            \n            \n                Register\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/route-info.model.ts\n            \n            \n                interface\n            \n            \n                RouteInfo\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/swipecard.model.ts\n            \n            \n                class\n            \n            \n                SwipecardModel\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/services/api/maps-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MapsControllerService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/api/matching-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MatchingControllerService\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/api/user-controller.service.ts\n            \n            \n                injectable\n            \n            \n                UserControllerService\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                injectable\n            \n            \n                TokenStorage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                variable\n            \n            \n                TOKEN_KEY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.4\n        \n            @angular/animations : ^6.1.8\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.8\n        \n            @angular/compiler : ^6.1.8\n        \n            @angular/core : ^6.1.8\n        \n            @angular/forms : ^6.1.8\n        \n            @angular/http : ^6.1.8\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.8\n        \n            @angular/platform-browser-dynamic : ^6.1.8\n        \n            @angular/router : ^6.1.8\n        \n            @ng-bootstrap/ng-bootstrap : ^3.2.2\n        \n            aws-sdk : ^2.321.0\n        \n            core-js : ^2.4.1\n        \n            googlemaps : ^1.12.0\n        \n            hammerjs : ^2.0.8\n        \n            ng2-animate-on-scroll : ^1.0.11\n        \n            rxjs : ^6.3.2\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorType   (src/.../api-error.model.ts)\n                        \n                        \n                            ContactInfoType   (src/.../contact-info-type.model.ts)\n                        \n                        \n                            Interest   (src/.../interest.model.ts)\n                        \n                        \n                            Role   (src/.../role.model.ts)\n                        \n                        \n                            State   (src/.../state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/api-error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorType\n                    \n                \n                    \n                        \n                            A specific type of error which can be returned by the API.\n\n                        \n                    \n                        \n                            \n                                 NotLoggedIn\n                            \n                        \n                        \n                            \n                                Value : NOT_LOGGED_IN\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : UNAUTHORIZED\n                            \n                        \n            \n        \n\n    src/app/models/contact-info-type.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactInfoType\n                    \n                \n                    \n                        \n                            Represents the ype of contact information available for a user \n\n                        \n                    \n                        \n                            \n                                 Phone\n                            \n                        \n                        \n                            \n                                Value : PHONE\n                            \n                        \n                        \n                            \n                                 Slack\n                            \n                        \n                        \n                            \n                                Value : SLACK\n                            \n                        \n                        \n                            \n                                 Skype\n                            \n                        \n                        \n                            \n                                Value : SKYPE\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/models/interest.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                    \n                        \n                            Holds the Interest type \n\n                        \n                    \n                        \n                            \n                                 like\n                            \n                        \n                        \n                            \n                                Value : LIKE\n                            \n                        \n                        \n                            \n                                 dislike\n                            \n                        \n                        \n                            \n                                Value : DISLIKE\n                            \n                        \n                        \n                            \n                                 thrash\n                            \n                        \n                        \n                            \n                                Value : TRASH\n                            \n                        \n            \n        \n\n    src/app/models/role.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                    \n                        \n                            Represents the type of user in the system \n\n                        \n                    \n                        \n                            \n                                 Driver\n                            \n                        \n                        \n                            \n                                Value : DRIVER\n                            \n                        \n                        \n                            \n                                 Rider\n                            \n                        \n                        \n                            \n                                Value : RIDER\n                            \n                        \n                        \n                            \n                                 Trainer\n                            \n                        \n                        \n                            \n                                Value : TRAINER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/models/state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                    \n                        \n                            Represents a State in the United States (Plus DC and Puerto Rico) \n\n                        \n                    \n                        \n                            \n                                 Alabama\n                            \n                        \n                        \n                            \n                                Value : AL\n                            \n                        \n                        \n                            \n                                 Alaska\n                            \n                        \n                        \n                            \n                                Value : AK\n                            \n                        \n                        \n                            \n                                 Arkansas\n                            \n                        \n                        \n                            \n                                Value : AR\n                            \n                        \n                        \n                            \n                                 Arizona\n                            \n                        \n                        \n                            \n                                Value : AZ\n                            \n                        \n                        \n                            \n                                 California\n                            \n                        \n                        \n                            \n                                Value : CA\n                            \n                        \n                        \n                            \n                                 Colorado\n                            \n                        \n                        \n                            \n                                Value : CO\n                            \n                        \n                        \n                            \n                                 Connecticut\n                            \n                        \n                        \n                            \n                                Value : CT\n                            \n                        \n                        \n                            \n                                 Delaware\n                            \n                        \n                        \n                            \n                                Value : DE\n                            \n                        \n                        \n                            \n                                 DistrictOfColumbia\n                            \n                        \n                        \n                            \n                                Value : DC\n                            \n                        \n                        \n                            \n                                 Florida\n                            \n                        \n                        \n                            \n                                Value : FL\n                            \n                        \n                        \n                            \n                                 Georgia\n                            \n                        \n                        \n                            \n                                Value : GA\n                            \n                        \n                        \n                            \n                                 Hawaii\n                            \n                        \n                        \n                            \n                                Value : HI\n                            \n                        \n                        \n                            \n                                 Idaho\n                            \n                        \n                        \n                            \n                                Value : ID\n                            \n                        \n                        \n                            \n                                 Illinois\n                            \n                        \n                        \n                            \n                                Value : IL\n                            \n                        \n                        \n                            \n                                 Indiana\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 Iowa\n                            \n                        \n                        \n                            \n                                Value : IA\n                            \n                        \n                        \n                            \n                                 Kansas\n                            \n                        \n                        \n                            \n                                Value : KS\n                            \n                        \n                        \n                            \n                                 Kentucky\n                            \n                        \n                        \n                            \n                                Value : KY\n                            \n                        \n                        \n                            \n                                 Louisiana\n                            \n                        \n                        \n                            \n                                Value : LA\n                            \n                        \n                        \n                            \n                                 Maine\n                            \n                        \n                        \n                            \n                                Value : ME\n                            \n                        \n                        \n                            \n                                 Maryland\n                            \n                        \n                        \n                            \n                                Value : MD\n                            \n                        \n                        \n                            \n                                 Massachusetts\n                            \n                        \n                        \n                            \n                                Value : MA\n                            \n                        \n                        \n                            \n                                 Michigan\n                            \n                        \n                        \n                            \n                                Value : MI\n                            \n                        \n                        \n                            \n                                 Minnesota\n                            \n                        \n                        \n                            \n                                Value : MN\n                            \n                        \n                        \n                            \n                                 Mississippi\n                            \n                        \n                        \n                            \n                                Value : MS\n                            \n                        \n                        \n                            \n                                 Missouri\n                            \n                        \n                        \n                            \n                                Value : MO\n                            \n                        \n                        \n                            \n                                 Montana\n                            \n                        \n                        \n                            \n                                Value : MT\n                            \n                        \n                        \n                            \n                                 Nebraska\n                            \n                        \n                        \n                            \n                                Value : NE\n                            \n                        \n                        \n                            \n                                 Nevada\n                            \n                        \n                        \n                            \n                                Value : NV\n                            \n                        \n                        \n                            \n                                 NewHampshire\n                            \n                        \n                        \n                            \n                                Value : NH\n                            \n                        \n                        \n                            \n                                 NewJersey\n                            \n                        \n                        \n                            \n                                Value : NJ\n                            \n                        \n                        \n                            \n                                 NewMexico\n                            \n                        \n                        \n                            \n                                Value : NM\n                            \n                        \n                        \n                            \n                                 NewYork\n                            \n                        \n                        \n                            \n                                Value : NY\n                            \n                        \n                        \n                            \n                                 NorthCarolina\n                            \n                        \n                        \n                            \n                                Value : NC\n                            \n                        \n                        \n                            \n                                 NorthDakota\n                            \n                        \n                        \n                            \n                                Value : ND\n                            \n                        \n                        \n                            \n                                 Ohio\n                            \n                        \n                        \n                            \n                                Value : OH\n                            \n                        \n                        \n                            \n                                 Oklahoma\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 Oregon\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n                        \n                            \n                                 Pennsylvania\n                            \n                        \n                        \n                            \n                                Value : PA\n                            \n                        \n                        \n                            \n                                 PuertoRico\n                            \n                        \n                        \n                            \n                                Value : PR\n                            \n                        \n                        \n                            \n                                 RhodeIsland\n                            \n                        \n                        \n                            \n                                Value : RI\n                            \n                        \n                        \n                            \n                                 SouthCarolina\n                            \n                        \n                        \n                            \n                                Value : SC\n                            \n                        \n                        \n                            \n                                 SouthDakota\n                            \n                        \n                        \n                            \n                                Value : SD\n                            \n                        \n                        \n                            \n                                 Tennessee\n                            \n                        \n                        \n                            \n                                Value : TN\n                            \n                        \n                        \n                            \n                                 Texas\n                            \n                        \n                        \n                            \n                                Value : TX\n                            \n                        \n                        \n                            \n                                 Utah\n                            \n                        \n                        \n                            \n                                Value : UT\n                            \n                        \n                        \n                            \n                                 Vermont\n                            \n                        \n                        \n                            \n                                Value : VT\n                            \n                        \n                        \n                            \n                                 Virginia\n                            \n                        \n                        \n                            \n                                Value : VA\n                            \n                        \n                        \n                            \n                                 Washington\n                            \n                        \n                        \n                            \n                                Value : WA\n                            \n                        \n                        \n                            \n                                 WestVirginia\n                            \n                        \n                        \n                            \n                                Value : WV\n                            \n                        \n                        \n                            \n                                 Wisconsin\n                            \n                        \n                        \n                            \n                                Value : WI\n                            \n                        \n                        \n                            \n                                 Wyoming\n                            \n                        \n                        \n                            \n                                Value : WY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRideshareClient\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nInformation for developers\nGit directions\nHere is an overview of the steps you need to take in order to make a\nsuccessful change to the repo. If you do not follow all these steps, there\nmay be problems!\ngit checkout -b your-branch # Omit the '-b' if the branch already exists.\n# Make changes to branch...\ngit add .  # Assuming you are in the root directory.\ngit commit -m 'Descriptive commit message'\ngit push -u origin your-branch # You can use just 'git push' if you've already pushed.Before you make a pull request, it's a good idea to merge any new changes\nfrom the dev branch, especially if you've spent a decent amount of time on\nyour changes (making it more likely that the dev branch has changed). This is\nthe best way to detect merge conflicts early.\n# To merge any new changes from the dev branch:\ngit checkout dev\ngit pull\ngit checkout your-branch\ngit merge devIf you get any merge conflicts, resolve them and then make a new commit (git add . && git commit -m 'Descriptive commit message).\nOnce you've pushed your branch, make a pull request on GitHub and make sure\nthat your PR is based off the dev branch and not master!\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Link   (src/.../link.model.ts)\n                        \n                        \n                            Overwrite   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/link.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Link\n                    \n                \n                    \n                        \n                            Enables the use of Strings as URL mappings to an actual resource in the backend \n\n                        \n                    \n                \n                    \n                        Link:     string\n\n                    \n                \n            \n        \n\n    src/app/utils/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Overwrite\n                    \n                \n                    \n                        \n                            Overwrite certain properties of a type, while keeping others. Thanks to\nhttps://stackoverflow.com/a/46941824!\n\n                        \n                    \n                \n                    \n                        Overwrite:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token.storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n  // apiUrl: 'http://192.168.60.54:2222'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/token.storage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
